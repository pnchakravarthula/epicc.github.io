{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["default_dxmap","require","default_hccmap","default_hcccoefn","default_ver","default_model","default_baserate","default_verbose","default_never_trump","interactions","v22_interactions","v23_interactions","v24_interactions","convertToUppperCase","string","result","toString","toUpperCase","demo_raf","condition_list","age","sex","model","orec","ver","baserate","i","length","j","temp_condition_list","split","trim","toLowerCase","raf_dict","member","parseFloat","toFixed","dx_desc","dx_array","verbose","temp_dx_array","hcc_dict","dx_hccs","hcc_cust_list","Object","entries","key","value","val","push","dx2cc","disabl","never_trump","unique_hccs","dx2hcc","dx_raf","raf_value","dx2raf","clean_dx","dx_values","clean_dxlist","dx_set_values","forEach","v","clean_cc","cc_array","temp_cc_array","hcc_values","clean_hcclist","cc_desc","hcc_dct","cc_info","cc","temp_hccmap","temp_cc","hccmap","hcc2raf","cc_raf","cc_combine","hccs","prep_hccs","module","exports","cc_increment_raf","base_cc_array","additional_cc_array","temp_base_cc_array","temp_additional_cc_array","hcc_increment","cc_increment","neg_arry","map","element","concat","cc_gaps","hcc_gaps","cc_gaps_raf","cc_diff","cclist","hcc_diff","cc_diff_raf","dx_diffc","base_dx_array","additional_dx_array","temp_base_dx_array","temp_additional_dx_array","dx_diff","dx_diffc_raf","dx_increment","dx_dict","dx_increments","dx_increment_raf","dx_gap","dx_gaps","dx_gap_raf","old_list","new_list","new_hccs","old_hccs","diff","cal1","cal2","cal3","raf","gaps","Math","round","Array","from","get_hcc_dx","dx_list","get_raf","dx_dct","dxdct_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","dxmap","unique_dx","dx","JSON","parse","stringify","agesex_edits","Set","hasOwnProperty","hcc","add","got_trumped","child","temp_a","temp_b","c","e","temp_c","trumped_hcc","hcc_list","list_dx","String","replace","dx_set","hcc_map","hcc_list_temp","isNaN","hcc1","hcc_set","hcc2","temp_hcc_list","trump_hccs","trumped_set","temp_hcc_set","filter","x","has","final_hccs","dxinc","mydx","temp_set","temp","old_dx","new_dx","disab","dxdiff","old_set","new_set","old_children","new_children","new_parents","hcc3","new_hccs_temp","downgraded_temp","downgraded","downgrade_to_temp","downgrade_to","upgraded","prep_hccs_set","upgraded_temp","del_hccs_temp","del_hccs_union","del_hccs","old_raf","new_raf","delta_raf","premium","endsWith","demo_codes","agesex","cond_dict","condition_resolver","condition","allhcc","flag","dx_hcc","set","dic_dxlist","None","temp_dict","mem_out_wrapper","dict1","dic_hcclist","conditionlist","list_hcc","item","Number","isInteger","startsWith","list_dx_clean","dct","includes","combined_hccs","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","female_sex","edit_dct","demo_lst","hcc_lst","hcccoefn","demo_detail","hcc_detail","hcc_raf","demo","label","score","raf_dct","age_maps","trunc","demo_str","male_sex","origds","medicaid","medicaid_condition","new_enrolee","age_labels","age_lower_bounds","age_upper_bounds","lower_bound","mcaid_flag","origds_flag","model_type","ds_str","sex_type","ccs","cc_set","int_hccs","diag_cats","my_dcs","key_set","new_values","arry1","hcc85_set","hcc47_set","hcc96_set","size","arry2","hcc188_set","hcc114_set","hcc57_set","hcc79_set","int_hccs_new","cnt","index"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/functions/functions.js\");\n","var default_dxmap = require('./load_dxmap.json');\nvar default_hccmap = require('./load_hccmap.json');\nvar default_hcccoefn = require('./load_hcccoefn.json');\nvar default_ver = 'v23';\nvar default_model = 'CNA'; \nvar default_baserate = 868.0;\nvar default_verbose = true;\nvar default_never_trump = 0;\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\n\n// function to convert to uppercase (a fix to unit tests)\nfunction convertToUppperCase(string) {\n  var result = string.toString().toUpperCase();\n  return result;\n}\n\n/**\n * Returns demographic raf value based on age, gender and coding model\n * @customfunction\n * @param {string[][]} condition_list accepts array\n */\nfunction demo_raf(condition_list, age=65, sex='M', model='', orec='0', ver='', baserate=0.0) {\n  for (var i = 0; i < condition_list.length; i++) {\n    for (var j = 0; j < condition_list[i].length; j++) {\n      condition_list = condition_list;\n    }\n  }\n  var temp_condition_list = condition_list.toString();\n  temp_condition_list = temp_condition_list.split(\",\");\n  for (i = 0; i < temp_condition_list.length; i++) {\n    temp_condition_list[i] = temp_condition_list[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n\n  var raf_dict = member(condition_list, age, sex, model, orec, ver, baserate);\n  var result = raf_dict['raf']['demo_score'];\n  result = parseFloat(result);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each DX Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} dx_array accepts array of hcc codes\n */\nfunction dx_desc(dx_array, ver='', age=0, sex='', verbose=true) {\n  for (i = 0; i < dx_array.length; i++) {\n      for (j = 0; j < dx_array[i].length; j++) {\n        dx_array = dx_array;\n      }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  verbose = verbose || default_verbose;\n  \n  var hcc_dict = dx_hccs(temp_dx_array, ver, age, sex, verbose);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns a comma separated list of the ccs represented by a list of DX codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx2cc(dx_array, age=0, ver='', model='', sex='', disabl=false, never_trump=0, verbose=false) {\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  never_trump = never_trump || default_never_trump;\n  var unique_hccs = dx2hcc(temp_dx_array, age, ver, model, sex, disabl, never_trump, verbose);\n  return unique_hccs.toString();\n}\n\n/**\n * Returns cc raf of associated dx codes after conversion to cc and trumping/interaction logic is applied (equivalent of cc_raf(dx2cc(dx_array))\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx_raf(dx_array, age=0, ver='', model='', sex='', disabl=false, verbose=false, never_trump=0, baserate=0.0) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var raf_value = dx2raf(temp_dx_array, age, ver, model, sex, disabl, verbose, never_trump, baserate);\n  var result = parseFloat(raf_value);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * Given a list of dx codes, return a list of deduped, normalized and untrumped dx codes valid for the coding model\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction clean_dx(dx_array, ver='') {\n  \n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  var dx_values = clean_dxlist(temp_dx_array, ver);\n  var dx_set_values = [];\n  dx_values.forEach(v => dx_set_values.push(v));\n  return dx_set_values.toString();\n}\n\n/**\n * Given a list of ccs, return a list of deduped, normalized and untrumped ccs codes valid for the coding model\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction clean_cc(cc_array, ver='') {\n  for (var i = 0; i < cc_array.length; i++) {\n      for (var j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  var hcc_values = clean_hcclist(temp_cc_array, ver);\n  return hcc_values.toString();\n}\n\n\n/**\n * Returns comma-separated list of descriptions of each HCC Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_desc(cc_array, ver='', age=0, sex='', verbose=false) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  verbose = verbose || default_verbose;\n  var hcc_dict = hcc_dct(temp_cc_array, ver, age, sex, verbose);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns multi-line info block for an HCC: Description, Children, Parents, RAF.  Past MVP can also feed a info pane / popup for desktop calculator like use.\nTo enable screen reader support, press Ctrl+Alt+Z To learn about keyboard shortcuts, press Ctrl+slash\n * @customfunction\n * @param {string[][]} cc accepts array of hcc codes\n */\nfunction cc_info(cc, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var temp_hccmap, raf_value;\n  for (i = 0; i < cc.length; i++) {\n      for (j = 0; j < cc[i].length; j++) {\n        cc = cc;\n      }\n  }\n  var temp_cc = cc.toString();\n  temp_cc = temp_cc.split(\",\");\n  for (i = 0; i < temp_cc.length; i++) {\n    temp_cc[i] = temp_cc[i].toString().trim();\n  }\n  var hccmap = default_hccmap[ver];\n  temp_hccmap = hccmap[temp_cc];\n  raf_value = hcc2raf(temp_cc, ver, model, disabl, age, never_trump, baserate);\n  raf_value = parseFloat(raf_value);\n  raf_value = raf_value.toFixed(3);\n  var result = `desc: ${temp_hccmap['desc']}, children: ${temp_hccmap['children']}, parents: ${temp_hccmap['parents']}, RAF: ${raf_value}`;\n  return result;\n}\n\n/**\n * Returns cc raf (does not include demographic RAF) of cc codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_raf(cc_array, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var raf_value = hcc2raf(temp_cc_array, ver, model, disabl, age, never_trump, baserate);\n  var result = parseFloat(raf_value);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * cc_combine\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_combine(cc_array, ver='', model='', age=0, disabl=false, never_trump=0) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  never_trump = never_trump || default_never_trump;\n  var hccs = prep_hccs(temp_cc_array, ver, model, age, disabl, never_trump);\n  return hccs.toString();\n}\nmodule.exports = cc_combine;\n/**\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between cc_lists.  Equivalent of cc_raf(cc_diff_increment)\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_increment_raf(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  age = age || 0;\n  disabl = disabl || false;\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, never_trump, baserate);\n  var result = hcc_dict['raf'];\n  result = parseFloat(result);\n  result = result.toFixed(3);\n  return result.toString(); \n}\n\n/**\n * Returns the net incremental change between cc_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+HCC001, +HCC18, - HCC019')\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_increment(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  age = age || 0;\n  disabl = disabl || false;\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, never_trump, baserate);\n  var neg_arry = (hcc_dict['upgraded']).map(element => '-' + element);\n  var result = hcc_dict['adds'].concat(neg_arry);\n  return result.toString(); \n}\n\n/**\n * Special case of diff_deletes that focuses on YoY Chronic Gaps and downgrades.  Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_gaps(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  \n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, baserate);\n  var result = hcc_dict['Deletes'].concat(hcc_dict['Downgraded']);\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes_raf that focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of cc_chronic(cc_diff_deletes). Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_gaps_raf(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  \n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver, model, age, sex, disabl, baserate);\n  var result = hcc_dict['raf'];\n  result = parseFloat(result);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:'\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n *\n */\nfunction cc_diff(base_cc_array=[], additional_cc_array=[], ver='', age=0, sex='', model='', disabl=false, never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver, age, sex, model, disabl, never_trump, baserate);\n  var result = `adds: ${cclist['adds']}, upgraded: ${cclist['upgraded']}, downgraded: ${cclist['downgraded']}, downgraded_to: ${cclist['downgrade_to']}, deletes: ${cclist['deletes']}`;\n  return result;\n}\n\n/**\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:'\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n *\n */\nfunction cc_diff_raf(base_cc_array=[], additional_cc_array=[], ver='', age=0, sex='', model='', disabl=false, never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver, age, sex, model, disabl, never_trump, baserate);\n  var result = parseFloat(cclist['raf']);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * dx_diffc\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dxs codes\n *\n */\nfunction dx_diffc(base_dx_array=[], additional_dx_array=[], ver='', model='', never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = dx_diff(temp_base_dx_array, temp_additional_dx_array, ver, model, never_trump, baserate);\n  var result = `adds: ${cclist['adds']}, upgraded: ${cclist['upgraded']}, downgraded: ${cclist['downgraded']}, downgraded_to: ${cclist['downgrade_to']}, deletes: ${cclist['deletes']}`;\n  return result;\n}\n\n/**\n * dx_diffc_raf\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dxs codes\n *\n */\nfunction dx_diffc_raf(base_dx_array=[], additional_dx_array=[], ver='', model='', never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = dx_diff(temp_base_dx_array, temp_additional_dx_array, ver, model, never_trump, baserate);\n  var result = parseFloat(cclist['raf']);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * Returns the net incremental change between dx_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+dx001, +dx18, - dx019')\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of cc codes\n * @param {string[][]} additional_dx_array accepts array of cc codes\n *\n */\nfunction dx_increment(base_dx_array=[], additional_dx_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, never_trump, baserate);\n  var neg_arry = (dx_dict['upgraded']).map(element => '-' + element);\n  var result = dx_dict['adds'].concat(neg_arry);\n  return result.toString();\n}\n\n/**\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between dx_lists.  Equivalent of dx_raf(dx_diff_increment)\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of cc codes\n * @param {string[][]} additional_dx_array accepts array of cc codes\n *\n */\nfunction dx_increment_raf(base_dx_array=[], additional_dx_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, never_trump, baserate);\n  var result = dx_dict['raf'];\n  var result = parseFloat(result);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes that focuses on YoY Chronic Gaps and downgrades.\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dx codes\n *\n */\nfunction dx_gap(base_dx_array=[], additional_dx_array=[],  ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  var dx_dict = dx_gaps(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, baserate);\n  var result = dx_dict['Deletes'].concat(dx_dict['Downgraded']);\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes_raf that focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of dx_chronic(dx_diff_deletes). Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dx codes\n *\n */\nfunction dx_gap_raf(base_dx_array=[], additional_dx_array=[],  ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  var dx_dict = dx_gaps(temp_base_dx_array, temp_additional_dx_array, ver, model, age, sex, disabl, baserate);\n  var result = dx_dict['raf'];\n  var result = parseFloat(result);\n  result = result.toFixed(3);\n  return result.toString();\n}\n\nfunction hcc_gaps(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, baserate=0.0) {\n  /*\n  Utility to identify hccs that were dropped or downgraded from one list to the next\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n\n  var new_hccs = prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl);\n  var old_hccs = prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl);\n\n  var diff = hcc_diff(old_hccs, new_hccs, ver=ver, model=model, disabl=disabl, baserate=baserate);\n  var cal1 = parseFloat(hcc2raf(diff['deletes'], ver, model, disabl, baserate));\n  var cal2 = parseFloat(hcc2raf(diff['downgraded'], ver, model, disabl, baserate));\n  var cal3 = parseFloat(hcc2raf(diff['downgrade_to'], ver, model, disabl, baserate));\n  var raf = -(cal1+cal2)+cal3;\n  var gaps = { \"Deletes\": diff[\"deletes\"], \"Downgraded\": diff[\"downgraded\"], \"raf\": raf, \"premium\": Math.round(raf * baserate, 2) };\n  return gaps;\n}\n\nfunction dx_gaps(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, baserate=0.0) {\n  /*\n  Utility to identify hccs that were dropped or downgraded from one list to the next\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n\n  var old_hccs = dx2hcc(old_list, age=age, ver=ver, model=model, disabl=disabl);\n  var new_hccs = dx2hcc(new_list, age=age, ver=ver, model=model, disabl=disabl);\n  var diff = hcc_gaps(old_hccs, new_hccs, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\n  diff['Downgraded'] = Array.from(get_hcc_dx(diff['Downgraded'], clean_dxlist(old_list, ver), ver));\n  diff['Deletes'] = Array.from(get_hcc_dx(diff['Deletes'], clean_dxlist(old_list, ver), ver));\n  return diff;\n}\n\nfunction dx2raf(dx_list, age=0, ver='', model='', sex='', disabl=false, verbose=false, never_trump=0, baserate=0.0) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n\n  var hccs = dx2hcc(dx_list=dx_list, age=age, ver=ver, model=model, sex=sex, disabl=disabl, never_trump=never_trump, verbose=verbose);\n  var raf = get_raf([], hccs, ver=ver, model=model, verbose=verbose, baserate=baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction dx2hcc(dx_list, age=0, ver='', model='', sex='', disabl=false, never_trump=0, verbose=false) {\n  /*\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\n  :param dx_list: list of str\n                  List of DX Codes (case and decimal insensitive)\n  :param ver: str\n              HCC Model version\n  :param age: float\n              Beneficiary age\n  :param verbose:\n  :param disabl: bool\n                  Disability flag\n  :param sex: Gender {\"M\" or \"F\"}\n  :return: list of str\n          List of HCC codes\n  */\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  never_trump = never_trump || default_never_trump;\n  var dx_dct = dx_hccs(dx_list, ver=ver, age=age, sex=sex, verbose=verbose);\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump=never_trump);\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  unique_hccs.sort(collator.compare);\n  unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\n  return unique_hccs;\n}\n\nfunction dx_hccs(dx_list, ver='', age=0, sex='', verbose=true) {\n  /*\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\n  :param dx_list: list of str\n                  List of dx codes; case and decimal insensitive\n  :param ver: str\n              Optional HCC version. Otherwise uses default version of ccalc object\n  :param age: float\n              Member age\n  :param sex: str\n              Member gender {\"M\"/\"F\"}\n  :param verbose: bool\n                  Include Non HCC DX in outputs\n  :return: dict\n          Dict of unique DX codes and their corresponding hcc codes\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  verbose = verbose || default_verbose;\n\n  var dxmap = default_dxmap[ver];\n  var hccmap = default_hccmap[ver];\n  var dx_dct = {};\n\n  var unique_dx = clean_dxlist(dx_list, ver);\n  // Validate DX against model and pull in DX info  \n  for (var dx of unique_dx) {\n      if (dx in dxmap) {\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\n      } else if (verbose) {\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} };\n      }\n  }\n\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\n      agesex_edits(dx_dct, age, sex);\n  }\n\n  // Find all unique HCCs that are valid in the hcc ver\n  var unique_hccs = new Set();\n\n  for (var key in dx_dct) {\n      if (dx_dct.hasOwnProperty(key)) {\n          for (var hcc in dx_dct[key]['hccs']) {\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\n                  }\n              }\n          }\n      }\n  };\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\n\n  for (var dx in dx_dct) {\n      if (dx_dct.hasOwnProperty(dx)) {\n          var temp_a = dx_dct[dx]['hccs'];\n          var temp_b = [];\n          for (var i in dx_dct[dx]['hccs']) {\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] });\n          }\n          var c = temp_a.map(function (e, i) {\n              return [e, temp_b[i]];\n          });\n          var temp_c = {};\n          for (var key in c) {\n              if (c.hasOwnProperty(key)) {\n                  temp_c[c[key][0]] = c[key][1];\n              }\n          }\n          dx_dct[dx]['hccs'] = temp_c;\n          for (var trumped_hcc in got_trumped) {\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\n                  if (trumped_hcc in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\n                      dx_dct[dx]['hccs'][trumped_hcc]['trumped by'] = got_trumped[trumped_hcc];\n                  }\n              }\n          }\n      }\n  }\n  return dx_dct;\n}\n\nfunction dxdct_hccs(dx_dct, never_trump=0) {\n  never_trump = never_trump || default_never_trump;\n  var hcc_list = new Set();\n\n  if (never_trump == 0) {\n      for (var key in dx_dct) {\n          if (dx_dct.hasOwnProperty(key)) {\n              for (var hcc in dx_dct[key]['hccs']) {\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                      if (!(dx_dct[key]['hccs'][hcc].hasOwnProperty(['trumped by']))) {\n                        hcc_list.add(hcc);                          \n                      }\n                  }\n              }\n          }\n      }\n      hcc_list = Array.from(hcc_list);\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n      hcc_list.sort(collator.compare);\n  } else {\n    var hcc_list = new Set();\n    for (var key in dx_dct) {\n        if (dx_dct.hasOwnProperty(key)) { \n            for (var hcc in dx_dct[key]['hccs']){\n                hcc_list.add(hcc);\n            }\n        }\n    }\n    hcc_list = Array.from(hcc_list);\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    hcc_list.sort(collator.compare);\n  }\n  return hcc_list;\n}\n\nfunction clean_dxlist(dx_list, ver='') {\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  var dxmap = default_dxmap[ver];\n  var list_dx = [];\n  for (var i =0; i < dx_list.length;  i++) {\n      if (dx_list[i] != '') {\n          list_dx[i] = (String(dx_list[i]).replace('.', '')).toUpperCase();\n      }\n  }\n  if (typeof (list_dx) == 'string') {\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  var dx_set = new Set();\n  for (var dx = 0; dx < list_dx.length; dx++) {\n      if (dxmap.hasOwnProperty(list_dx[dx])) {\n          dx_set.add(list_dx[dx]);\n      }\n  }\n  return dx_set;\n}\n\nfunction clean_hcclist(hcc_list, ver='') {\n  // Convert string to list, dedupe, and ensure HCC are formatted correctly.\n\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  var hcc_map = default_hccmap[ver];\n\n  if (typeof hcc_list == 'string') {\n    hcc_list = hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  else if (typeof hcc_list == 'number') {\n    hcc_list = [hcc_list];\n  }\n\n  // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\n  var hcc_list_temp = [];\n  for (var hcc of hcc_list) {\n      if (!isNaN(hcc.toString().trim())) {\n          hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\n      } else {\n          hcc_list_temp.push(hcc.trim().toUpperCase());\n      }\n  }\n  hcc_list = hcc_list_temp;\n  //Replacing HCC019 to HCC19\n  var hcc_list_temp = [];\n  for (var hcc1 of hcc_list) {\n      hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\n  }\n  hcc_list = hcc_list_temp;\n\n  // We want HCC1 rather than HCC001, etc.\n  var hcc_set = new Set();\n  for (var hcc2 of hcc_list) {\n      if (hcc_map.hasOwnProperty(hcc2)) {\n          hcc_set.add(hcc2);\n      }\n  }\n  return Array.from(hcc_set);\n}\n\nfunction hcc2raf(hcc_list, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\n  /*\n  Utility for calculating hcc raf for a list of hccs\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n\n  var temp_hcc_list = prep_hccs(hcc_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump);\n  var raf = get_raf([], temp_hcc_list, ver=ver, model=model, baserate=baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction prep_hccs(hcc_list, ver='', model='', age=0, disabl=false, never_trump=0) {\n  /*\n  Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\n  as they at the DX level\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  never_trump = never_trump || default_never_trump;\n  var hccs = trump_hccs(hcc_list, ver=ver, never_trump=never_trump);\n  hccs = interactions[ver](hccs, model, disabl, age);\n  return hccs;\n}\n\nfunction trump_hccs(hcc_list, ver='', never_trump=0) {\n  // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  never_trump = never_trump || default_never_trump;\n\n  var hccmap = default_hccmap[ver];\n\n  // Make sure we're getting the right format\n  hcc_list_temp = clean_hcclist(hcc_list, ver);\n  if (never_trump == 0) {\n      var hcc_set = new Set(hcc_list_temp);\n      var trumped_set = new Set();\n      for (var hcc of hcc_set) {\n          if (hcc in hccmap) {\n              for (var child of hccmap[hcc]['children']) {\n                  trumped_set.add(child);\n              }\n          }\n      }\n      var temp_hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)));\n      hcc_list_temp = Array.from(temp_hcc_set);\n  }\n\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  hcc_list_temp.sort(collator.compare);\n  return hcc_list_temp;\n}\n\nfunction hcc_dct(hcc_list, ver='', age=0, sex='', verbose=true) {\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  verbose = verbose || default_verbose;\n\n  var hccmap = default_hccmap[ver];\n  var unique_hccs = new Set();\n  for (var hcc of hcc_list) {\n      if (hcc in hccmap) {\n          unique_hccs.add(hcc);\n      }\n  }\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n  var hcc_dct = {};\n\n  for (var hcc of unique_hccs) {\n      if (hccmap.hasOwnProperty(hcc)) {\n          hcc_dct[hcc] = JSON.parse(JSON.stringify(hccmap[hcc]))  // Get details for this hcc Code\n          delete hcc_dct[hcc]['parents'];\n          delete hcc_dct[hcc]['children'];\n      } else if (verbose) {\n          hcc_dct[hcc] = { \"desc\": \"\", \"parents\": {} };\n      }\n\n  }\n\n  for (var hcc in hcc_dct) {\n      for (var trumped_hcc in got_trumped) {\n          if (trumped_hcc == hcc) {  // If we find trumped HCC, replace with note of its demise\n              hcc_dct[hcc]['trumped by'] = got_trumped[trumped_hcc];\n          }\n      }\n  }\n\n  return hcc_dct;\n}\n\nfunction hcc_increment(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\n  // Utility to identify the incremental HCCs and value of adding a new list HCCs to a base list of HCCs\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n\n  var new_hccs = prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\n  var old_hccs = prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\n  new_hccs = new_hccs + ','.concat(old_hccs)\n  var final_hccs = prep_hccs(new_hccs,ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\n  var diff = hcc_diff(old_hccs, final_hccs, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate)\n  diff[\"final_hccs\"] = final_hccs;\n  delete diff['downgraded'];\n  delete diff['downgrade_to'];\n  delete diff['deletes'];\n  return diff;\n}\n\nfunction dx_increments(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\n  // Utility to identify the incremental HCCs and value of adding a new list DXs to a base list of DXs\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || this.default_baserate;\n  never_trump = never_trump || this.default_never_trump;\n\n  var old_hccs = dx2hcc(old_list, age=age, ver=ver, model=model, disabl=disabl, this.never_trump);\n  var new_hccs = dx2hcc(new_list, age=age, ver=ver, model=model, disabl=disabl, this.never_trump);\n  var diff = hcc_increment(old_hccs, new_hccs, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\n\n  var dxinc = {\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], clean_dxlist(new_list, ver), ver)),\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], clean_dxlist(old_list, ver), ver)),\n  };\n  dxinc['raf'] = diff['raf'];\n  dxinc['premium'] = diff['premium'];\n  return dxinc;\n}\n\nfunction get_hcc_dx(hcc_list, dx_list, ver) {\n  // Utility to get the Dx Codes by comparing hcc_list with dx_list\n  var dxmap = default_dxmap[ver];\n  var hcc_set = new Set(hcc_list);\n  var mydx = new Set();\n  for (var dx of dx_list) {\n      var temp_set = new Set(dxmap[dx]['hccs']);\n      var temp = ([...temp_set].filter(x => hcc_set.has(x)));\n      if (dxmap.hasOwnProperty(dx) && temp.length) {\n          mydx.add(dx);\n      }\n  }\n  // mydx = {dx for dx in dx_list if dx in dxmap and dxmap[dx]['hccs'].intersection(hcc_set)}\n  return mydx;\n}\n\nfunction dx_diff(old_list=[], new_list=[], ver='', model='', never_trump=0, baserate=0.0) {\n  /*\n  Utility to compare HCCs and RAF for two lists of dx codes\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n\n  var old_dx = clean_dxlist(old_list, ver);\n  var new_dx = clean_dxlist(new_list, ver);\n  var old_hccs = dx2hcc(old_list, age='', ver=ver, model=model, sex='', disab='', never_trump=never_trump, verbose='');\n  var new_hccs = dx2hcc(new_list, age='', ver=ver, model=model, sex='', disab='', never_trump=never_trump, verbose='');\n\n  var diff = hcc_diff(old_hccs, new_hccs, ver=ver, model=model, never_trump=never_trump, baserate=baserate);\n  var dxdiff = {\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], new_dx, ver)),\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], old_dx, ver)),\n      \"downgraded\": Array.from(get_hcc_dx(diff[\"downgraded\"], old_dx, ver)),\n      \"downgrade_to\": Array.from(get_hcc_dx(diff[\"downgrade_to\"], new_dx, ver)),\n      \"deletes\": Array.from(get_hcc_dx(diff[\"deletes\"], old_dx, ver)),\n  }\n  dxdiff['raf'] = diff['raf'];\n  dxdiff['premium'] = diff['premium'];\n  return dxdiff;\n}\n\nfunction hcc_diff(old_list=[], new_list=[], ver='', age=0, model='', disabl=false, never_trump=0, baserate=0.0) {\n  /*\n  Calculate the changes between two hcc lists, {\"adds\":[], \"upgraded\":[] \"downgraded\":[], \"deletes\":[]}\n  - \"adds\" are new HCC Codes (includes upgrades of other codes),\n  - \"upgraded\" are codes from base that are no longer relevant due to new codes\n  - \"downgraded\" are codes from base that are present at a lower specificity in new\n  - \"deletes\" are codes from base that are no longer present at all\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  \n  var hccmap = default_hccmap[ver];\n  // Prep cleans and trumps the list and add interactions\n  var old_set = new Set(prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump));\n  var new_set = new Set(prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump));\n\n  // Find the full set of codes that each set can trump\n  var old_children = new Set();\n  var new_children = new Set();\n  var new_parents = new Set();\n  for (var hcc1 of old_set) {\n      if (hcc1 in hccmap) {\n          for (var child of hccmap[hcc1]['children']) {\n              old_children.add(child)\n          }\n      }\n  }\n  for (var hcc2 of new_set) {\n      if (hcc2 in hccmap) {\n          for (var child of hccmap[hcc2]['children']) {\n            new_children.add(child)\n          }\n      }\n  }\n  for (var hcc3 of new_set) {\n      if (hcc3 in hccmap) {\n          for (var child of hccmap[hcc3]['parents']) {\n            new_parents.add(child)\n          }\n      }\n  }\n\n  // New HCCs, except where they are trumped by old HCCs (downgrades)\n  var new_hccs_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  var new_hccs = new Set([...new_hccs_temp].filter(x => !old_children.has(x)));\n  var downgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  var downgraded = new Set([...downgraded_temp].filter(x => new_parents.has(x)));\n  var downgrade_to_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  var downgrade_to = new Set([...downgrade_to_temp].filter(x => old_children.has(x)));\n  var upgraded = new Set();\n  if (never_trump === 1) {\n      var prep_hccs_set = new Set(prep_hccs(Array.from(new_set),ver=ver, model=model, age=age, disabl=disabl));\n      var upgraded_temp = new Set([...old_set].filter(x => !prep_hccs_set.has(x)));\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x))); // Noqa E501\n  } else {\n      var upgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n  }\n  var del_hccs_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  var del_hccs_union = new Set([...upgraded, ...downgraded]);\n  var del_hccs = new Set([...del_hccs_temp].filter(x => !del_hccs_union.has(x)));\n  var old_raf = hcc2raf(Array.from(old_set), ver=ver, model=model, baserate=baserate, never_trump=never_trump);\n  var new_raf = hcc2raf(Array.from(new_set), ver=ver, model=model, baserate=baserate, never_trump=never_trump);\n  var delta_raf = new_raf - old_raf;\n  var premium = (delta_raf * baserate).toFixed(2);\n  var diff = {\n      \"adds\": Array.from(new_hccs),\n      \"upgraded\": Array.from(upgraded),\n      \"downgraded\": Array.from(downgraded),\n      \"downgrade_to\": Array.from(downgrade_to),\n      \"deletes\": Array.from(del_hccs),\n      \"raf\": delta_raf,\n      \"premium\": premium\n  }\n  return diff;\n}\n\nfunction member(condition_list, age=65, sex='M', model='', orec='0', ver='', baserate=0.0) {\n  /*\n      Builds an HCC risk score for a Medicare Advantage member given demographic and disease factors\n      :param dx_list: list of str\n                      List of DX codes; case and decimal insensitive\n      :param age: float\n                  Age of member\n      :param sex: str\n                  Gender of Member: Accepts \"M\"/\"F\", \"Male\"/\"Female\" or CMS numerical codes 1/2\n      :param model: str\n                  HCC Model to be used for member. Accepts:\n                      \"CNA\": Community - Non-dual aged\n                      \"CND\": Community - Non-dual disabled\n                      \"CFA\": Community - Full Benefit dual aged\n                      \"CFD\": Community - Full Benefit dual disabled\n                      \"CPA\": Community - Partial Benefit dual aged\n                      \"CPD\": Community - Partial Benefit dual disabled\n                      \"INS\": Institutional\n                      \"NE\": New enrollee\n                      \"SNPNE\": C-SNP new enrolee\n      :param orec: str\n                  Original Reason for Entitlement:\n                      \"0\": Old age (OASI)\n                      \"1\": Disability (DIB)\n                      \"2\": End Stage Renal Disease (ESRD)\n                      \"3\": Both DIB and ESRD\n\n      :param ver: str\n                  Version of HCC Model to be used (overrides default version set in Ccalc).\n                  Accepts {'v22', 'v23', 'v24'}\n      :return: dict\n              Map of factors and risk scores for member\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  var verbose = default_verbose;\n  var hccmap = default_hccmap[ver];\n  \n  // Get age/sex/disability demographic codes\n  var disabl = model.endsWith(\"D\");\n  var demo_codes = agesex(age, sex, orec, model);\n\n  // Condition resolver to get the condition list as either Dx or HCC\n  var cond_dict = condition_resolver(condition_list, ver=ver, model=model);\n  var condition = cond_dict['condition'];\n  var allhcc = cond_dict['allhcc'];  \n  var flag;\n  var raf;\n  var dx_dct;\n\n  if (allhcc == 1) {\n      var dx_dct = hcc_dct(condition, ver=ver, age=age, sex=sex, verbose=verbose);\n      var unique_hccs = prep_hccs(condition, ver=ver, model=model, age=age);\n      unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver=ver, model=model, baserate=baserate);\n      flag = 'hcc';\n      var dx_hcc = [];\n      // Update the dictionary with interaction codes and desc as Interaction Codes\n      for (var hcc of unique_hccs) {\n        if (!(hcc in dx_dct)) {\n          dx_dct.set(hcc, \"{'desc': 'Interaction Codes'}\");\n        }\n      }\n\n      // Appending dictionary to the json format\n      for (var hcc in dx_dct) {\n        var dic_dxlist = {};\n        dic_dxlist['dx_name'] = None;\n        dic_dxlist['dx_desc'] = None;\n        var temp_dict = {};\n        temp_dict[hcc] = dx_dct[hcc];\n        var hcc_list = mem_out_wrapper(dict1=temp_dict, raf=raf['hcc_detail'], baserate=baserate);\n        dic_dxlist['hcc_list'] = hcc_list;\n        dx_hcc.push(dic_dxlist);\n      }      \n  } else {\n      // process DX list\n      dx_dct = dx_hccs(condition, ver, age, sex, verbose);\n      var unique_hccs = dxdct_hccs(dx_dct);\n      unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver, model, verbose, baserate);\n      flag = 'dx';\n      dx_hcc = [];\n      // Appending dictionary to the json format\n      for (var dx in dx_dct) {\n        var dic_dxlist = {};\n        dic_dxlist['dx_name'] = dx;  // Get details for this DX Code\n        dic_dxlist['dx_desc'] = dx_dct[dx]['desc'];\n        var hcc_list = mem_out_wrapper(raf=raf['hcc_detail'], dict1=dx_dct[dx]['hccs'], baserate=baserate)\n        dic_dxlist['hcc_list'] = hcc_list;\n        dx_hcc.push(dic_dxlist);\n      }          \n\n      // Appending interaction codes to the dictionary\n      for (var hcc of unique_hccs) {\n        if (!(hcc in hccmap)) {\n          var dic_dxlist = {};\n          dic_dxlist['dx_name'] = None; // Get details for this DX Code\n          dic_dxlist['dx_desc'] = None;\n          dic_hcclist = {};\n          dic_hcclist['hcc_name'] = hcc;\n          dic_hcclist['hcc_desc'] = 'Interaction Codes';\n          dic_hcclist['trumped_by'] = [];\n          dic_hcclist['hcc_raf'] = raf['hcc_detail'][hcc];\n          dic_hcclist['premium'] = Math.round(dic_hcclist['hcc_raf'] * baserate);\n          hcc_list = [];\n          hcc_list.push(dic_hcclist);\n          dic_dxlist['hcc_list'] = hcc_list;\n          dx_hcc.push(dic_dxlist);\n        }        \n      }\n  }\n\n  return {\n      \"hcc_model\": { \"version\": ver, \"model\": model },\n      \"demo\": { \"age\": age, \"sex\": sex, \"orec\": orec },\n      \"raf\": raf,\n      'flag': flag,\n      \"dx_hccs\": dx_dct\n  }\n}\n\nfunction mem_out_wrapper(raf, baserate, dict1={}) {\n  // Utility to convert dictionary output to desired format\n  hcc_list = [];\n  for (var hcc in dict1) {\n    var dic_hcclist = {};\n    dic_hcclist['hcc_name'] = hcc;\n    dic_hcclist['hcc_desc'] = dict1[hcc]['desc'];\n    dic_hcclist['trumped_by'] = [];\n    if ('trumped by' in dict1[hcc]) {\n        dic_hcclist['trumped_by'] = dict1[hcc]['trumped by'].split();\n        dic_hcclist['hcc_raf'] = None;\n        dic_hcclist['premium'] = None;\n    } else {\n        dic_hcclist['hcc_raf'] = raf[hcc];\n        dic_hcclist['premium'] = Math.round(dic_hcclist['hcc_raf'] * baserate);\n    }\n    hcc_list.push(dic_hcclist);\n  }\n  return hcc_list;\n}\n\nfunction condition_resolver(conditionlist, ver='', model='', never_trump=0, allhcc=0) {\n  /*\n  Utility to convert the condition list to one: either Dx or HCC\n  returns dict of:\n      'condition': list of Dx/HCC based on the input\n      'allhcc' : boolean,\n                 Provides whether all were Dx or we converted them to HCC\n  */\n\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  never_trump = never_trump || default_never_trump;\n\n  var list_hcc = [];\n  for (item in conditionlist) {\n    if (Number.isInteger(item) || item.startsWith('HCC')){\n      list_hcc.push(item);\n    }\n  }\n  var list_dx = [];\n  var list_dx_clean = [];\n  var dct = new Set();\n  if ((list_hcc.length > 0) || allhcc) {\n      allhcc = 1;\n      list_dx = conditionlist.filter(item => !(list_hcc.includes(item)));\n      list_dx_clean = clean_dxlist(list_dx, ver);\n      var hccs = dx2hcc(list_dx_clean, ver=ver, model=model, never_trump=never_trump);\n      var combined_hccs = list_hcc.concat(hccs);\n      dct = { 'allhcc': allhcc, 'condition': combined_hccs };\n\n  } else {\n      list_dx = conditionlist;\n      dct = { 'allhcc': allhcc, 'condition': list_dx };\n  }\n  return dct;\n}\n\nfunction agesex_edits(dx_dct, age, sex) { // noqa C901\n  /*\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\n  Valid for V22, V23, V24\n  :param dx_dct: dict\n                 Dict of {DX:HCC}\n  :param age: float\n              Age of member\n  :param sex: str\n              Member's gender\n  :return: dx_dct: dict\n              Dictionary of {DX:HCC} edited per member age/sex rules\n  */\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\n      \"C7490\", \"C7491\", \"C7492\"];\n\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\n\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\n\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\n\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\n\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\n\n  var ed_conjoined = [\"Q894\"];\n\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\n      \"Q793\", \"Q794\", \"Q7951\"];\n\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\n\n  var ed_disruptive_mood = [\"F3481\"];\n\n  var ed_hemophilia = [\"D66\", \"D67\"];\n\n  // Optimal to have the loop outside of the age checks, but this is easier to read\n  for (var dx in dx_dct) {\n\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\n      if (age < 18 && ed_leukemia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC9\"]);\n      }\n\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\n      if (age < 18 && ed_bronchitis.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC161\"]);\n      }\n\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\n        dx_dct[dx]['hccs'] = [(\"HCC42\")];\n      }\n\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\n      if (age < 50 && ed_breastca.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC11\"]);\n      }\n\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\n      // If age <2 out of payment model\n      if (age < 2 && ed_emphysema.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Edit for newborn low birthweight. If age 1+ out of payment model\n      if (age != 0 && ed_low_bw.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\n      if (age >= 1 && ed_conjoined.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC97\"]);\n      }\n\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\n      // (HCC 162) and age <2 (HCC 127).\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC162\"]);\n      }\n\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\n      //  and female (HCC 75)\n      female_sex = [\"2\", \"F\", \"Female\"];\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC75\"]);\n      }\n  }\n\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\n  for (dx in dx_dct) {\n      if (dx_dct[dx]['hccs'] != ([\"HCC1\"])) {\n          edit_dct[dx] = dx_dct[dx];\n      }\n  }\n\n  return edit_dct;\n}\n\nfunction get_raf(demo_lst, hcc_lst, ver='', model='', verbose=true, baserate=0.0) {\n  /*\n  Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\n  and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\n  {\n      raf: float of total risk factor,\n      premium: PM PM payment for members of this raf and base rate($)\n      demo_raf: float of demographic risk factor\n      hcc_raf: float of hcc risk factor\n      demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\n      hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\n  :param model: str\n                  Hcc model for use\n  :param demo_lst: list of str\n                  List of applicable demographic codes for a member (eg CNA_F65_70)\n  :param hcc_lst: list of str\n                  List of hccs (assumes hccs have already been trumped)\n  :param ver: str\n                  Optional HCC version to be used in calculation\n  :param model: str\n          Optional HCC model to be used in calculation\n  :param verbose: bool\n  :param baserate: float\n                  pmpm premium base rate\n  :return: dict\n          raf_dct\n  */\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\n  baserate = baserate || default_baserate;\n  verbose = verbose || default_verbose;\n\n  var hcccoefn = default_hcccoefn[ver];\n  var demo_detail = {};\n  var hcc_detail = {};\n  var demo_raf = 0.0;\n  var hcc_raf = 0.0;\n\n  for (var demo of demo_lst) {\n      if (hcccoefn.hasOwnProperty(demo)) {\n          demo_detail[demo] = hcccoefn[demo];\n          demo_raf += hcccoefn[demo];\n      }\n  }\n\n  for (var hcc = 0; hcc < hcc_lst.length; hcc++) {\n      var label = model + \"_\" + hcc_lst[hcc];\n      if (label in hcccoefn) {\n          hcc_detail[hcc] = hcccoefn[label];\n          hcc_raf += hcccoefn[label];\n      } else if (verbose) {\n          hcc_detail[hcc] = 0.0;\n      }\n  }\n\n  var score = (demo_raf + hcc_raf).toFixed(4);\n  var raf_dct = {\n      \"score\": score,\n      \"premium\": (score * baserate).toFixed(),\n      \"demo_score\": (demo_raf).toFixed(4),\n      \"hcc_score\": (hcc_raf).toFixed(4),\n      \"demo_detail\": demo_detail,\n      \"hcc_detail\": hcc_detail\n  };\n  return raf_dct;\n}\n\nfunction agesex(age, sex, orec, model) {\n  /*\n      Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\n      Valid for V22, V23, V24\n      :param age: float\n                  Age of beneficiary\n      :param sex: str\n                  Gender of beneficiary\n      :param orec: str\n                  Original reason for enrollment\n      :param model: str\n                  Code for CMS model (str)\n      :return: list of str\n              list of demographic str for looking up demo coefficients\n  */\n  let age_maps = {\n      \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\n      \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\n  };\n\n  age = Math.trunc(age);  // In case float is passed and someone at upper age bound\n\n  let demo_str;\n  let male_sex = [\"M\", \"MALE\", \"1\"];\n  if (male_sex.includes(sex.toUpperCase())) {\n      demo_str = 'M';\n  } else {\n      demo_str = \"F\";\n  }\n\n  // Directly from CMS AGESEXV2\n  let disabl = (age < 65) && (orec != \"0\");\n  let origds = (orec == \"1\") && !(disabl);\n  let medicaid;\n  let medicaid_condition = [\"CP\", \"CF\"];\n  if (medicaid_condition.includes(model)) {\n      medicaid = true;\n  } else {\n      medicaid = false;\n  }\n  let new_enrolee = model.endsWith(\"NE\");\n  let age_labels = [];\n  if (new_enrolee) {\n      age_labels = age_maps[\"NE\"];\n  } else {\n      age_labels = age_maps[\"STD\"];\n  }\n\n  // Derive the lower bound & upper bound of each age band from ordered list of age labels\n  let age_lower_bounds = [];\n  let age_upper_bounds = [];\n  for (let i in age_labels) {\n      let split = age_labels[i].split(\"_\");\n      age_lower_bounds.push(split[0]);\n      age_upper_bounds.push(split[1]);\n  }\n\n  for (const [i, lower_bound] of age_lower_bounds.entries()) {\n      if (i == age_lower_bounds[age_lower_bounds.length] - 1) {\n          demo_str += age_labels[i];\n          break;\n      }\n      if ((lower_bound >= age) && (lower_bound < age_lower_bounds[i + 1])) {\n          demo_str += age_labels[i];\n          break;\n      }\n  }\n\n  if (model.endsWith(\"NE\")) {\n      if (medicaid) {\n          let mcaid_flag = \"\";\n      } else {\n          mcaid_flag = \"N\";\n      }\n      if (origds) {\n          let origds_flag = \"\";\n      } else {\n          origds_flag = \"N\";\n      }\n      demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\n  }\n\n  let demo_lst = [model + \"_\" + demo_str];\n  let model_type = [\"CNA\", \"CFA\", \"CPA\"];\n  let ds_str;\n  let sex_type;\n\n  if ((model_type.includes(model)) && origds) {\n      if (sex === \"M\") {\n          sex_type = \"Male\";\n      } else {\n          sex_type = \"Female\";\n      }\n      ds_str = model + \"_OriginallyDisabled_\" + sex_type;\n      demo_lst.push(ds_str);\n  }\n  return demo_lst;\n}\n\nfunction v22_interactions(ccs, model, disabl=false, age='') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\n      \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\n  if (arry1.includes(model)) {\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n    }else {\n      int_hccs[\"HCC47_gCancer\"] = new Set();\n    }\n\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n    }\n\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\n    }\n\n    if (my_dcs[\"RENAL\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gRenal_V23\"] = new Set();\n    }\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n    }else {\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n    }\n    if (hcc96_set.size && hcc85_set.size) {\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n    }else {\n      int_hccs[\"HCC85_HCC96\"] = new Set();\n    }\n    if (my_dcs[\"gPsychiatric\"].size && my_dcs[\"gSubstanceAbuse\"].size) {\n      int_hccs[\"gSubstanceAbuse_gPsychiatric\"] =  my_dcs[\"gSubstanceAbuse\"];\n    }else {\n      int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = new Set();\n    }\n  }\n\n  // institutional model interactions\n  var arry2 = ['INS'];\n  if (arry2.includes(model)) {\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n    \n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n    if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\n      int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\n    }else {\n      int_hccs[\"CHF_gCopdCF\"] = new Set();\n    }\n\n    if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\n    }else {\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\n    }\n\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n    }\n\n\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n    }else {\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n    }\n\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n    }\n\n    if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\n      int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\n    }else {\n      int_hccs[\"DIABETES_CHF\"] = new Set();\n    }\n\n\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n    }else {\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n    }\n\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n    }\n\n\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n    }else {\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n    }\n\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n    }\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n    }\n    if (hcc79_set.size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n    }\n  }\n\n  if (disabl === true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      if (\"PRESSURE_ULCER\" in int_hccs) {\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      }      \n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}\n\nfunction v23_interactions(ccs, model, disabl=false, age='') {\n  /*\n  Calculated interaction HCCs given a dict of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\n      \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\n  if (arry1.includes(model)) {\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n    \n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n        int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n    }else {\n      int_hccs[\"HCC47_gCancer\"] = new Set();\n    }\n    \n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n    }\n\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\n    }\n    \n    if ( my_dcs[\"RENAL_V23\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gRenal_V23\"] = new Set();\n    }\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n    }else {\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n    }\n    if (hcc96_set.size && hcc85_set.size) {\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n    }else {\n      int_hccs[\"HCC85_HCC96\"] = new Set();\n    }\n    if (my_dcs[\"gPsychiatric_V23\"].size && my_dcs[\"gSubstanceAbuse_V23\"].size) {\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] =  my_dcs[\"gSubstanceAbuse_V23\"];\n    }else {\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = new Set();\n    }\n  }\n\n  // institutional model interactions\n  var arry2 = ['INS'];\n  if (arry2.includes(model)) {\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n    if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\n      int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\n    }else {\n      int_hccs[\"CHF_gCopdCF\"] = new Set();\n    }\n    if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\n    }else {\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\n    }\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n    }\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n    }else {\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n    }\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n    }\n    if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\n      int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\n    }else {\n      int_hccs[\"DIABETES_CHF\"] = new Set();\n    }\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n    }else {\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n    }\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n    }\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n    }else {\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n    }\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n    }\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n    }\n    if (hcc79_set.size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n    }\n  }\n\n  if (disabl === true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      if (\"PRESSURE_ULCER\" in int_hccs) {\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      }\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  \n  return ccs.concat(int_hccs_new)\n}\n\nfunction v24_interactions(ccs, model, disabl=false, age='') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n   var cnt = cc_set.length;\n   if (cnt > 9) {\n    int_hccs[\"D10P\"];\n   }\n   if (cnt > 3 && cnt < 10) {\n    var index = \"D\".concat(cnt);\n    int_hccs[index];\n   } \n\n  // diagnostic categories\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\n      \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\n  if (arry1.includes(model)) {\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n        int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n    }else {\n      int_hccs[\"HCC47_gCancer\"] = new Set();\n    }\n    \n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n    }\n\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\n    }\n    \n    if (my_dcs[\"RENAL_V24\"].size && hcc85_set.size) {\n        int_hccs[\"HCC85_gRenal_V24\"] = hcc85_set;\n    }else {\n      int_hccs[\"HCC85_gRenal_V24\"] = new Set();\n    }\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n    }else {\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n    }\n    if (hcc96_set.size && hcc85_set.size) {\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n    }else {\n      int_hccs[\"HCC85_HCC96\"] = new Set();\n    }\n    if (my_dcs[\"gPsychiatric_V24\"].size && my_dcs[\"gSubstanceAbuse_V24\"].size) {\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] =  my_dcs[\"gSubstanceAbuse_V24\"];\n    }else {\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = new Set();\n    }\n  }\n  \n  // institutional model interactions\n  var arry2 = ['INS'];\n  if (arry2.includes(model)) {\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n\n\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n    }\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n    }else {\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n    }\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n    }\n\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n    }else {\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n    }\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n    }else {\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n    }\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n    }else {\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n    }\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n    }\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n    }\n    if (hcc79_set.size && hcc57_set.size) {\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n    }else {\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n    }\n  }\n\n  if (disabl == true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      if (\"PRESSURE_ULCER\" in int_hccs) {\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      }\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V24\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {     \n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}\n\n// Unit tests module export\nmodule.exports = {cc_desc, cc_info, cc_combine, cc_gaps, cc_gaps_raf, cc_diff, cc_diff_raf, \n    cc_increment, cc_increment_raf,cc_raf,demo_raf,dx_desc,dx2cc,\n    dx_raf,clean_dx,clean_cc,dx_increment,dx_increment_raf,dx_gap,dx_gap_raf};\n"],"sourceRoot":""}