{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["default_dxmap","require","default_hccmap","default_hcccoefn","default_ver","default_model","default_baserate","default_verbose","default_never_trump","interactions","v22_interactions","v23_interactions","v24_interactions","convertToUppperCase","string","result","toString","toUpperCase","demo_raf","condition_list","age","sex","model","orec","ver","baserate","i","length","j","temp_condition_list","split","trim","toLowerCase","raf_dict","member","parseFloat","toFixed","dx_desc","dx_array","verbose","temp_dx_array","hcc_dict","dx_hccs","hcc_cust_list","Object","entries","key","value","val","push","dx2cc","disabl","never_trump","unique_hccs","dx2hcc","dx_raf","raf_value","dx2raf","clean_dx","dx_values","clean_dxlist","dx_set_values","forEach","v","clean_cc","cc_array","temp_cc_array","hcc_values","clean_hcclist","cc_desc","hcc_dct","cc_info","cc","temp_hccmap","temp_cc","hccmap","hcc2raf","cc_raf","cc_combine","hccs","prep_hccs","cc_increment_raf","base_cc_array","additional_cc_array","temp_base_cc_array","temp_additional_cc_array","hcc_increment","cc_increment","neg_arry","map","element","concat","cc_gaps","hcc_gaps","cc_gaps_raf","cc_diff","cclist","hcc_diff","cc_diff_raf","dx_diff","base_dx_array","additional_dx_array","temp_base_dx_array","temp_additional_dx_array","dx_diffc","dx_diff_raf","dx_increment","dx_dict","dx_increments","dx_increment_raf","dx_gaps","dx_gap","dx_gaps_raf","old_list","new_list","new_hccs","old_hccs","diff","cal1","cal2","cal3","raf","gaps","Math","round","Array","from","get_hcc_dx","dx_list","get_raf","dx_dct","dxdct_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","dxmap","unique_dx","dx","JSON","parse","stringify","agesex_edits","Set","hasOwnProperty","hcc","add","got_trumped","child","temp_a","temp_b","c","e","temp_c","trumped_hcc","hcc_list","list_dx","String","replace","dx_set","hcc_map","hcc_list_temp","isNaN","hcc1","hcc_set","hcc2","temp_hcc_list","trump_hccs","trumped_set","temp_hcc_set","filter","x","has","final_hccs","dxinc","mydx","temp_set","temp","old_dx","new_dx","dxdiff","old_set","new_set","old_children","new_children","new_parents","hcc3","new_hccs_temp","downgraded_temp","downgraded","downgrade_to_temp","downgrade_to","upgraded","prep_hccs_set","upgraded_temp","del_hccs_temp","del_hccs_union","del_hccs","old_raf","new_raf","delta_raf","premium","endsWith","demo_codes","agesex","cond_dict","condition_resolver","allhcc","condition","flag","dx_hcc","set","dic_dxlist","None","temp_dict","mem_out_wrapper","dict1","dic_hcclist","conditionlist","list_hcc","item","Number","isInteger","startsWith","list_dx_clean","dct","includes","combined_hccs","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","female_sex","edit_dct","demo_lst","hcc_lst","hcccoefn","demo_detail","hcc_detail","hcc_raf","demo","label","score","raf_dct","age_maps","trunc","demo_str","male_sex","origds","medicaid","medicaid_condition","new_enrolee","age_labels","age_lower_bounds","age_upper_bounds","index","lower_bound","mcaid_flag","origds_flag","model_type","ds_str","sex_type","ccs","cc_set","int_hccs","diag_cats","my_dcs","key_set","new_values","arry1","hcc85_set","hcc47_set","hcc96_set","size","arry2","hcc188_set","hcc114_set","hcc57_set","hcc79_set","int_hccs_new","cnt","module","exports"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/functions/functions.js\");\n","var default_dxmap = require('./load_dxmap.json');\r\nvar default_hccmap = require('./load_hccmap.json');\r\nvar default_hcccoefn = require('./load_hcccoefn.json');\r\nvar default_ver = 'v23';\r\nvar default_model = 'CNA'; \r\nvar default_baserate = 868.0;\r\nvar default_verbose = true;\r\nvar default_never_trump = 0;\r\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\r\n\r\n// function to convert to uppercase (a fix to unit tests)\r\nfunction convertToUppperCase(string) {\r\n  var result = string.toString().toUpperCase();\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns demographic raf value based on age, gender and coding model\r\n * @customfunction\r\n * @param {string[][]} condition_list accepts array\r\n */\r\nfunction demo_raf(condition_list, age=65, sex='M', model='', orec='0', ver='', baserate=0.0) {\r\n  for (var i = 0; i < condition_list.length; i++) {\r\n    for (var j = 0; j < condition_list[i].length; j++) {\r\n      condition_list = condition_list;\r\n    }\r\n  }\r\n  var temp_condition_list = condition_list.toString();\r\n  temp_condition_list = temp_condition_list.split(\",\");\r\n  for (i = 0; i < temp_condition_list.length; i++) {\r\n    temp_condition_list[i] = temp_condition_list[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var raf_dict = member(condition_list, age=age, sex=sex, model=model, orec=orec, ver=ver, baserate=baserate);\r\n  var result = raf_dict['raf']['demo_score'];\r\n  result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns comma-separated list of descriptions of each DX Code from CMS crosswalk\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of hcc codes\r\n */\r\nfunction dx_desc(dx_array, ver='', age=0, sex='', verbose=true) {\r\n  for (i = 0; i < dx_array.length; i++) {\r\n      for (j = 0; j < dx_array[i].length; j++) {\r\n        dx_array = dx_array;\r\n      }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n  \r\n  var hcc_dict = dx_hccs(temp_dx_array, ver=ver, age=age, sex=sex, verbose=verbose);\r\n  var hcc_cust_list = [];\r\n  for (var [key, value] of Object.entries(hcc_dict)) {\r\n    var val = key + \":\" + value[\"desc\"];\r\n    hcc_cust_list.push(val);\r\n  }\r\n  return hcc_cust_list.toString();\r\n}\r\n\r\n/**\r\n * Returns a comma separated list of the ccs represented by a list of DX codes after trumping/interaction logic is applied\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of dx codes\r\n */\r\nfunction dx2cc(dx_array, age=0, ver='', model='', sex='', disabl=false, never_trump=0, verbose=false) {\r\n  for (var i = 0; i < dx_array.length; i++) {\r\n    for (var j = 0; j < dx_array[i].length; j++) {\r\n      dx_array = dx_array;\r\n    }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var unique_hccs = dx2hcc(temp_dx_array, age=age, ver=ver, model=model, sex=sex, disabl=disabl, never_trump=never_trump, verbose=verbose);\r\n  return unique_hccs.toString();\r\n}\r\n\r\n/**\r\n * Returns cc raf of associated dx codes after conversion to cc and trumping/interaction logic is applied (equivalent of cc_raf(dx2cc(dx_array))\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of dx codes\r\n */\r\nfunction dx_raf(dx_array, age=0, ver='', model='', sex='', disabl=false, verbose=false, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility to calculate raf from list of DX codes\r\n  */\r\n  for (var i = 0; i < dx_array.length; i++) {\r\n    for (var j = 0; j < dx_array[i].length; j++) {\r\n      dx_array = dx_array;\r\n    }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var raf_value = dx2raf(temp_dx_array, age=age, ver=ver, model=model, sex=sex, disabl=disabl, verbose=verbose, never_trump=never_trump, baserate=baserate);\r\n  var result = parseFloat(raf_value);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Given a list of dx codes, return a list of deduped, normalized and untrumped dx codes valid for the coding model\r\n * @customfunction\r\n * @param {string[][]} dx_array accepts array of dx codes\r\n */\r\nfunction clean_dx(dx_array, ver='') {\r\n  \r\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\r\n  for (var i = 0; i < dx_array.length; i++) {\r\n    for (var j = 0; j < dx_array[i].length; j++) {\r\n      dx_array = dx_array;\r\n    }\r\n  }\r\n  var temp_dx_array = dx_array.toString();\r\n  temp_dx_array = temp_dx_array.split(\",\");\r\n  for (i = 0; i < temp_dx_array.length; i++) {\r\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  var dx_values = clean_dxlist(temp_dx_array, ver=ver);\r\n  var dx_set_values = [];\r\n  dx_values.forEach(v => dx_set_values.push(v));\r\n  return dx_set_values.toString();\r\n}\r\n\r\n/**\r\n * Given a list of ccs, return a list of deduped, normalized and untrumped ccs codes valid for the coding model\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction clean_cc(cc_array, ver='') {\r\n  for (var i = 0; i < cc_array.length; i++) {\r\n      for (var j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  var hcc_values = clean_hcclist(temp_cc_array, ver=ver);\r\n  return hcc_values.toString();\r\n}\r\n\r\n/**\r\n * Returns comma-separated list of descriptions of each HCC Code from CMS crosswalk\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction cc_desc(cc_array, ver='', age=0, sex='', verbose=false) {\r\n  for (i = 0; i < cc_array.length; i++) {\r\n      for (j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n  var hcc_dict = hcc_dct(temp_cc_array, ver=ver, age=age, sex=sex, verbose=verbose);\r\n  var hcc_cust_list = [];\r\n  for (var [key, value] of Object.entries(hcc_dict)) {\r\n    var val = key + \":\" + value[\"desc\"];\r\n    hcc_cust_list.push(val);\r\n  }\r\n  return hcc_cust_list.toString();\r\n}\r\n\r\n/**\r\n * Returns multi-line info block for an HCC: Description, Children, Parents, RAF\r\n * @customfunction\r\n * @param {string[][]} cc accepts array of hcc codes\r\n */\r\nfunction cc_info(cc, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var temp_hccmap, raf_value;\r\n  for (i = 0; i < cc.length; i++) {\r\n      for (j = 0; j < cc[i].length; j++) {\r\n        cc = cc;\r\n      }\r\n  }\r\n  var temp_cc = cc.toString();\r\n  temp_cc = temp_cc.split(\",\");\r\n  for (i = 0; i < temp_cc.length; i++) {\r\n    temp_cc[i] = temp_cc[i].toString().trim();\r\n  }\r\n  var hccmap = default_hccmap[ver];\r\n  temp_hccmap = hccmap[temp_cc];\r\n  raf_value = hcc2raf(temp_cc, ver=ver, model=model, disabl=disabl, age=age, never_trump=never_trump, baserate=baserate);\r\n  raf_value = parseFloat(raf_value);\r\n  raf_value = raf_value.toFixed(3);\r\n  var result = `desc: ${temp_hccmap['desc']}, children: ${temp_hccmap['children']}, parents: ${temp_hccmap['parents']}, RAF: ${raf_value}`;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns cc raf (does not include demographic RAF) of cc codes after trumping/interaction logic is applied\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction cc_raf(cc_array, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < cc_array.length; i++) {\r\n      for (j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var raf_value = hcc2raf(temp_cc_array, ver=ver, model=model, disabl=disabl, age=age, never_trump=never_trump, baserate=baserate);\r\n  var result = parseFloat(raf_value);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns a list of ccs after combining them and applying trumping/interaction logic\r\n * @customfunction\r\n * @param {string[][]} cc_array accepts array of hcc codes\r\n */\r\nfunction cc_combine(cc_array, ver='', model='', age=0, disabl=false, never_trump=0) {\r\n  for (i = 0; i < cc_array.length; i++) {\r\n      for (j = 0; j < cc_array[i].length; j++) {\r\n        cc_array = cc_array;\r\n      }\r\n  }\r\n  var temp_cc_array = cc_array.toString();\r\n  temp_cc_array = temp_cc_array.split(\",\");\r\n  for (i = 0; i < temp_cc_array.length; i++) {\r\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var hccs = prep_hccs(temp_cc_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump);\r\n  return hccs.toString();\r\n}\r\n\r\n/**\r\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between cc_lists.  Equivalent of cc_raf(cc_diff_increment)\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_increment_raf(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  age = age || 0;\r\n  disabl = disabl || false;\r\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = hcc_dict['raf'];\r\n  result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString(); \r\n}\r\n\r\n/**\r\n * Returns the net incremental change between cc_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+HCC001, +HCC18, - HCC019')\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_increment(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  age = age || 0;\r\n  disabl = disabl || false;\r\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var neg_arry = (hcc_dict['upgraded']).map(element => '-' + element);\r\n  var result = hcc_dict['adds'].concat(neg_arry);\r\n  return result.toString(); \r\n}\r\n\r\n/**\r\n * Compares a base list of ccs and additional ccs and returns a list of ccs that are deletes or downgrades between the additional codes vs the baseline\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_gaps(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  \r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = hcc_dict['Deletes'].concat(hcc_dict['Downgraded']);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of ccs and additional ccs and returns raf of ccs that are deletes or downgrades between the additional codes vs the baseline\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n */\r\nfunction cc_gaps_raf(base_cc_array=[], additional_cc_array=[], ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  \r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = hcc_dict['raf'];\r\n  result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:\"\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n *\r\n */\r\nfunction cc_diff(base_cc_array=[], additional_cc_array=[], ver='', age=0, sex='', model='', disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver=ver, age=age, model=model, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = `adds: ${cclist['adds']}, upgraded: ${cclist['upgraded']}, downgraded: ${cclist['downgraded']}, downgraded_to: ${cclist['downgrade_to']}, deletes: ${cclist['deletes']}`;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns net raf difference between baseline ccs and additional ccs\r\n * @customfunction\r\n * @param {string[][]} base_cc_array accepts array of cc codes\r\n * @param {string[][]} additional_cc_array accepts array of cc codes\r\n *\r\n */\r\nfunction cc_diff_raf(base_cc_array=[], additional_cc_array=[], ver='', age=0, sex='', model='', disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_cc_array.length; i++) {\r\n    for (j = 0; j < base_cc_array[i].length; j++) {\r\n      base_cc_array = base_cc_array;\r\n    }\r\n  }\r\n  var temp_base_cc_array = base_cc_array.toString();\r\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\r\n  for (i = 0; i < temp_base_cc_array.length; i++) {\r\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_cc_array.length; i++) {\r\n    for (j = 0; j < additional_cc_array[i].length; j++) {\r\n      additional_cc_array = additional_cc_array;\r\n    }\r\n  }\r\n  var temp_additional_cc_array = additional_cc_array.toString();\r\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\r\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\r\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver=ver, age=age, model=model, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = parseFloat(cclist['raf']);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of dx and additional dx and returns an information block on the differences ; eg: \"Adds: E119,  I2720; Deletes: I495; Upgraded: F10250; Downgraded:\"\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dxs codes\r\n *\r\n */\r\nfunction dx_diff(base_dx_array=[], additional_dx_array=[], ver='', model='', never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = dx_diffc(temp_base_dx_array, temp_additional_dx_array, ver, model, never_trump, baserate);\r\n  var result = `adds: ${cclist['adds']}, upgraded: ${cclist['upgraded']}, downgraded: ${cclist['downgraded']}, downgraded_to: ${cclist['downgrade_to']}, deletes: ${cclist['deletes']}`;\r\n  return result;\r\n}\r\n\r\n/**\r\n * Returns net raf difference between baseline ccs and additional ccs\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dxs codes\r\n *\r\n */\r\nfunction dx_diff_raf(base_dx_array=[], additional_dx_array=[], ver='', model='', never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var cclist = dx_diffc(temp_base_dx_array, temp_additional_dx_array, ver, model, never_trump, baserate);\r\n  var result = parseFloat(cclist['raf']);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns the net incremental change between dx_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+dx001, +dx18, - dx019')\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of cc codes\r\n * @param {string[][]} additional_dx_array accepts array of cc codes\r\n *\r\n */\r\nfunction dx_increment(base_dx_array=[], additional_dx_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var neg_arry = (dx_dict['upgraded']).map(element => '-' + element);\r\n  var result = dx_dict['adds'].concat(neg_arry);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between dx_lists.  Equivalent of dx_raf(dx_diff_increment)\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of cc codes\r\n * @param {string[][]} additional_dx_array accepts array of cc codes\r\n *\r\n */\r\nfunction dx_increment_raf(base_dx_array=[], additional_dx_array=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n  var result = dx_dict['raf'];\r\n  var result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * Compares a base list of dxs and additional dxs and returns a list of dxs that are deletes or downgrades between the additional codes vs the baseline\r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dx codes\r\n *\r\n */\r\nfunction dx_gaps(base_dx_array=[], additional_dx_array=[],  ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  var dx_dict = dx_gap(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = dx_dict['Deletes'].concat(dx_dict['Downgraded']);\r\n  return result.toString();\r\n}\r\n\r\n/**\r\n * dx_diff_deletes_raf focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of dx_chronic(dx_diff_deletes). \r\n * @customfunction\r\n * @param {string[][]} base_dx_array accepts array of dx codes\r\n * @param {string[][]} additional_dx_array accepts array of dx codes\r\n *\r\n */\r\nfunction dx_gaps_raf(base_dx_array=[], additional_dx_array=[],  ver='', model='', age=0, sex='', disabl=false, baserate=0.0) {\r\n  for (i = 0; i < base_dx_array.length; i++) {\r\n    for (j = 0; j < base_dx_array[i].length; j++) {\r\n      base_dx_array = base_dx_array;\r\n    }\r\n  }\r\n  var temp_base_dx_array = base_dx_array.toString();\r\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\r\n  for (i = 0; i < temp_base_dx_array.length; i++) {\r\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\r\n  }\r\n\r\n  for (i = 0; i < additional_dx_array.length; i++) {\r\n    for (j = 0; j < additional_dx_array[i].length; j++) {\r\n      additional_dx_array = additional_dx_array;\r\n    }\r\n  }\r\n  var temp_additional_dx_array = additional_dx_array.toString();\r\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\r\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\r\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\r\n  }\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  var dx_dict = dx_gap(temp_base_dx_array, temp_additional_dx_array, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  var result = dx_dict['raf'];\r\n  var result = parseFloat(result);\r\n  result = result.toFixed(3);\r\n  return result.toString();\r\n}\r\n\r\nfunction hcc_gaps(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, baserate=0.0) {\r\n  /*\r\n  Utility to identify hccs that were dropped or downgraded from one list to the next\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var new_hccs = prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl);\r\n  var old_hccs = prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl);\r\n\r\n  var diff = hcc_diff(old_hccs, new_hccs, ver=ver, age='', model=model, disabl=disabl, never_trump='', baserate=baserate);\r\n  var cal1 = parseFloat(hcc2raf(diff['deletes'], ver=ver, model=model, disabl=disabl, age=age));\r\n  var cal2 = parseFloat(hcc2raf(diff['downgraded'], ver=ver, model=model, disabl=disabl, age=age));\r\n  var cal3 = parseFloat(hcc2raf(diff['downgrade_to'], ver=ver, model=model, disabl=disabl, age=age));\r\n  var raf = -(cal1+cal2)+cal3;\r\n  var gaps = { \"Deletes\": diff[\"deletes\"], \"Downgraded\": diff[\"downgraded\"], \"raf\": raf, \"premium\": Math.round(raf * baserate, 2) };\r\n  return gaps;\r\n}\r\n\r\nfunction dx_gap(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, baserate=0.0) {\r\n  /*\r\n  Utility to identify hccs that were dropped or downgraded from one list to the next\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n\r\n  var old_hccs = dx2hcc(old_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump='', verbose='');\r\n  var new_hccs = dx2hcc(new_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump='', verbose='');\r\n  var diff = hcc_gaps(old_hccs, new_hccs, ver=ver, model=model, age=age, disabl=disabl, baserate=baserate);\r\n  diff['Downgraded'] = Array.from(get_hcc_dx(diff['Downgraded'], clean_dxlist(old_list, ver), ver));\r\n  diff['Deletes'] = Array.from(get_hcc_dx(diff['Deletes'], clean_dxlist(old_list, ver), ver));\r\n  return diff;\r\n}\r\n\r\nfunction dx2raf(dx_list, age=0, ver='', model='', sex='', disabl=false, verbose=false, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility to calculate raf from list of DX codes\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var hccs = dx2hcc(dx_list=dx_list, age=age, ver=ver, model=model, sex=sex, disabl=disabl, never_trump=never_trump, verbose=verbose);\r\n  var raf = get_raf([], hccs, ver=ver, model=model, verbose='', baserate=baserate);\r\n  return raf[\"hcc_score\"];\r\n}\r\n\r\nfunction dx2hcc(dx_list, age=0, ver='', model='', sex='', disabl=false, never_trump=0, verbose=false) {\r\n  /*\r\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\r\n  :param dx_list: list of str\r\n                  List of DX Codes (case and decimal insensitive)\r\n  :param ver: str\r\n              HCC Model version\r\n  :param age: float\r\n              Beneficiary age\r\n  :param verbose:\r\n  :param disabl: bool\r\n                  Disability flag\r\n  :param sex: Gender {\"M\" or \"F\"}\r\n  :return: list of str\r\n          List of HCC codes\r\n  */\r\n  ver === null || ver === '' || ver === 0? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var dx_dct = dx_hccs(dx_list, ver=ver, age=age, sex=sex, verbose=verbose);\r\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump=never_trump);\r\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n  unique_hccs.sort(collator.compare);\r\n  unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\r\n  return unique_hccs;\r\n}\r\n\r\nfunction dx_hccs(dx_list, ver='', age=0, sex='', verbose=true) {\r\n  /*\r\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\r\n  :param dx_list: list of str\r\n                  List of dx codes; case and decimal insensitive\r\n  :param ver: str\r\n              Optional HCC version. Otherwise uses default version of ccalc object\r\n  :param age: float\r\n              Member age\r\n  :param sex: str\r\n              Member gender {\"M\"/\"F\"}\r\n  :param verbose: bool\r\n                  Include Non HCC DX in outputs\r\n  :return: dict\r\n          Dict of unique DX codes and their corresponding hcc codes\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n\r\n  var dxmap = default_dxmap[ver];\r\n  var hccmap = default_hccmap[ver];\r\n  var dx_dct = {};\r\n\r\n  var unique_dx = clean_dxlist(dx_list, ver=ver);\r\n  // Validate DX against model and pull in DX info  \r\n  for (var dx of unique_dx) {\r\n      if (dx in dxmap) {\r\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\r\n      } else if (verbose) {\r\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} };\r\n      }\r\n  }\r\n\r\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\r\n      agesex_edits(dx_dct, age=age, sex=sex);\r\n  }\r\n\r\n  // Find all unique HCCs that are valid in the hcc ver\r\n  var unique_hccs = new Set();\r\n\r\n  for (var key in dx_dct) {\r\n      if (dx_dct.hasOwnProperty(key)) {\r\n          for (var hcc in dx_dct[key]['hccs']) {\r\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\r\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\r\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  };\r\n\r\n  var got_trumped = {};\r\n  for (var hcc of unique_hccs) {\r\n      for (var child of hccmap[hcc]['children']) {\r\n          got_trumped[child] = hcc;\r\n      }\r\n  }\r\n\r\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\r\n\r\n  for (var dx in dx_dct) {\r\n      if (dx_dct.hasOwnProperty(dx)) {\r\n          var temp_a = dx_dct[dx]['hccs'];\r\n          var temp_b = [];\r\n          for (var i in dx_dct[dx]['hccs']) {\r\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] });\r\n          }\r\n          var c = temp_a.map(function (e, i) {\r\n              return [e, temp_b[i]];\r\n          });\r\n          var temp_c = {};\r\n          for (var key in c) {\r\n              if (c.hasOwnProperty(key)) {\r\n                  temp_c[c[key][0]] = c[key][1];\r\n              }\r\n          }\r\n          dx_dct[dx]['hccs'] = temp_c;\r\n          for (var trumped_hcc in got_trumped) {\r\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\r\n                  if (trumped_hcc in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\r\n                      dx_dct[dx]['hccs'][trumped_hcc]['trumped by'] = got_trumped[trumped_hcc];\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  }\r\n  return dx_dct;\r\n}\r\n\r\nfunction dxdct_hccs(dx_dct, never_trump=0) {\r\n  never_trump = never_trump || default_never_trump;\r\n  var hcc_list = new Set();\r\n\r\n  if (never_trump == 0) {\r\n      for (var key in dx_dct) {\r\n          if (dx_dct.hasOwnProperty(key)) {\r\n              for (var hcc in dx_dct[key]['hccs']) {\r\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\r\n                      if (!(dx_dct[key]['hccs'][hcc].hasOwnProperty(['trumped by']))) {\r\n                        hcc_list.add(hcc);                          \r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      hcc_list = Array.from(hcc_list);\r\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n      hcc_list.sort(collator.compare);\r\n  } else {\r\n    var hcc_list = new Set();\r\n    for (var key in dx_dct) {\r\n        if (dx_dct.hasOwnProperty(key)) { \r\n            for (var hcc in dx_dct[key]['hccs']){\r\n                hcc_list.add(hcc);\r\n            }\r\n        }\r\n    }\r\n    hcc_list = Array.from(hcc_list);\r\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n    hcc_list.sort(collator.compare);\r\n  }\r\n  return hcc_list;\r\n}\r\n\r\nfunction clean_dxlist(dx_list, ver='') {\r\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  var dxmap = default_dxmap[ver];\r\n  var list_dx = [];\r\n  for (var i =0; i < dx_list.length;  i++) {\r\n      if (dx_list[i] != '') {\r\n          list_dx[i] = (String(dx_list[i]).replace('.', '')).toUpperCase();\r\n      }\r\n  }\r\n  if (typeof (list_dx) == 'string') {\r\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\r\n  }\r\n  var dx_set = new Set();\r\n  for (var dx = 0; dx < list_dx.length; dx++) {\r\n      if (dxmap.hasOwnProperty(list_dx[dx])) {\r\n          dx_set.add(list_dx[dx]);\r\n      }\r\n  }\r\n  return dx_set;\r\n}\r\n\r\nfunction clean_hcclist(hcc_list, ver='') {\r\n  // Convert string to list, dedupe, and ensure HCC are formatted correctly.\r\n\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  var hcc_map = default_hccmap[ver];\r\n\r\n  if (typeof hcc_list == 'string') {\r\n    hcc_list = hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\r\n  }\r\n  else if (typeof hcc_list == 'number') {\r\n    hcc_list = [hcc_list];\r\n  }\r\n\r\n  // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\r\n  var hcc_list_temp = [];\r\n  for (var hcc of hcc_list) {\r\n      if (!isNaN(hcc.toString().trim())) {\r\n          hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\r\n      } else {\r\n          hcc_list_temp.push(hcc.trim().toUpperCase());\r\n      }\r\n  }\r\n  hcc_list = hcc_list_temp;\r\n  //Replacing HCC019 to HCC19\r\n  var hcc_list_temp = [];\r\n  for (var hcc1 of hcc_list) {\r\n      hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\r\n  }\r\n  hcc_list = hcc_list_temp;\r\n\r\n  // We want HCC1 rather than HCC001, etc.\r\n  var hcc_set = new Set();\r\n  for (var hcc2 of hcc_list) {\r\n      if (hcc_map.hasOwnProperty(hcc2)) {\r\n          hcc_set.add(hcc2);\r\n      }\r\n  }\r\n  return Array.from(hcc_set);\r\n}\r\n\r\nfunction hcc2raf(hcc_list, ver='', model='', disabl=false, age=0, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility for calculating hcc raf for a list of hccs\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var temp_hcc_list = prep_hccs(hcc_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=0);\r\n  var raf = get_raf([], temp_hcc_list, ver=ver, model=model, verbose='', baserate=baserate);\r\n  return raf[\"hcc_score\"];\r\n}\r\n\r\nfunction prep_hccs(hcc_list, ver='', model='', age=0, disabl=false, never_trump=0) {\r\n  /*\r\n  Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\r\n  as they at the DX level\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n  var hccs = trump_hccs(hcc_list, ver=ver, never_trump=never_trump);\r\n  hccs = interactions[ver](hccs, model, disabl, age);\r\n  return hccs;\r\n}\r\n\r\nfunction trump_hccs(hcc_list, ver='', never_trump=0) {\r\n  // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var hccmap = default_hccmap[ver];\r\n\r\n  // Make sure we're getting the right format\r\n  hcc_list_temp = clean_hcclist(hcc_list, ver=ver);\r\n  if (never_trump == 0) {\r\n      var hcc_set = new Set(hcc_list_temp);\r\n      var trumped_set = new Set();\r\n      for (var hcc of hcc_set) {\r\n          if (hcc in hccmap) {\r\n              for (var child of hccmap[hcc]['children']) {\r\n                  trumped_set.add(child);\r\n              }\r\n          }\r\n      }\r\n      var temp_hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)));\r\n      hcc_list_temp = Array.from(temp_hcc_set);\r\n  }\r\n\r\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\r\n  hcc_list_temp.sort(collator.compare);\r\n  return hcc_list_temp;\r\n}\r\n\r\nfunction hcc_dct(hcc_list, ver='', age=0, sex='', verbose=true) {\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  verbose = verbose || default_verbose;\r\n  var hccmap = default_hccmap[ver];\r\n  var unique_hccs = clean_hcclist(hcc_list, ver=ver);\r\n  var got_trumped = {};\r\n  for (var hcc of unique_hccs) {\r\n      for (var child of hccmap[hcc]['children']) {\r\n          got_trumped[child] = hcc;\r\n      }\r\n  }\r\n  var hcc_dct = {};\r\n\r\n  for (var hcc of unique_hccs) {\r\n      if (hccmap.hasOwnProperty(hcc)) {\r\n          hcc_dct[hcc] = JSON.parse(JSON.stringify(hccmap[hcc]))  // Get details for this hcc Code\r\n          delete hcc_dct[hcc]['parents'];\r\n          delete hcc_dct[hcc]['children'];\r\n      } else if (verbose) {\r\n          hcc_dct[hcc] = { \"desc\": \"\", \"parents\": {} };\r\n      }\r\n\r\n  }\r\n\r\n  for (var hcc in hcc_dct) {\r\n      for (var trumped_hcc in got_trumped) {\r\n          if (trumped_hcc == hcc) {  // If we find trumped HCC, replace with note of its demise\r\n              hcc_dct[hcc]['trumped by'] = got_trumped[trumped_hcc];\r\n          }\r\n      }\r\n  }\r\n\r\n  return hcc_dct;\r\n}\r\n\r\nfunction hcc_increment(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  // Utility to identify the incremental HCCs and value of adding a new list HCCs to a base list of HCCs\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var new_hccs = prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\r\n  var old_hccs = prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl)\r\n  new_hccs = new_hccs + ','.concat(old_hccs)\r\n  var final_hccs = prep_hccs(new_hccs, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump)\r\n  var diff = hcc_diff(old_hccs, final_hccs, ver=ver, age='', model=model, disabl=disabl, never_trump=never_trump, baserate=baserate)\r\n  diff[\"final_hccs\"] = final_hccs;\r\n  delete diff['downgraded'];\r\n  delete diff['downgrade_to'];\r\n  delete diff['deletes'];\r\n  return diff;\r\n}\r\n\r\nfunction dx_increments(old_list=[], new_list=[], ver='', model='', age=0, disabl=false, never_trump=0, baserate=0.0) {\r\n  // Utility to identify the incremental HCCs and value of adding a new list DXs to a base list of DXs\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || this.default_baserate;\r\n  never_trump = never_trump || this.default_never_trump;\r\n\r\n  var old_hccs = dx2hcc(old_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump=never_trump, verbose='');\r\n  var new_hccs = dx2hcc(new_list, age=age, ver=ver, model=model, sex='', disabl=disabl, never_trump=never_trump, verbose='');\r\n  var diff = hcc_increment(old_hccs, new_hccs, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump, baserate=baserate);\r\n\r\n  var dxinc = {\r\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], clean_dxlist(new_list, ver), ver)),\r\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], clean_dxlist(old_list, ver), ver)),\r\n  };\r\n  dxinc['raf'] = diff['raf'];\r\n  dxinc['premium'] = diff['premium'];\r\n  return dxinc;\r\n}\r\n\r\nfunction get_hcc_dx(hcc_list, dx_list, ver) {\r\n  // Utility to get the Dx Codes by comparing hcc_list with dx_list\r\n  var dxmap = default_dxmap[ver];\r\n  var hcc_set = new Set(hcc_list);\r\n  var mydx = new Set();\r\n  for (var dx of dx_list) {\r\n      var temp_set = new Set(dxmap[dx]['hccs']);\r\n      var temp = ([...temp_set].filter(x => hcc_set.has(x)));\r\n      if (dxmap.hasOwnProperty(dx) && temp.length) {\r\n          mydx.add(dx);\r\n      }\r\n  }\r\n  return mydx;\r\n}\r\n\r\nfunction dx_diffc(old_list=[], new_list=[], ver='', model='', never_trump=0, baserate=0.0) {\r\n  /*\r\n  Utility to compare HCCs and RAF for two lists of dx codes\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var old_dx = clean_dxlist(old_list, ver);\r\n  var new_dx = clean_dxlist(new_list, ver);\r\n  var old_hccs = dx2hcc(old_list, age='', ver=ver, model=model, sex='', disabl='', never_trump=never_trump, verbose='');\r\n  var new_hccs = dx2hcc(new_list, age='', ver=ver, model=model, sex='', disabl='', never_trump=never_trump, verbose='');\r\n\r\n  var diff = hcc_diff(old_hccs, new_hccs, ver=ver, age='', model=model, disabl='', never_trump=never_trump, baserate=baserate);\r\n  var dxdiff = {\r\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], new_dx, ver)),\r\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], old_dx, ver)),\r\n      \"downgraded\": Array.from(get_hcc_dx(diff[\"downgraded\"], old_dx, ver)),\r\n      \"downgrade_to\": Array.from(get_hcc_dx(diff[\"downgrade_to\"], new_dx, ver)),\r\n      \"deletes\": Array.from(get_hcc_dx(diff[\"deletes\"], old_dx, ver)),\r\n  }\r\n  dxdiff['raf'] = diff['raf'];\r\n  dxdiff['premium'] = diff['premium'];\r\n  return dxdiff;\r\n}\r\n\r\nfunction hcc_diff(old_list=[], new_list=[], ver='', age=0, model='', disabl=false, never_trump=0, baserate=0.0) {\r\n  /*\r\n  Calculate the changes between two hcc lists, {\"adds\":[], \"upgraded\":[] \"downgraded\":[], \"deletes\":[]}\r\n  - \"adds\" are new HCC Codes (includes upgrades of other codes),\r\n  - \"upgraded\" are codes from base that are no longer relevant due to new codes\r\n  - \"downgraded\" are codes from base that are present at a lower specificity in new\r\n  - \"deletes\" are codes from base that are no longer present at all\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  never_trump = never_trump || default_never_trump;\r\n  \r\n  var hccmap = default_hccmap[ver];\r\n  // Prep cleans and trumps the list and add interactions\r\n  var old_set = new Set(prep_hccs(old_list, ver=ver, model=model, age=age, disabl=disabl));\r\n  var new_set = new Set(prep_hccs(new_list, ver=ver, model=model, age=age, disabl=disabl, never_trump=never_trump));\r\n\r\n  // Find the full set of codes that each set can trump\r\n  var old_children = new Set();\r\n  var new_children = new Set();\r\n  var new_parents = new Set();\r\n  for (var hcc1 of old_set) {\r\n      if (hcc1 in hccmap) {\r\n          for (var child of hccmap[hcc1]['children']) {\r\n              old_children.add(child)\r\n          }\r\n      }\r\n  }\r\n  for (var hcc2 of new_set) {\r\n      if (hcc2 in hccmap) {\r\n          for (var child of hccmap[hcc2]['children']) {\r\n            new_children.add(child)\r\n          }\r\n      }\r\n  }\r\n  for (var hcc3 of new_set) {\r\n      if (hcc3 in hccmap) {\r\n          for (var child of hccmap[hcc3]['parents']) {\r\n            new_parents.add(child)\r\n          }\r\n      }\r\n  }\r\n\r\n  // New HCCs, except where they are trumped by old HCCs (downgrades)\r\n  var new_hccs_temp = new Set([...new_set].filter(x => !old_set.has(x)));\r\n  var new_hccs = new Set([...new_hccs_temp].filter(x => !old_children.has(x)));\r\n  var downgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\r\n  var downgraded = new Set([...downgraded_temp].filter(x => new_parents.has(x)));\r\n  var downgrade_to_temp = new Set([...new_set].filter(x => !old_set.has(x)));\r\n  var downgrade_to = new Set([...downgrade_to_temp].filter(x => old_children.has(x)));\r\n  var upgraded = new Set();\r\n  if (never_trump === 1) {\r\n      var prep_hccs_set = new Set(prep_hccs(Array.from(new_set), ver=ver, model=model, age=age, disabl=disabl, never_trump=''));\r\n      var upgraded_temp = new Set([...old_set].filter(x => !prep_hccs_set.has(x)));\r\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x))); // Noqa E501\r\n  } else {\r\n      var upgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\r\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\r\n  }\r\n  var del_hccs_temp = new Set([...old_set].filter(x => !new_set.has(x)));\r\n  var del_hccs_union = new Set([...upgraded, ...downgraded]);\r\n  var del_hccs = new Set([...del_hccs_temp].filter(x => !del_hccs_union.has(x)));\r\n  var old_raf = hcc2raf(Array.from(old_set), ver=ver, model=model, disabl='', age='', never_trump=never_trump, baserate=baserate);\r\n  var new_raf = hcc2raf(Array.from(new_set), ver=ver, model=model, disabl='', age='', never_trump=never_trump, baserate=baserate);\r\n  var delta_raf = new_raf - old_raf;\r\n  var premium = (delta_raf * baserate).toFixed(2);\r\n  var diff = {\r\n      \"adds\": Array.from(new_hccs),\r\n      \"upgraded\": Array.from(upgraded),\r\n      \"downgraded\": Array.from(downgraded),\r\n      \"downgrade_to\": Array.from(downgrade_to),\r\n      \"deletes\": Array.from(del_hccs),\r\n      \"raf\": delta_raf,\r\n      \"premium\": premium\r\n  }\r\n  return diff;\r\n}\r\n\r\nfunction member(condition_list, age=65, sex='M', model='', orec='0', ver='', baserate=0.0) {\r\n  /*\r\n      Builds an HCC risk score for a Medicare Advantage member given demographic and disease factors\r\n      :param dx_list: list of str\r\n                      List of DX codes; case and decimal insensitive\r\n      :param age: float\r\n                  Age of member\r\n      :param sex: str\r\n                  Gender of Member: Accepts \"M\"/\"F\", \"Male\"/\"Female\" or CMS numerical codes 1/2\r\n      :param model: str\r\n                  HCC Model to be used for member. Accepts:\r\n                      \"CNA\": Community - Non-dual aged\r\n                      \"CND\": Community - Non-dual disabled\r\n                      \"CFA\": Community - Full Benefit dual aged\r\n                      \"CFD\": Community - Full Benefit dual disabled\r\n                      \"CPA\": Community - Partial Benefit dual aged\r\n                      \"CPD\": Community - Partial Benefit dual disabled\r\n                      \"INS\": Institutional\r\n                      \"NE\": New enrollee\r\n                      \"SNPNE\": C-SNP new enrolee\r\n      :param orec: str\r\n                  Original Reason for Entitlement:\r\n                      \"0\": Old age (OASI)\r\n                      \"1\": Disability (DIB)\r\n                      \"2\": End Stage Renal Disease (ESRD)\r\n                      \"3\": Both DIB and ESRD\r\n\r\n      :param ver: str\r\n                  Version of HCC Model to be used (overrides default version set in Ccalc).\r\n                  Accepts {'v22', 'v23', 'v24'}\r\n      :return: dict\r\n              Map of factors and risk scores for member\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  var verbose = default_verbose;\r\n  var hccmap = default_hccmap[ver];\r\n  \r\n  // Get age/sex/disability demographic codes\r\n  var disabl = model.endsWith(\"D\");\r\n  var demo_codes = agesex(age, sex, orec, model);\r\n\r\n  // Condition resolver to get the condition list as either Dx or HCC\r\n  var cond_dict = condition_resolver(condition_list, ver=ver, model=model, never_trump='', allhcc='');\r\n  var condition = cond_dict['condition'];\r\n  var allhcc = cond_dict['allhcc'];  \r\n  var flag;\r\n  var raf;\r\n  var dx_dct;\r\n\r\n  if (allhcc == 1) {\r\n      var dx_dct = hcc_dct(condition, ver=ver, age=age, sex=sex, verbose=verbose);\r\n      var unique_hccs = prep_hccs(condition, ver=ver, model=model, age=age, disabl='', never_trump='');\r\n      unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\r\n      raf = get_raf(demo_codes, unique_hccs, ver=ver, model=model, verbose='', baserate=baserate);\r\n      flag = 'hcc';\r\n      var dx_hcc = [];\r\n      // Update the dictionary with interaction codes and desc as Interaction Codes\r\n      for (var hcc of unique_hccs) {\r\n        if (!(hcc in dx_dct)) {\r\n          dx_dct.set(hcc, \"{'desc': 'Interaction Codes'}\");\r\n        }\r\n      }\r\n\r\n      // Appending dictionary to the json format\r\n      for (var hcc in dx_dct) {\r\n        var dic_dxlist = {};\r\n        dic_dxlist['dx_name'] = None;\r\n        dic_dxlist['dx_desc'] = None;\r\n        var temp_dict = {};\r\n        temp_dict[hcc] = dx_dct[hcc];\r\n        var hcc_list = mem_out_wrapper(dict1=temp_dict, raf=raf['hcc_detail'], baserate=baserate);\r\n        dic_dxlist['hcc_list'] = hcc_list;\r\n        dx_hcc.push(dic_dxlist);\r\n      }      \r\n  } else {\r\n      // process DX list\r\n      dx_dct = dx_hccs(condition, ver=ver, age=age, sex=sex, verbose=verbose);\r\n      var unique_hccs = dxdct_hccs(dx_dct, never_trump='');\r\n      unique_hccs = interactions[ver](unique_hccs, model, disabl, age);\r\n      raf = get_raf(demo_codes, unique_hccs, ver=ver, model=model, verbose='', baserate=baserate);\r\n      flag = 'dx';\r\n      dx_hcc = [];\r\n      // Appending dictionary to the json format\r\n      for (var dx in dx_dct) {\r\n        var dic_dxlist = {};\r\n        dic_dxlist['dx_name'] = dx;  // Get details for this DX Code\r\n        dic_dxlist['dx_desc'] = dx_dct[dx]['desc'];\r\n        var hcc_list = mem_out_wrapper(raf=raf['hcc_detail'], dict1=dx_dct[dx]['hccs'], baserate=baserate)\r\n        dic_dxlist['hcc_list'] = hcc_list;\r\n        dx_hcc.push(dic_dxlist);\r\n      }          \r\n\r\n      // Appending interaction codes to the dictionary\r\n      for (var hcc of unique_hccs) {\r\n        if (!(hcc in hccmap)) {\r\n          var dic_dxlist = {};\r\n          dic_dxlist['dx_name'] = None; // Get details for this DX Code\r\n          dic_dxlist['dx_desc'] = None;\r\n          dic_hcclist = {};\r\n          dic_hcclist['hcc_name'] = hcc;\r\n          dic_hcclist['hcc_desc'] = 'Interaction Codes';\r\n          dic_hcclist['trumped_by'] = [];\r\n          dic_hcclist['hcc_raf'] = raf['hcc_detail'][hcc];\r\n          dic_hcclist['premium'] = Math.round(dic_hcclist['hcc_raf'] * baserate);\r\n          hcc_list = [];\r\n          hcc_list.push(dic_hcclist);\r\n          dic_dxlist['hcc_list'] = hcc_list;\r\n          dx_hcc.push(dic_dxlist);\r\n        }        \r\n      }\r\n  }\r\n\r\n  return {\r\n      \"hcc_model\": { \"version\": ver, \"model\": model },\r\n      \"demo\": { \"age\": age, \"sex\": sex, \"orec\": orec },\r\n      \"raf\": raf,\r\n      'flag': flag,\r\n      \"dx_hccs\": dx_dct\r\n  }\r\n}\r\n\r\nfunction mem_out_wrapper(raf, baserate, dict1={}) {\r\n  // Utility to convert dictionary output to desired format\r\n  hcc_list = [];\r\n  for (var hcc in dict1) {\r\n    var dic_hcclist = {};\r\n    dic_hcclist['hcc_name'] = hcc;\r\n    dic_hcclist['hcc_desc'] = dict1[hcc]['desc'];\r\n    dic_hcclist['trumped_by'] = [];\r\n    if ('trumped by' in dict1[hcc]) {\r\n        dic_hcclist['trumped_by'] = dict1[hcc]['trumped by'].split();\r\n        dic_hcclist['hcc_raf'] = None;\r\n        dic_hcclist['premium'] = None;\r\n    } else {\r\n        dic_hcclist['hcc_raf'] = raf[hcc];\r\n        dic_hcclist['premium'] = Math.round(dic_hcclist['hcc_raf'] * baserate);\r\n    }\r\n    hcc_list.push(dic_hcclist);\r\n  }\r\n  return hcc_list;\r\n}\r\n\r\nfunction condition_resolver(conditionlist, ver='', model='', never_trump=0, allhcc=0) {\r\n  /*\r\n  Utility to convert the condition list to one: either Dx or HCC\r\n  returns dict of:\r\n      'condition': list of Dx/HCC based on the input\r\n      'allhcc' : boolean,\r\n                 Provides whether all were Dx or we converted them to HCC\r\n  */\r\n\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  never_trump = never_trump || default_never_trump;\r\n\r\n  var list_hcc = [];\r\n  for (item in conditionlist) {\r\n    if (Number.isInteger(item) || item.startsWith('HCC')){\r\n      list_hcc.push(item);\r\n    }\r\n  }\r\n  var list_dx = [];\r\n  var list_dx_clean = [];\r\n  var dct = new Set();\r\n  if ((list_hcc.length > 0) || allhcc) {\r\n      allhcc = 1;\r\n      list_dx = conditionlist.filter(item => !(list_hcc.includes(item)));\r\n      list_dx_clean = clean_dxlist(list_dx, ver);\r\n      var hccs = dx2hcc(list_dx_clean, age='', ver=ver, model=model, sex='', disabl='', never_trump=never_trump, verbose='');\r\n      var combined_hccs = list_hcc.concat(hccs);\r\n      dct = { 'allhcc': allhcc, 'condition': combined_hccs };\r\n\r\n  } else {\r\n      list_dx = conditionlist;\r\n      dct = { 'allhcc': allhcc, 'condition': list_dx };\r\n  }\r\n  return dct;\r\n}\r\n\r\nfunction agesex_edits(dx_dct, age, sex) { // noqa C901\r\n  /*\r\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\r\n  Valid for V22, V23, V24\r\n  :param dx_dct: dict\r\n                 Dict of {DX:HCC}\r\n  :param age: float\r\n              Age of member\r\n  :param sex: str\r\n              Member's gender\r\n  :return: dx_dct: dict\r\n              Dictionary of {DX:HCC} edited per member age/sex rules\r\n  */\r\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\r\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\r\n      \"C7490\", \"C7491\", \"C7492\"];\r\n\r\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\r\n\r\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\r\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\r\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\r\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\r\n\r\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\r\n\r\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\r\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\r\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\r\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\r\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\r\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\r\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\r\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\r\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\r\n\r\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\r\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\r\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\r\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\r\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\r\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\r\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\r\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\r\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\r\n\r\n  var ed_conjoined = [\"Q894\"];\r\n\r\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\r\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\r\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\r\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\r\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\r\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\r\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\r\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\r\n      \"Q793\", \"Q794\", \"Q7951\"];\r\n\r\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\r\n\r\n  var ed_disruptive_mood = [\"F3481\"];\r\n\r\n  var ed_hemophilia = [\"D66\", \"D67\"];\r\n\r\n  // Optimal to have the loop outside of the age checks, but this is easier to read\r\n  for (var dx in dx_dct) {\r\n\r\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\r\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\r\n      if (age < 18 && ed_leukemia.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC9\"]);\r\n      }\r\n\r\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\r\n      if (age < 18 && ed_bronchitis.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC161\"]);\r\n      }\r\n\r\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\r\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = [(\"HCC42\")];\r\n      }\r\n\r\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\r\n      if (age < 50 && ed_breastca.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC11\"]);\r\n      }\r\n\r\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\r\n      // If age <2 out of payment model\r\n      if (age < 2 && ed_emphysema.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Edit for newborn low birthweight. If age 1+ out of payment model\r\n      if (age != 0 && ed_low_bw.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\r\n      if (age >= 1 && ed_conjoined.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC97\"]);\r\n      }\r\n\r\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\r\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\r\n      // (HCC 162) and age <2 (HCC 127).\r\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC162\"]);\r\n      }\r\n\r\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\r\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\r\n      }\r\n\r\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\r\n      //  and female (HCC 75)\r\n      female_sex = [\"2\", \"F\", \"Female\"];\r\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\r\n        dx_dct[dx]['hccs'] = ([\"HCC75\"]);\r\n      }\r\n  }\r\n\r\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\r\n  for (dx in dx_dct) {\r\n      if (dx_dct[dx]['hccs'] != ([\"HCC1\"])) {\r\n          edit_dct[dx] = dx_dct[dx];\r\n      }\r\n  }\r\n\r\n  return edit_dct;\r\n}\r\n\r\nfunction get_raf(demo_lst, hcc_lst, ver='', model='', verbose=true, baserate=0.0) {\r\n  /*\r\n  Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\r\n  and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\r\n  {\r\n      raf: float of total risk factor,\r\n      premium: PM PM payment for members of this raf and base rate($)\r\n      demo_raf: float of demographic risk factor\r\n      hcc_raf: float of hcc risk factor\r\n      demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\r\n      hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\r\n  :param model: str\r\n                  Hcc model for use\r\n  :param demo_lst: list of str\r\n                  List of applicable demographic codes for a member (eg CNA_F65_70)\r\n  :param hcc_lst: list of str\r\n                  List of hccs (assumes hccs have already been trumped)\r\n  :param ver: str\r\n                  Optional HCC version to be used in calculation\r\n  :param model: str\r\n          Optional HCC model to be used in calculation\r\n  :param verbose: bool\r\n  :param baserate: float\r\n                  pmpm premium base rate\r\n  :return: dict\r\n          raf_dct\r\n  */\r\n  ver === null || ver === '' || ver === 0 ? ver = default_ver : ver = ver.toLowerCase();\r\n  model === null || model === '' || model === 0 ? model = default_model : convertToUppperCase(model);\r\n  baserate = baserate || default_baserate;\r\n  verbose = verbose || default_verbose;\r\n\r\n  var hcccoefn = default_hcccoefn[ver];\r\n  var demo_detail = {};\r\n  var hcc_detail = {};\r\n  var demo_raf = 0.0;\r\n  var hcc_raf = 0.0;\r\n\r\n  for (var demo of demo_lst) {\r\n      if (hcccoefn.hasOwnProperty(demo)) {\r\n          demo_detail[demo] = hcccoefn[demo];\r\n          demo_raf += hcccoefn[demo];\r\n      }\r\n  }\r\n\r\n  for (var hcc = 0; hcc < hcc_lst.length; hcc++) {\r\n      var label = model + \"_\" + hcc_lst[hcc];\r\n      if (label in hcccoefn) {\r\n          hcc_detail[hcc] = hcccoefn[label];\r\n          hcc_raf += hcccoefn[label];\r\n      } else if (verbose) {\r\n          hcc_detail[hcc] = 0.0;\r\n      }\r\n  }\r\n\r\n  var score = (demo_raf + hcc_raf).toFixed(4);\r\n  var raf_dct = {\r\n      \"score\": score,\r\n      \"premium\": (score * baserate).toFixed(),\r\n      \"demo_score\": (demo_raf).toFixed(4),\r\n      \"hcc_score\": (hcc_raf).toFixed(4),\r\n      \"demo_detail\": demo_detail,\r\n      \"hcc_detail\": hcc_detail\r\n  };\r\n  return raf_dct;\r\n}\r\n\r\nfunction agesex(age, sex, orec, model) {\r\n  /*\r\n      Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\r\n      Valid for V22, V23, V24\r\n      :param age: float\r\n                  Age of beneficiary\r\n      :param sex: str\r\n                  Gender of beneficiary\r\n      :param orec: str\r\n                  Original reason for enrollment\r\n      :param model: str\r\n                  Code for CMS model (str)\r\n      :return: list of str\r\n              list of demographic str for looking up demo coefficients\r\n  */\r\n  let age_maps = {\r\n      \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\r\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\r\n      \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\r\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\r\n  };\r\n\r\n  age = Math.trunc(age);  // In case float is passed and someone at upper age bound\r\n\r\n  let demo_str;\r\n  let male_sex = [\"M\", \"MALE\", \"1\"];\r\n  if (male_sex.includes(sex.toUpperCase())) {\r\n      demo_str = 'M';\r\n  } else {\r\n      demo_str = \"F\";\r\n  }\r\n\r\n  // Directly from CMS AGESEXV2\r\n  let disabl = (age < 65) && (orec != \"0\");\r\n  let origds = (orec == \"1\") && !(disabl);\r\n  let medicaid;\r\n  let medicaid_condition = [\"CP\", \"CF\"];\r\n  if (medicaid_condition.includes(model)) {\r\n      medicaid = true;\r\n  } else {\r\n      medicaid = false;\r\n  }\r\n  let new_enrolee = model.endsWith(\"NE\");\r\n  let age_labels = [];\r\n  if (new_enrolee) {\r\n      age_labels = age_maps[\"NE\"];\r\n  } else {\r\n      age_labels = age_maps[\"STD\"];\r\n  }\r\n\r\n  // Derive the lower bound & upper bound of each age band from ordered list of age labels\r\n  let age_lower_bounds = [];\r\n  let age_upper_bounds = [];\r\n  for (let i in age_labels) {\r\n      let split = age_labels[i].split(\"_\");\r\n      age_lower_bounds.push(split[0]);\r\n      age_upper_bounds.push(split[1]);\r\n  }\r\n\r\n  for (var [index, lower_bound] of age_lower_bounds.entries()) {\r\n      if (index == age_lower_bounds[age_lower_bounds.length] - 1) {\r\n          demo_str += age_labels[index];\r\n          break;\r\n      }\r\n      if ((lower_bound <= age) && (age < age_lower_bounds[index + 1])) {\r\n          demo_str += age_labels[index];\r\n          break;\r\n      }\r\n  }\r\n\r\n  if (model.endsWith(\"NE\")) {\r\n      if (medicaid) {\r\n          let mcaid_flag = \"\";\r\n      } else {\r\n          mcaid_flag = \"N\";\r\n      }\r\n      if (origds) {\r\n          let origds_flag = \"\";\r\n      } else {\r\n          origds_flag = \"N\";\r\n      }\r\n      demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\r\n  }\r\n\r\n  let demo_lst = [model + \"_\" + demo_str];\r\n  let model_type = [\"CNA\", \"CFA\", \"CPA\"];\r\n  let ds_str;\r\n  let sex_type;\r\n\r\n  if ((model_type.includes(model)) && origds) {\r\n      if (sex === \"M\") {\r\n          sex_type = \"Male\";\r\n      } else {\r\n          sex_type = \"Female\";\r\n      }\r\n      ds_str = model + \"_OriginallyDisabled_\" + sex_type;\r\n      demo_lst.push(ds_str);\r\n  }\r\n  return demo_lst;\r\n}\r\n\r\nfunction v22_interactions(ccs, model, disabl=false, age='') {\r\n  /*\r\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\r\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n  :param disabl: CMS disabled flag\r\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n  :return: List of HCC codes, including interaction codes\r\n  */\r\n  var cc_set = new Set(ccs);\r\n  var int_hccs = {};\r\n\r\n  // diagnostic categories\r\n\r\n  var diag_cats = {\r\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n      \"CHF\": new Set([\"HCC85\"]),\r\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n      \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\r\n      \"SEPSIS\": new Set([\"HCC2\"]),\r\n      \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\r\n      \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\r\n  };\r\n\r\n  var my_dcs = {};\r\n\r\n  for (var key in diag_cats) {\r\n      if (diag_cats.hasOwnProperty(key)) {\r\n          var key_set = new Set(diag_cats[key])\r\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n          my_dcs[key] = new_values;\r\n      }\r\n  \r\n  }\r\n  // Community Interactions\r\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\r\n  if (arry1.includes(model)) {\r\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n\r\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\r\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\r\n    }else {\r\n      int_hccs[\"HCC47_gCancer\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"RENAL\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gRenal_V23\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\r\n    }\r\n    if (hcc96_set.size && hcc85_set.size) {\r\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\r\n    }else {\r\n      int_hccs[\"HCC85_HCC96\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gPsychiatric\"].size && my_dcs[\"gSubstanceAbuse\"].size) {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric\"] =  my_dcs[\"gSubstanceAbuse\"];\r\n    }else {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = new Set();\r\n    }\r\n  }\r\n\r\n  // institutional model interactions\r\n  var arry2 = ['INS'];\r\n  if (arry2.includes(model)) {\r\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\r\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n    \r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n    if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"CHF_gCopdCF\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\r\n    }\r\n\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\r\n      int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"DIABETES_CHF\"] = new Set();\r\n    }\r\n\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\r\n    }\r\n\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\r\n    }\r\n\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\r\n    }\r\n    if (hcc79_set.size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\r\n    }\r\n  }\r\n\r\n  if (disabl === true || disabl == 1) {\r\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n      if (\"PRESSURE_ULCER\" in int_hccs) {\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n      }      \r\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n      if (typeof age !== 'undefined' && age < 65) {\r\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric\"]\r\n      }\r\n  }\r\n\r\n  var int_hccs_new = [];\r\n  for (var key in int_hccs) {\r\n     if (int_hccs.hasOwnProperty(key)) {\r\n          if (int_hccs[key].size !== 0) {\r\n              int_hccs_new.push(key);\r\n          }\r\n      }\r\n  }\r\n  return ccs.concat(int_hccs_new)\r\n}\r\n\r\nfunction v23_interactions(ccs, model, disabl=false, age='') {\r\n  /*\r\n  Calculated interaction HCCs given a dict of hccs, age, and disability flag\r\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n  :param disabl: CMS disabled flag\r\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n  :return: List of HCC codes, including interaction codes\r\n  */\r\n  var cc_set = new Set(ccs);\r\n  var int_hccs = {};\r\n\r\n  // diagnostic categories\r\n\r\n  var diag_cats = {\r\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n      \"CHF\": new Set([\"HCC85\"]),\r\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n      \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\r\n      \"SEPSIS\": new Set([\"HCC2\"]),\r\n      \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\r\n      \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\r\n  };\r\n\r\n  var my_dcs = {};\r\n\r\n  for (var key in diag_cats) {\r\n      if (diag_cats.hasOwnProperty(key)) {\r\n          var key_set = new Set(diag_cats[key])\r\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n          my_dcs[key] = new_values;\r\n      }\r\n  \r\n  }\r\n  // Community Interactions\r\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\r\n  if (arry1.includes(model)) {\r\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    \r\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\r\n        int_hccs[\"HCC47_gCancer\"] = hcc47_set;\r\n    }else {\r\n      int_hccs[\"HCC47_gCancer\"] = new Set();\r\n    }\r\n    \r\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\r\n    }\r\n    \r\n    if ( my_dcs[\"RENAL_V23\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gRenal_V23\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\r\n    }\r\n    if (hcc96_set.size && hcc85_set.size) {\r\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\r\n    }else {\r\n      int_hccs[\"HCC85_HCC96\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gPsychiatric_V23\"].size && my_dcs[\"gSubstanceAbuse_V23\"].size) {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] =  my_dcs[\"gSubstanceAbuse_V23\"];\r\n    }else {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = new Set();\r\n    }\r\n  }\r\n\r\n  // institutional model interactions\r\n  var arry2 = ['INS'];\r\n  if (arry2.includes(model)) {\r\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\r\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n    if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"CHF_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n    if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\r\n      int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"DIABETES_CHF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\r\n    }\r\n    if (hcc79_set.size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\r\n    }\r\n  }\r\n\r\n  if (disabl === true || disabl == 1) {\r\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n      if (\"PRESSURE_ULCER\" in int_hccs) {\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n      }\r\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n      if (typeof age !== 'undefined' && age < 65) {\r\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\r\n      }\r\n  }\r\n\r\n  var int_hccs_new = [];\r\n  for (var key in int_hccs) {\r\n     if (int_hccs.hasOwnProperty(key)) {\r\n          if (int_hccs[key].size !== 0) {\r\n              int_hccs_new.push(key);\r\n          }\r\n      }\r\n  }\r\n  \r\n  return ccs.concat(int_hccs_new)\r\n}\r\n\r\nfunction v24_interactions(ccs, model, disabl=false, age='') {\r\n  /*\r\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\r\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\r\n  :param disabl: CMS disabled flag\r\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\r\n  :return: List of HCC codes, including interaction codes\r\n  */\r\n  var cc_set = new Set(ccs);\r\n  var int_hccs = {};\r\n   var cnt = cc_set.length;\r\n   if (cnt > 9) {\r\n    int_hccs[\"D10P\"];\r\n   }\r\n   if (cnt > 3 && cnt < 10) {\r\n    var index = \"D\".concat(cnt);\r\n    int_hccs[index];\r\n   } \r\n\r\n  // diagnostic categories\r\n  var diag_cats = {\r\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\r\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\r\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\r\n      \"CHF\": new Set([\"HCC85\"]),\r\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\r\n      \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\r\n      \"SEPSIS\": new Set([\"HCC2\"]),\r\n      \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\r\n      \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\r\n  };\r\n\r\n  var my_dcs = {};\r\n\r\n  for (var key in diag_cats) {\r\n      if (diag_cats.hasOwnProperty(key)) {\r\n          var key_set = new Set(diag_cats[key])\r\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\r\n          my_dcs[key] = new_values;\r\n      }\r\n  \r\n  }\r\n  // Community Interactions\r\n  var arry1 = ['CNA', 'CFA', 'CPA', 'CND', 'CFD', 'CPD'];\r\n  if (arry1.includes(model)) {\r\n    var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n    var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\r\n    var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\r\n    if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\r\n        int_hccs[\"HCC47_gCancer\"] = hcc47_set;\r\n    }else {\r\n      int_hccs[\"HCC47_gCancer\"] = new Set();\r\n    }\r\n    \r\n    if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gCopdCF\"] = new Set();\r\n    }\r\n    \r\n    if (my_dcs[\"RENAL_V24\"].size && hcc85_set.size) {\r\n        int_hccs[\"HCC85_gRenal_V24\"] = hcc85_set;\r\n    }else {\r\n      int_hccs[\"HCC85_gRenal_V24\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\r\n    }else {\r\n      int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\r\n    }\r\n    if (hcc96_set.size && hcc85_set.size) {\r\n      int_hccs[\"HCC85_HCC96\"] = hcc96_set;\r\n    }else {\r\n      int_hccs[\"HCC85_HCC96\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gPsychiatric_V24\"].size && my_dcs[\"gSubstanceAbuse_V24\"].size) {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] =  my_dcs[\"gSubstanceAbuse_V24\"];\r\n    }else {\r\n      int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = new Set();\r\n    }\r\n  }\r\n  \r\n  // institutional model interactions\r\n  var arry2 = ['INS'];\r\n  if (arry2.includes(model)) {\r\n    var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\r\n    var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\r\n    var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\r\n    var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\r\n    int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\r\n\r\n\r\n    if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\r\n    }\r\n\r\n    if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\r\n    }\r\n    if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n    }else {\r\n      int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\r\n    }\r\n    if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\r\n    }else {\r\n      int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\r\n    }\r\n    if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\r\n    }\r\n    if (my_dcs[\"CHF\"].size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\r\n    }\r\n    if (hcc79_set.size && hcc57_set.size) {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\r\n    }else {\r\n      int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\r\n    }\r\n  }\r\n\r\n  if (disabl == true || disabl == 1) {\r\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\r\n      if (\"PRESSURE_ULCER\" in int_hccs) {\r\n        int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\r\n      }\r\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\r\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\r\n\r\n      if (typeof age !== 'undefined' && age < 65) {\r\n          int_hccs[\"disable_substAbuse_psych_V24\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"]\r\n      }\r\n  }\r\n\r\n  var int_hccs_new = [];\r\n  for (var key in int_hccs) {\r\n     if (int_hccs.hasOwnProperty(key)) {\r\n          if (int_hccs[key].size !== 0) {     \r\n              int_hccs_new.push(key);\r\n          }\r\n      }\r\n  }\r\n  return ccs.concat(int_hccs_new)\r\n}\r\n\r\n// Unit tests module export\r\nmodule.exports = {cc_desc, cc_info, cc_combine, cc_gaps, cc_gaps_raf, cc_diff, cc_diff_raf, \r\n    cc_increment, cc_increment_raf,cc_raf,demo_raf,dx_desc,dx2cc,\r\n    dx_raf,clean_dx,clean_cc,dx_increment,dx_increment_raf,dx_gaps,dx_gaps_raf};\r\n"],"sourceRoot":""}