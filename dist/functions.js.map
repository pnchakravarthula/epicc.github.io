{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["default_dxmap","default_hccmap","default_hcccoefn","fetch","then","response","json","data","default_ver","default_model","default_baserate","default_verbose","default_never_trump","interactions","v22_interactions","v23_interactions","v24_interactions","demo_raf","condition_list","age","sex","model","orec","ver","baserate","i","length","j","temp_condition_list","toString","split","trim","toLowerCase","toUpperCase","raf_dict","member","result","dx_desc","dx_array","verbose","temp_dx_array","hcc_dict","dx_hccs","hcc_cust_list","Object","entries","key","value","val","push","dx2cc","disabl","never_trump","unique_hccs","dx2hcc","dx_raf","raf_value","dx2raf","clean_dx","dx_values","clean_dxlist","dx_set_values","forEach","v","clean_cc","cc_array","temp_cc_array","hcc_values","clean_hcclist","cc_desc","hcc_dct","cc_info","cc","temp_hccmap","temp_cc","hccmap","hcc2raf","desc","children","parents","RAF","JSON","stringify","replace","cc_raf","cc_combine","hccs","prep_hccs","cc_increment_raf","base_cc_array","additional_cc_array","temp_base_cc_array","temp_additional_cc_array","hcc_increment","cc_increment","cc_gaps","hcc_gaps","cc_gaps_raf","cc_diff","cclist","hcc_diff","adds","upgraded","downgraded","downgraded_to","deletes","cc_diff_raf","dx_increment","base_dx_array","additional_dx_array","temp_base_dx_array","temp_additional_dx_array","dx_dict","dx_increments","dx_increment_raf","dx_gap","dx_gaps","dx_gap_raf","old_list","new_list","new_hccs","old_hccs","diff","cal1","parseFloat","cal2","cal3","raf","gaps","Math","round","Array","from","get_hcc_dx","dx_list","get_raf","dx_dct","dxdct_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","dxmap","unique_dx","dx","parse","agesex_edits","Set","hasOwnProperty","hcc","add","got_trumped","child","temp_a","temp_b","c","map","e","temp_c","trumped_hcc","hcc_list","list_dx","String","dx_set","hcc_map","hcc_list_temp","isNaN","hcc1","hcc_set","hcc2","temp_hcc_list","trump_hccs","trumped_set","temp_hcc_set","filter","x","has","concat","final_hccs","dxinc","mydx","temp_set","temp","old_set","new_set","old_children","new_children","new_parents","hcc3","new_hccs_temp","downgraded_temp","downgrade_to_temp","downgrade_to","prep_hccs_set","upgraded_temp","del_hccs_temp","del_hccs_union","del_hccs","old_raf","new_raf","delta_raf","endsWith","demo_codes","agesex","cond_dict","condition_resolver","condition","allhcc","flag","conditionlist","list_hcc","item","Number","isInteger","startsWith","list_dx_clean","dct","includes","combined_hccs","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","female_sex","edit_dct","demo_lst","hcc_lst","hcccoefn","demo_detail","hcc_detail","hcc_raf","demo","label","score","toFixed","raf_dct","age_maps","trunc","demo_str","male_sex","origds","medicaid","medicaid_condition","new_enrolee","age_labels","age_lower_bounds","age_upper_bounds","lower_bound","mcaid_flag","origds_flag","model_type","ds_str","sex_type","ccs","cc_set","int_hccs","diag_cats","my_dcs","key_set","new_values","hcc85_set","hcc47_set","hcc96_set","size","hcc188_set","hcc114_set","hcc57_set","hcc79_set","int_hccs_new","cnt","index"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/functions/functions.js\");\n","var default_dxmap, default_hccmap, default_hcccoefn;\n\n\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_dxmap.json')\n.then(response => response.json())\n.then(data => {\n  default_dxmap = data;\n});\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_hccmap.json')\n.then(response => response.json())\n.then(data => {\n  default_hccmap = data;\n});\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_hcccoefn.json')\n.then(response => response.json())\n.then(data => {\n  default_hcccoefn = data;\n});\n\nvar default_ver = 'v23';\nvar default_model = 'CNA'; \nvar default_baserate = 868.0;\nvar default_verbose = true;\nvar default_never_trump = 0;\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\n\n/**\n * Returns demographic raf value based on age, gender and coding model\n * @customfunction\n * @param {string[][]} condition_list accepts array\n */\nfunction demo_raf(condition_list, age = 65, sex = 'M', model = '', orec = '0', ver = '', baserate = 0.0) {\n  for (var i = 0; i < condition_list.length; i++) {\n    for (var j = 0; j < condition_list[i].length; j++) {\n      condition_list = condition_list;\n    }\n  }\n  var temp_condition_list = condition_list.toString();\n  temp_condition_list = temp_condition_list.split(\",\");\n  for (i = 0; i < temp_condition_list.length; i++) {\n    temp_condition_list[i] = temp_condition_list[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n\n  var raf_dict =  member(condition_list, age, sex, model, orec, ver, baserate);\n  result = raf_dict['raf']['demo_score'];\n  return result.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each DX Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} dx_array accepts array of hcc codes\n */\nfunction dx_desc(dx_array, ver = '', age = 0, sex = '', verbose = true) {\n  for (i = 0; i < dx_array.length; i++) {\n      for (j = 0; j < dx_array[i].length; j++) {\n        dx_array = dx_array;\n      }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  verbose = verbose || default_verbose;\n  \n  var hcc_dict = dx_hccs(temp_dx_array, ver, age, sex, verbose);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns a comma separated list of the ccs represented by a list of DX codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx2cc(dx_array, age = 0, ver = '', sex = '', disabl = false, never_trump = 0, verbose = false) {\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  never_trump = never_trump || default_never_trump;\n  var unique_hccs = dx2hcc(temp_dx_array, age, ver, sex, disabl, never_trump, verbose);\n  return unique_hccs.toString();\n}\n\n/**\n * Returns cc raf of associated dx codes after conversion to cc and trumping/interaction logic is applied (equivalent of cc_raf(dx2cc(dx_array))\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx_raf(dx_array, age = 0, ver = '', model = '', sex = '', disabl = false, verbose = false, never_trump = 0, baserate = 0.0) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var raf_value = dx2raf(temp_dx_array, age, ver, model, sex, disabl, verbose, never_trump, baserate);\n  return raf_value.toString();\n}\n\n/**\n * Given a list of dx codes, return a list of deduped, normalized and untrumped dx codes valid for the coding model\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction clean_dx(dx_array, ver = '') {\n  \n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  var dx_values = clean_dxlist(temp_dx_array, ver);\n  var dx_set_values = [];\n  dx_values.forEach(v => dx_set_values.push(v));\n  return dx_set_values.toString();\n}\n\n/**\n * Given a list of ccs, return a list of deduped, normalized and untrumped ccs codes valid for the coding model\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction clean_cc(cc_array, ver = '') {\n  for (var i = 0; i < cc_array.length; i++) {\n      for (var j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  var hcc_values = clean_hcclist(temp_cc_array, ver);\n  return hcc_values.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each HCC Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_desc(cc_array, ver = '', age = 0, sex = '', verbose = false) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  verbose = verbose || default_verbose;\n  var hcc_dict = hcc_dct(temp_cc_array, ver, age, sex, verbose);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns multi-line info block for an HCC: Description, Children, Parents, RAF.  Past MVP can also feed a info pane / popup for desktop calculator like use.\nTo enable screen reader support, press Ctrl+Alt+Z To learn about keyboard shortcuts, press Ctrl+slash\n * @customfunction\n * @param {string[][]} cc accepts array of hcc codes\n */\nfunction cc_info(cc, ver = '', model = '', disabl = false, age = 0, never_trump = 0, baserate = 0.0) {\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var temp_hccmap, raf_value;\n  for (i = 0; i < cc.length; i++) {\n      for (j = 0; j < cc[i].length; j++) {\n        cc = cc;\n      }\n  }\n  var temp_cc = cc.toString();\n  temp_cc = temp_cc.split(\",\");\n  for (i = 0; i < temp_cc.length; i++) {\n    temp_cc[i] = temp_cc[i].toString().trim();\n  }\n  var hccmap = default_hccmap[ver];\n  // for (var i = 0; i < temp_cc.length; i++) {\n  temp_hccmap = hccmap[temp_cc];\n  raf_value = hcc2raf(temp_cc, ver, model, disabl, age, never_trump, baserate);\n  // }\n  var result = {desc: temp_hccmap['desc'], children: temp_hccmap['children'], parents: temp_hccmap['parents'], RAF: raf_value};\n  result = JSON.stringify(result);\n  return result.replace(/\"/g, '');\n}\n\n/**\n * Returns cc raf (does not include demographic RAF) of cc codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_raf(cc_array, ver = '', model = '', disabl = false, age = 0, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  // model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var raf_value = hcc2raf(temp_cc_array, ver, model, disabl, age, never_trump, baserate);\n  return raf_value.toString();\n}\n\n/**\n * cc_combine\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_combine(cc_array, ver = '', age = 0, disabl = false, never_trump = 0) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  never_trump = never_trump || default_never_trump;\n  var hccs = prep_hccs(temp_cc_array, ver, age, disabl, never_trump);\n  return hccs.toString();\n}\n\n/**\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between cc_lists.  Equivalent of cc_raf(cc_diff_increment)\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_increment_raf(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  age = age || 0;\n  disabl = disabl || false;\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, never_trump, baserate);\n  var result = hcc_dict['raf'];\n  return result.toString(); \n}\n\n/**\n * Returns the net incremental change between cc_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+HCC001, +HCC18, - HCC019')\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_increment(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  age = age || 0;\n  disabl = disabl || false;\n  var hcc_dict = hcc_increment(temp_base_cc_array, temp_additional_cc_array, ver, model, age, disabl, never_trump, baserate);\n  var result = hcc_dict['adds'] + \",\" + \"-\" + hcc_dict['upgraded'];\n  return result.toString(); \n}\n\n/**\n * Special case of diff_deletes that focuses on YoY Chronic Gaps and downgrades.  Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_gaps(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, sex= '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  \n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver, model, age, sex, disabl, baserate);\n  var result = hcc_dict['Deletes'] + \",\" + hcc_dict['Downgraded'];\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes_raf that focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of cc_chronic(cc_diff_deletes). Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n */\nfunction cc_gaps_raf(base_cc_array, additional_cc_array, ver = '', model = '', age = 0, sex= '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  \n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n\n  var hcc_dict = hcc_gaps(temp_base_cc_array, temp_additional_cc_array, ver, model, age, sex, disabl, baserate);\n  var result = hcc_dict['raf'];\n  return result.toString();\n}\n\n/**\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:'\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n *\n */\nfunction cc_diff(base_cc_array = [], additional_cc_array = [], ver='', age=0, sex='', model='', disabl=false, never_trump = 0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver, age, sex, model, disabl, never_trump, baserate);\n  var result = {adds: cclist['adds'], upgraded: cclist['upgraded'], downgraded: cclist['downgraded'], downgraded_to: cclist['downgrade_to'], deletes: cclist['deletes']};\n  result = JSON.stringify(result);\n  return result.replace(/\"/g, '');\n}\n\n/**\n * Compares a base list of ccs and additional ccs and returns an information block on the differences ; eg: \"Adds: HCC001, HCC18; Deletes: HCC135; Upgraded: HCC019; Downgraded:'\n * @customfunction\n * @param {string[][]} base_cc_array accepts array of cc codes\n * @param {string[][]} additional_cc_array accepts array of cc codes\n *\n */\nfunction cc_diff_raf(base_cc_array = [], additional_cc_array = [], ver='', age=0, sex='', model='', disabl=false, never_trump = 0, baserate=0.0) {\n  for (i = 0; i < base_cc_array.length; i++) {\n    for (j = 0; j < base_cc_array[i].length; j++) {\n      base_cc_array = base_cc_array;\n    }\n  }\n  var temp_base_cc_array = base_cc_array.toString();\n  temp_base_cc_array = temp_base_cc_array.split(\",\");\n  for (i = 0; i < temp_base_cc_array.length; i++) {\n    temp_base_cc_array[i] = temp_base_cc_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_cc_array.length; i++) {\n    for (j = 0; j < additional_cc_array[i].length; j++) {\n      additional_cc_array = additional_cc_array;\n    }\n  }\n  var temp_additional_cc_array = additional_cc_array.toString();\n  temp_additional_cc_array = temp_additional_cc_array.split(\",\");\n  for (i = 0; i < temp_additional_cc_array.length; i++) {\n    temp_additional_cc_array[i] = temp_additional_cc_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var cclist = hcc_diff(temp_base_cc_array, temp_additional_cc_array, ver, age, sex, model, disabl, never_trump, baserate);\n  return cclist[\"raf\"].toString();\n}\n\n/**\n * Returns the net incremental change between dx_lists, for example for calculating the value of a coding project over claims. Equivalent of +Adds - Upgraded in the format('+dx001, +dx18, - dx019')\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of cc codes\n * @param {string[][]} additional_dx_array accepts array of cc codes\n *\n */\nfunction dx_increment(base_dx_array = [], additional_dx_array = [], ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, never_trump, baserate);\n  var result = dx_dict['adds'] + \",\" + \"-\" + dx_dict['upgraded'];\n  return result.toString();\n}\n\n/**\n * Returns the RAF of the net incremental change (+Adds - Upgraded) between dx_lists.  Equivalent of dx_raf(dx_diff_increment)\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of cc codes\n * @param {string[][]} additional_dx_array accepts array of cc codes\n *\n */\nfunction dx_increment_raf(base_dx_array = [], additional_dx_array = [], ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  var dx_dict  = dx_increments(temp_base_dx_array, temp_additional_dx_array, ver, model, age, disabl, never_trump, baserate);\n  var result = dx_dict['raf'];\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes that focuses on YoY Chronic Gaps and downgrades.\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dx codes\n *\n */\nfunction dx_gap(base_dx_array = [], additional_dx_array = [],  ver = '', model = '', age = 0, sex = '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  var dx_dict = dx_gaps(temp_base_dx_array, temp_additional_dx_array, ver, model, age, sex, disabl, baserate);\n  var result = dx_dict['Deletes'] + \",\" + dx_dict['Downgraded'];\n  return result.toString();\n}\n\n/**\n * Special case of diff_deletes_raf that focuses on YoY Chronic Gaps and downgrades (net raf of downgraded).  Equivalent of dx_chronic(dx_diff_deletes). Maybe does some adjusting for differing coding models yoy, but that sounds hard\n * @customfunction\n * @param {string[][]} base_dx_array accepts array of dx codes\n * @param {string[][]} additional_dx_array accepts array of dx codes\n *\n */\nfunction dx_gap_raf(base_dx_array = [], additional_dx_array = [],  ver = '', model = '', age = 0, sex = '', disabl = false, baserate = 0.0) {\n  for (i = 0; i < base_dx_array.length; i++) {\n    for (j = 0; j < base_dx_array[i].length; j++) {\n      base_dx_array = base_dx_array;\n    }\n  }\n  var temp_base_dx_array = base_dx_array.toString();\n  temp_base_dx_array = temp_base_dx_array.split(\",\");\n  for (i = 0; i < temp_base_dx_array.length; i++) {\n    temp_base_dx_array[i] = temp_base_dx_array[i].toString().trim();\n  }\n\n  for (i = 0; i < additional_dx_array.length; i++) {\n    for (j = 0; j < additional_dx_array[i].length; j++) {\n      additional_dx_array = additional_dx_array;\n    }\n  }\n  var temp_additional_dx_array = additional_dx_array.toString();\n  temp_additional_dx_array = temp_additional_dx_array.split(\",\");\n  for (i = 0; i < temp_additional_dx_array.length; i++) {\n    temp_additional_dx_array[i] = temp_additional_dx_array[i].toString().trim();\n  }\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  var dx_dict = dx_gaps(temp_base_dx_array, temp_additional_dx_array, ver, model, age, sex, disabl, baserate);\n  var result = dx_dict['raf'];\n  return result.toString();\n}\n\nfunction hcc_gaps(old_list, new_list, ver, model, age, sex, disabl, baserate) {\n  /*\n  Utility to identify hccs that were dropped or downgraded from one list to the next\n  */\n  never_trump = default_never_trump;\n  var new_hccs = prep_hccs(new_list, ver, age, disabl, never_trump);\n  var old_hccs = prep_hccs(old_list, ver, age, disabl, never_trump);\n\n  var diff = hcc_diff(old_hccs, new_hccs, ver, age, sex, model, disabl, never_trump, baserate);\n  var cal1 = parseFloat(hcc2raf(diff['deletes'], ver, model, disabl, age, never_trump, baserate));\n  var cal2 = parseFloat(hcc2raf(diff['downgraded'], ver, model, disabl, age, never_trump, baserate));\n  var cal3 = parseFloat(hcc2raf(diff['downgrade_to'], ver, model, disabl, age, never_trump, baserate));\n  var raf = -(cal1+cal2)+cal3;\n  var gaps = { \"Deletes\": diff[\"deletes\"], \"Downgraded\": diff[\"downgraded\"], \"raf\": raf, \"premium\": Math.round(raf * baserate, 2) };\n  return gaps;\n}\n\nfunction dx_gaps(old_list, new_list, ver, model, age, sex, disabl, baserate) {\n  /*\n  Utility to identify hccs that were dropped or downgraded from one list to the next\n  */\n  never_trump = default_never_trump;\n  verbose = default_verbose;\n\n  var old_hccs = dx2hcc(old_list, age, ver, sex, disabl, never_trump, verbose);\n  var new_hccs = dx2hcc(new_list, age, ver, sex, disabl, never_trump, verbose);\n  var diff = hcc_gaps(old_hccs, new_hccs, ver, model, age, sex, disabl, baserate);\n  diff['Downgraded'] = Array.from(get_hcc_dx(diff['Downgraded'], clean_dxlist(old_list, ver), ver));\n  diff['Deletes'] = Array.from(get_hcc_dx(diff['Deletes'], clean_dxlist(old_list, ver), ver));\n  return diff;\n}\n\nfunction dx2raf(dx_list, age, ver, model, sex, disabl, verbose, never_trump, baserate) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  var hccs = dx2hcc(dx_list, age, ver, sex, disabl, never_trump, verbose);\n  var raf = get_raf([], hccs, ver, model, verbose, baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction dx2hcc(dx_list, age, ver, sex, disabl, never_trump, verbose) {\n  /*\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\n  :param dx_list: list of str\n                  List of DX Codes (case and decimal insensitive)\n  :param ver: str\n              HCC Model version\n  :param age: float\n              Beneficiary age\n  :param verbose:\n  :param disabl: bool\n                  Disability flag\n  :param sex: Gender {\"M\" or \"F\"}\n  :return: list of str\n          List of HCC codes\n  */\n  \n  var dx_dct = dx_hccs(dx_list, ver, age, sex, verbose);\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump);\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  unique_hccs.sort(collator.compare);\n  unique_hccs = interactions[ver](unique_hccs, disabl, age);\n  return unique_hccs;\n}\n\nfunction dx_hccs(dx_list, ver, age, sex, verbose) {\n  /*\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\n  :param dx_list: list of str\n                  List of dx codes; case and decimal insensitive\n  :param ver: str\n              Optional HCC version. Otherwise uses default version of ccalc object\n  :param age: float\n              Member age\n  :param sex: str\n              Member gender {\"M\"/\"F\"}\n  :param verbose: bool\n                  Include Non HCC DX in outputs\n  :return: dict\n          Dict of unique DX codes and their corresponding hcc codes\n  */\n  \n  var dxmap = default_dxmap[ver];\n  var hccmap = default_hccmap[ver];\n  var dx_dct = {};\n\n  var unique_dx = clean_dxlist(dx_list, ver);\n  // Validate DX against model and pull in DX info  \n  for (var dx of unique_dx) {\n      if (dx in dxmap) {\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\n      } else if (verbose) {\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} };\n      }\n  }\n\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\n      agesex_edits(dx_dct, age, sex);\n  }\n\n  // Find all unique HCCs that are valid in the hcc ver\n  var unique_hccs = new Set();\n\n  for (var key in dx_dct) {\n      if (dx_dct.hasOwnProperty(key)) {\n          for (var hcc in dx_dct[key]['hccs']) {\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\n                  }\n              }\n          }\n      }\n  };\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\n\n  for (var dx in dx_dct) {\n      if (dx_dct.hasOwnProperty(dx)) {\n          var temp_a = dx_dct[dx]['hccs'];\n          var temp_b = [];\n          for (var i in dx_dct[dx]['hccs']) {\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] });\n          }\n          var c = temp_a.map(function (e, i) {\n              return [e, temp_b[i]];\n          });\n          var temp_c = {};\n          for (var key in c) {\n              if (c.hasOwnProperty(key)) {\n                  temp_c[c[key][0]] = c[key][1];\n              }\n          }\n          dx_dct[dx]['hccs'] = temp_c;\n          for (var trumped_hcc in got_trumped) {\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\n                  if (trumped_hcc in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\n                      dx_dct[dx]['hccs'][trumped_hcc]['trumped by'] = got_trumped[trumped_hcc];\n                  }\n              }\n          }\n      }\n  }\n  return dx_dct;\n}\n\nfunction dxdct_hccs(dx_dct, never_trump = 0) {\n  never_trump = never_trump || default_never_trump;\n  var hcc_list = new Set();\n\n  if (never_trump == 0) {\n      for (var key in dx_dct) {\n          if (dx_dct.hasOwnProperty(key)) {\n              for (var hcc in dx_dct[key]['hccs']) {\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                      if (!(dx_dct[key]['hccs'][hcc].hasOwnProperty(['trumped by']))) {\n                        hcc_list.add(hcc);                          \n                      }\n                  }\n              }\n          }\n      }\n      hcc_list = Array.from(hcc_list);\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n      hcc_list.sort(collator.compare);\n  } else {\n    var hcc_list = new Set();\n    for (var key in dx_dct) {\n        if (dx_dct.hasOwnProperty(key)) { \n            for (var hcc in dx_dct[key]['hccs']){\n                // hcc_list.add(dx_dct[key]['hccs'][hcc]);\n                hcc_list.add(hcc);\n            }\n        }\n    }\n    hcc_list = Array.from(hcc_list);\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    hcc_list.sort(collator.compare);\n  }\n  return hcc_list;\n}\n\nfunction clean_dxlist(dx_list, ver) {\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  var dxmap = default_dxmap[ver];\n  var list_dx = [];\n  for (var i =0; i < dx_list.length;  i++) {\n      if (dx_list[i] != '') {\n          list_dx[i] = (String(dx_list[i]).replace('.', '')).toUpperCase();\n      }\n  }\n  if (typeof (list_dx) == 'string') {\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  var dx_set = new Set();\n  for (var dx = 0; dx < list_dx.length; dx++) {\n      if (dxmap.hasOwnProperty(list_dx[dx])) {\n          dx_set.add(list_dx[dx]);\n      }\n  }\n  return dx_set;\n}\n\nfunction clean_hcclist(hcc_list, ver) {\n  var hcc_map = default_hccmap[ver];\n\n  if (typeof hcc_list == 'string') {\n    hcc_list = hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  else if (typeof hcc_list == 'number') {\n    hcc_list = [hcc_list];\n  }\n\n  // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\n  var hcc_list_temp = [];\n  for (var hcc of hcc_list) {\n      if (!isNaN(hcc.toString().trim())) {\n          hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\n      } else {\n          hcc_list_temp.push(hcc.trim().toUpperCase());\n      }\n  }\n  hcc_list = hcc_list_temp;\n  //Replacing HCC019 to HCC19\n  var hcc_list_temp = [];\n  for (var hcc1 of hcc_list) {\n      hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\n  }\n  hcc_list = hcc_list_temp;\n\n  // We want HCC1 rather than HCC001, etc.\n  var hcc_set = new Set();\n  for (var hcc2 of hcc_list) {\n      if (hcc_map.hasOwnProperty(hcc2)) {\n          hcc_set.add(hcc2);\n      }\n  }\n  return Array.from(hcc_set);\n}\n\nfunction hcc2raf(hcc_list, ver, model, disabl, age, never_trump, baserate) {\n  /*\n  Utility for calculating hcc raf for a list of hccs\n  */\n  var temp_hcc_list = prep_hccs(hcc_list, ver, age, disabl, never_trump);\n  var raf = get_raf([], temp_hcc_list, ver, model, verbose = true, baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction prep_hccs(hcc_list, ver, age, disabl, never_trump) {\n  /*\n  Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\n  as they at the DX level\n  */\n  var hccs = trump_hccs(hcc_list, ver, never_trump);\n  hccs = interactions[ver](hccs, disabl, age);\n  return hccs;\n}\n\nfunction trump_hccs(hcc_list, ver, never_trump) {\n  // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  never_trump = never_trump || default_never_trump;\n  var hccmap = default_hccmap[ver];\n\n  // Make sure we're getting the right format\n  hcc_list_temp = clean_hcclist(hcc_list, ver);\n  if (never_trump == 0) {\n      var hcc_set = new Set(hcc_list_temp);\n      var trumped_set = new Set();\n      for (var hcc of hcc_set) {\n          if (hcc in hccmap) {\n              for (var child of hccmap[hcc]['children']) {\n                  trumped_set.add(child);\n              }\n          }\n      }\n      var temp_hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)));\n      hcc_list_temp = Array.from(temp_hcc_set);\n  }\n\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  hcc_list_temp.sort(collator.compare);\n  return hcc_list_temp;\n}\n\nfunction hcc_dct(hcc_list, ver, age, sex, verbose) {\n  var hccmap = default_hccmap[ver];\n  var unique_hccs = new Set();\n  for (var hcc of hcc_list) {\n      if (hcc in hccmap) {\n          unique_hccs.add(hcc);\n      }\n  }\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n  var hcc_dct = {};\n\n  for (var hcc of unique_hccs) {\n      if (hccmap.hasOwnProperty(hcc)) {\n          hcc_dct[hcc] = JSON.parse(JSON.stringify(hccmap[hcc]))  // Get details for this hcc Code\n          delete hcc_dct[hcc]['parents'];\n          delete hcc_dct[hcc]['children'];\n      } else if (verbose) {\n          hcc_dct[hcc] = { \"desc\": \"\", \"parents\": {} };\n      }\n\n  }\n\n  for (var hcc in hcc_dct) {\n      for (var trumped_hcc in got_trumped) {\n          if (trumped_hcc == hcc) {  // If we find trumped HCC, replace with note of its demise\n              hcc_dct[hcc]['trumped by'] = got_trumped[trumped_hcc];\n          }\n      }\n  }\n\n  return hcc_dct;\n}\n\nfunction hcc_increment(old_list, new_list, ver, model, age, disabl, never_trump, baserate) {\n  // Utility to identify the incremental HCCs and value of adding a new list HCCs to a base list of HCCs\n  var new_hccs = prep_hccs(new_list, ver, age, disabl, never_trump)\n  var old_hccs = prep_hccs(old_list, ver, age, disabl, never_trump)\n  new_hccs = new_hccs + ','.concat(old_hccs)\n  var final_hccs = prep_hccs(new_hccs, ver, age, disabl, never_trump)\n  var diff = hcc_diff(old_hccs, final_hccs, ver, age, sex = '', model, disabl, never_trump, baserate)\n  diff[\"final_hccs\"] = final_hccs;\n  delete diff['downgraded'];\n  delete diff['downgrade_to'];\n  delete diff['deletes'];\n  return diff;\n}\n\nfunction dx_increments(old_list, new_list, ver, model, age, disabl, never_trump, baserate) {\n  // Utility to identify the incremental HCCs and value of adding a new list DXs to a base list of DXs\n  var verbose = default_verbose;\n  var old_hccs = dx2hcc(old_list, age, ver, sex = '', disabl, never_trump, verbose);\n  var new_hccs = dx2hcc(new_list, age, ver, sex = '', disabl, never_trump, verbose);\n  var diff = hcc_increment(old_hccs, new_hccs, ver, model, age, disabl, never_trump, baserate);\n\n  var dxinc = {\n      \"adds\": Array.from(get_hcc_dx(diff['adds'], clean_dxlist(new_list, ver), ver)),\n      \"upgraded\": Array.from(get_hcc_dx(diff[\"upgraded\"], clean_dxlist(old_list, ver), ver)),\n  };\n  dxinc['raf'] = diff['raf'];\n  dxinc['premium'] = diff['premium'];\n  return dxinc;\n}\n\nfunction get_hcc_dx(hcc_list, dx_list, ver) {\n  var dxmap = default_dxmap[ver];\n  var hcc_set = new Set(hcc_list);\n  var mydx = new Set();\n  for (var dx of dx_list) {\n      var temp_set = new Set(dxmap[dx]['hccs']);\n      var temp = ([...temp_set].filter(x => hcc_set.has(x)));\n      if (dxmap.hasOwnProperty(dx) && temp.length) {\n          mydx.add(dx);\n      }\n  }\n  // mydx = {dx for dx in dx_list if dx in dxmap and dxmap[dx]['hccs'].intersection(hcc_set)}\n  return mydx;\n}\n\nfunction hcc_diff(old_list, new_list, ver, age, sex, model, disabl, never_trump, baserate) {\n  /*\n  Calculate the changes between two hcc lists, {\"adds\":[], \"upgraded\":[] \"downgraded\":[], \"deletes\":[]}\n  - \"adds\" are new HCC Codes (includes upgrades of other codes),\n  - \"upgraded\" are codes from base that are no longer relevant due to new codes\n  - \"downgraded\" are codes from base that are present at a lower specificity in new\n  - \"deletes\" are codes from base that are no longer present at all\n  */\n  var hccmap = default_hccmap[ver];\n  // Prep cleans and trumps the list and add interactions\n  var old_set = new Set(prep_hccs(old_list, ver, age, disabl));\n  var new_set = new Set(prep_hccs(new_list, ver, age, disabl, never_trump));\n\n  // Find the full set of codes that each set can trump\n  var old_children = new Set();\n  var new_children = new Set();\n  var new_parents = new Set();\n  for (var hcc1 of old_set) {\n      if (hcc1 in hccmap) {\n          for (var child of hccmap[hcc1]['children']) {\n              old_children.add(child)\n          }\n      }\n  }\n  for (var hcc2 of new_set) {\n      if (hcc2 in hccmap) {\n          for (var child of hccmap[hcc2]['children']) {\n            new_children.add(child)\n          }\n      }\n  }\n  for (var hcc3 of new_set) {\n      if (hcc3 in hccmap) {\n          for (var child of hccmap[hcc3]['parents']) {\n            new_parents.add(child)\n          }\n      }\n  }\n\n  // New HCCs, except where they are trumped by old HCCs (downgrades)\n  var new_hccs_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  var new_hccs = new Set([...new_hccs_temp].filter(x => !old_children.has(x)));\n  var downgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  var downgraded = new Set([...downgraded_temp].filter(x => new_parents.has(x)));\n  var downgrade_to_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  var downgrade_to = new Set([...downgrade_to_temp].filter(x => old_children.has(x)));\n  //new_hccs = new_set.difference(old_set).difference(old_children)\n  //downgraded = old_set.difference(new_set).intersection(new_parents)\n  //downgrade_to = new_set.difference(old_set).intersection(old_children)\n  var upgraded = new Set();\n  if (never_trump === 1) {\n      var prep_hccs_set = new Set(prep_hccs(Array.from(new_set)));\n      var upgraded_temp = new Set([...old_set].filter(x => !prep_hccs_set.has(x)));\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n      //old_set.difference(set(this.prep_hccs(list(new_set)))).intersection(new_children)\n  } else {\n      var upgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n      upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n      //upgraded = old_set.difference(new_set).intersection(new_children)\n  }\n\n  var del_hccs_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  var del_hccs_union = new Set([...upgraded, ...downgraded]);\n  var del_hccs = new Set([...del_hccs_temp].filter(x => !del_hccs_union.has(x)));\n  //del_hccs = old_set.difference(new_set).difference(upgraded.union(downgraded))\n\n  var old_raf = hcc2raf(Array.from(old_set), ver = ver, model = model, baserate = baserate, never_trump = never_trump);\n  var new_raf = hcc2raf(Array.from(new_set), ver = ver, model = model, baserate = baserate, never_trump = never_trump);\n  var delta_raf = new_raf - old_raf;\n\n  var diff = {\n      \"adds\": Array.from(new_hccs),\n      \"upgraded\": Array.from(upgraded),\n      \"downgraded\": Array.from(downgraded),\n      \"downgrade_to\": Array.from(downgrade_to),\n      \"deletes\": Array.from(del_hccs),\n      \"raf\": delta_raf,\n      \"premium\": Math.round(delta_raf * baserate, 2)\n  }\n  return diff;\n}\n\nfunction member(condition_list, age, sex, model, orec, ver, baserate) {\n  /*\n      Builds an HCC risk score for a Medicare Advantage member given demographic and disease factors\n      :param dx_list: list of str\n                      List of DX codes; case and decimal insensitive\n      :param age: float\n                  Age of member\n      :param sex: str\n                  Gender of Member: Accepts \"M\"/\"F\", \"Male\"/\"Female\" or CMS numerical codes 1/2\n      :param model: str\n                  HCC Model to be used for member. Accepts:\n                      \"CNA\": Community - Non-dual aged\n                      \"CND\": Community - Non-dual disabled\n                      \"CFA\": Community - Full Benefit dual aged\n                      \"CFD\": Community - Full Benefit dual disabled\n                      \"CPA\": Community - Partial Benefit dual aged\n                      \"CPD\": Community - Partial Benefit dual disabled\n                      \"INS\": Institutional\n                      \"NE\": New enrollee\n                      \"SNPNE\": C-SNP new enrolee\n      :param orec: str\n                  Original Reason for Entitlement:\n                      \"0\": Old age (OASI)\n                      \"1\": Disability (DIB)\n                      \"2\": End Stage Renal Disease (ESRD)\n                      \"3\": Both DIB and ESRD\n\n      :param ver: str\n                  Version of HCC Model to be used (overrides default version set in Ccalc).\n                  Accepts {'v22', 'v23', 'v24'}\n      :return: dict\n              Map of factors and risk scores for member\n  */\n  \n  // Get age/sex/disability demographic codes\n  var disabl = model.endsWith(\"D\");\n  var demo_codes = agesex(age, sex, orec, model);\n  var cond_dict = condition_resolver(condition_list, ver);\n  var condition = cond_dict['condition'];\n  var allhcc = cond_dict['allhcc'];\n  var verbose = default_verbose;\n  var flag;\n  var raf;\n  var dx_dct;\n\n  if (allhcc == 1) {\n      var dx_dct = hcc_dct(condition, ver, age, sex, verbose);\n      unique_hccs = prep_hccs(condition, ver = ver, age = age);\n      unique_hccs = interactions[ver](unique_hccs, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver, model, verbose, baserate);\n      flag = 'hcc';\n  } else {\n      // process DX list\n      dx_dct = dx_hccs(condition, ver, age, sex, verbose);\n      var unique_hccs = dxdct_hccs(dx_dct);\n      unique_hccs = interactions[ver](unique_hccs, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver, model, verbose, baserate);\n      flag = 'dx';\n  }\n\n  return {\n      \"hcc_model\": { \"version\": ver, \"model\": model },\n      \"demo\": { \"age\": age, \"sex\": sex, \"orec\": orec },\n      \"raf\": raf,\n      'flag': flag,\n      \"dx_hccs\": dx_dct\n  }\n}\n\nfunction condition_resolver(conditionlist, ver = '', never_trump = 0, allhcc = 0) {\n  //need factoring\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  never_trump = never_trump || default_never_trump;\n  var list_hcc = [];\n  for (item in conditionlist) {\n    if (Number.isInteger(item) || item.startsWith('HCC')){\n      list_hcc.push(item);\n    }\n  }\n  // list_hcc = conditionlist.filter(item => Number.isInteger(item) || item.startsWith('HCC'));\n  var list_dx = [];\n  var list_dx_clean = [];\n  var dct = new Set();\n  if ((list_hcc.length > 0) || allhcc) {\n      allhcc = 1;\n      list_dx = conditionlist.filter(item => !(list_hcc.includes(item)));\n      list_dx_clean = clean_dxlist(list_dx, ver);\n      var hccs = dx2hcc(list_dx_clean, ver = ver, never_trump = never_trump);\n      var combined_hccs = list_hcc.concat(hccs);\n      dct = { 'allhcc': allhcc, 'condition': combined_hccs };\n\n  } else {\n      list_dx = conditionlist;\n      dct = { 'allhcc': allhcc, 'condition': list_dx };\n  }\n  return dct;\n}\n\nfunction agesex_edits(dx_dct, age, sex) {\n  /*\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\n  Valid for V22, V23, V24\n  :param dx_dct: dict\n                 Dict of {DX:HCC}\n  :param age: float\n              Age of member\n  :param sex: str\n              Member's gender\n  :return: dx_dct: dict\n              Dictionary of {DX:HCC} edited per member age/sex rules\n  */\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\n      \"C7490\", \"C7491\", \"C7492\"];\n\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\n\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\n\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\n\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\n\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\n\n  var ed_conjoined = [\"Q894\"];\n\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\n      \"Q793\", \"Q794\", \"Q7951\"];\n\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\n\n  var ed_disruptive_mood = [\"F3481\"];\n\n  var ed_hemophilia = [\"D66\", \"D67\"];\n\n  // Optimal to have the loop outside of the age checks, but this is easier to read\n  for (var dx in dx_dct) {\n\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\n      if (age < 18 && ed_leukemia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC9\"]);\n      }\n\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\n      if (age < 18 && ed_bronchitis.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC161\"]);\n      }\n\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\n        dx_dct[dx]['hccs'] = [(\"HCC42\")];\n      }\n\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\n      if (age < 50 && ed_breastca.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC11\"]);\n      }\n\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\n      // If age <2 out of payment model\n      if (age < 2 && ed_emphysema.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Edit for newborn low birthweight. If age 1+ out of payment model\n      if (age != 0 && ed_low_bw.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\n      if (age >= 1 && ed_conjoined.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC97\"]);\n      }\n\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\n      // (HCC 162) and age <2 (HCC 127).\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC162\"]);\n      }\n\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC1\"]);\n      }\n\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\n      //  and female (HCC 75)\n      female_sex = [\"2\", \"F\", \"Female\"];\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC75\"]);\n      }\n  }\n\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\n  for (dx in dx_dct) {\n      if (dx_dct[dx]['hccs'] != ([\"HCC1\"])) {\n          edit_dct[dx] = dx_dct[dx];\n      }\n  }\n\n  return edit_dct;\n}\n\nfunction get_raf(demo_lst, hcc_lst, ver, model, verbose, baserate) {\n  /*\n  Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\n  and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\n  {\n      raf: float of total risk factor,\n      premium: PM PM payment for members of this raf and base rate($)\n      demo_raf: float of demographic risk factor\n      hcc_raf: float of hcc risk factor\n      demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\n      hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\n  :param model: str\n                  Hcc model for use\n  :param demo_lst: list of str\n                  List of applicable demographic codes for a member (eg CNA_F65_70)\n  :param hcc_lst: list of str\n                  List of hccs (assumes hccs have already been trumped)\n  :param ver: str\n                  Optional HCC version to be used in calculation\n  :param model: str\n          Optional HCC model to be used in calculation\n  :param verbose: bool\n  :param baserate: float\n                  pmpm premium base rate\n  :return: dict\n          raf_dct\n  */\n  ver === null ? ver = default_ver : ver = ver.toLowerCase();\n  model === null ? model = default_model : model = model.toUpperCase();\n  baserate = baserate || default_baserate;\n  verbose = verbose || default_verbose;\n\n  var hcccoefn = default_hcccoefn[ver];\n  var demo_detail = {};\n  var hcc_detail = {};\n  var demo_raf = 0.0;\n  var hcc_raf = 0.0;\n\n  for (var demo of demo_lst) {\n      if (hcccoefn.hasOwnProperty(demo)) {\n          demo_detail[demo] = hcccoefn[demo];\n          demo_raf += hcccoefn[demo];\n      }\n  }\n\n  for (var hcc = 0; hcc < hcc_lst.length; hcc++) {\n      var label = model + \"_\" + hcc_lst[hcc];\n      if (label in hcccoefn) {\n          hcc_detail[label] = hcccoefn[label];\n          hcc_raf += hcccoefn[label];\n      } else if (verbose) {\n          hcc_detail[label] = 0.0;\n      }\n  }\n\n  var score = (demo_raf + hcc_raf).toFixed(4);\n  var raf_dct = {\n      \"score\": score,\n      \"premium\": (score * baserate).toFixed(2),\n      \"demo_score\": (demo_raf).toFixed(4),\n      \"hcc_score\": (hcc_raf).toFixed(4),\n      \"demo_detail\": demo_detail,\n      \"hcc_detail\": hcc_detail\n  };\n  return raf_dct;\n}\n\nfunction agesex(age, sex, orec, model) {\n  /*\n      Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\n      Valid for V22, V23, V24\n      :param age: float\n                  Age of beneficiary\n      :param sex: str\n                  Gender of beneficiary\n      :param orec: str\n                  Original reason for enrollment\n      :param model: str\n                  Code for CMS model (str)\n      :return: list of str\n              list of demographic str for looking up demo coefficients\n  */\n  let age_maps = {\n      \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\n      \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\n  };\n\n  age = Math.trunc(age);  // In case float is passed and someone at upper age bound\n\n  let demo_str;\n  let male_sex = [\"M\", \"MALE\", \"1\"];\n  if (male_sex.includes(sex.toUpperCase())) {\n      demo_str = 'M';\n  } else {\n      demo_str = \"F\";\n  }\n\n  // Directly from CMS AGESEXV2\n  let disabl = (age < 65) && (orec != \"0\");\n  let origds = (orec == \"1\") && !(disabl);\n  let medicaid;\n  let medicaid_condition = [\"CP\", \"CF\"];\n  if (medicaid_condition.includes(model)) {\n      medicaid = true;\n  } else {\n      medicaid = false;\n  }\n  let new_enrolee = model.endsWith(\"NE\");\n  let age_labels = [];\n  if (new_enrolee) {\n      age_labels = age_maps[\"NE\"];\n  } else {\n      age_labels = age_maps[\"STD\"];\n  }\n\n  // Derive the lower bound & upper bound of each age band from ordered list of age labels\n  let age_lower_bounds = [];\n  let age_upper_bounds = [];\n  for (let i in age_labels) {\n      let split = age_labels[i].split(\"_\");\n      age_lower_bounds.push(split[0]);\n      age_upper_bounds.push(split[1]);\n  }\n\n  for (const [i, lower_bound] of age_lower_bounds.entries()) {\n      if (i == age_lower_bounds[age_lower_bounds.length] - 1) {\n          demo_str += age_labels[i];\n          break;\n      }\n      if ((lower_bound >= age) && (lower_bound < age_lower_bounds[i + 1])) {\n          demo_str += age_labels[i];\n          break;\n      }\n  }\n\n  if (model.endsWith(\"NE\")) {\n      if (medicaid) {\n          let mcaid_flag = \"\";\n      } else {\n          mcaid_flag = \"N\";\n      }\n      if (origds) {\n          let origds_flag = \"\";\n      } else {\n          origds_flag = \"N\";\n      }\n      demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\n  }\n\n  let demo_lst = [model + \"_\" + demo_str];\n  let model_type = [\"CNA\", \"CFA\", \"CPA\"];\n  let ds_str;\n  let sex_type;\n\n  if ((model_type.includes(model)) && origds) {\n      if (sex === \"M\") {\n          sex_type = \"Male\";\n      } else {\n          sex_type = \"Female\";\n      }\n      ds_str = model + \"_OriginallyDisabled_\" + sex_type;\n      demo_lst.push(ds_str);\n  }\n  return demo_lst;\n}\n\nfunction v22_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\n      \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n\n  // int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n    int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n  }else {\n    int_hccs[\"HCC47_gCancer\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gCopdCF\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"RENAL\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gRenal_V23\"] = new Set();\n  }\n  // int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (hcc96_set.size && hcc85_set.size) {\n    int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n  }else {\n    int_hccs[\"HCC85_HCC96\"] = new Set();\n  }\n  // int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = my_dcs[\"gPsychiatric\"] && my_dcs[\"gSubstanceAbuse\"];\n  if (my_dcs[\"gPsychiatric\"].size && my_dcs[\"gSubstanceAbuse\"].size) {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric\"] =  my_dcs[\"gSubstanceAbuse\"];\n  }else {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = new Set();\n  }\n  // institutional model interactions\n  var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n  var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  \n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n  //int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"CHF_gCopdCF\"] = new Set();\n  }\n\n  //int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\n  }\n\n  //int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n  }\n\n\n  // int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n  }else {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n  }\n\n  // int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n  }\n\n  // int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\n  if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\n    int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"DIABETES_CHF\"] = new Set();\n  }\n\n\n  // int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n  }\n\n  // int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n  }\n\n\n  // int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n  }\n\n  // int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  if (hcc79_set.size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n  }\n\n  if (disabl === true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}\n\nfunction v23_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a dict of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\n      \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  \n  // int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n  }else {\n    int_hccs[\"HCC47_gCancer\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gCopdCF\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL_V23\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"RENAL_V23\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gRenal_V23\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gRenal_V23\"] = new Set();\n  }\n  // int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (hcc96_set.size && hcc85_set.size) {\n    int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n  }else {\n    int_hccs[\"HCC85_HCC96\"] = new Set();\n  }\n  // int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = my_dcs[\"gPsychiatric_V23\"] && my_dcs[\"gSubstanceAbuse_V23\"];\n  if (my_dcs[\"gPsychiatric_V23\"].size && my_dcs[\"gSubstanceAbuse_V23\"].size) {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] =  my_dcs[\"gSubstanceAbuse_V23\"];\n  }else {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = new Set();\n  }\n\n  // institutional model interactions\n  var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n  var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n  // int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"CHF\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"CHF_gCopdCF\"] =  my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"CHF_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"CARD_RESP_FAIL\"].size && my_dcs[\"gCopdCF\"].size) {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] =  my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n  }else {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n  }\n  // int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n  }\n  // int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\n  if (my_dcs[\"DIABETES\"].size && my_dcs[\"CHF\"].size) {\n    int_hccs[\"DIABETES_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"DIABETES_CHF\"] = new Set();\n  }\n  // int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  if (hcc79_set.size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n  }\n\n  if (disabl === true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  \n  return ccs.concat(int_hccs_new)\n}\n\nfunction v24_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n   var cnt = cc_set.length;\n   if (cnt > 9) {\n    int_hccs[\"D10P\"];\n   }\n   if (cnt > 3 && cnt < 10) {\n    var index = \"D\".concat(cnt);\n    int_hccs[index];\n   } \n\n  // diagnostic categories\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\n      \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  var hcc85_set = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  var hcc47_set = new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  var hcc96_set = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  // int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  if ( my_dcs[\"CANCER\"].size && hcc47_set.size) {\n      int_hccs[\"HCC47_gCancer\"] = hcc47_set;\n  }else {\n    int_hccs[\"HCC47_gCancer\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"DIABETES\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gDiabetesMellit\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gDiabetesMellit\"] = new Set();\n  }\n\n  // int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gCopdCF\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gCopdCF\"] = new Set();\n  }\n  \n  // int_hccs[\"HCC85_gRenal_V24\"] = my_dcs[\"RENAL_V24\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"RENAL_V24\"].size && hcc85_set.size) {\n      int_hccs[\"HCC85_gRenal_V24\"] = hcc85_set;\n  }else {\n    int_hccs[\"HCC85_gRenal_V24\"] = new Set();\n  }\n  // int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  if (my_dcs[\"gCopdCF\"].size && my_dcs[\"CARD_RESP_FAIL\"].size) {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"CARD_RESP_FAIL\"];\n  }else {\n    int_hccs[\"gRespDepandArre_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  if (hcc96_set.size && hcc85_set.size) {\n    int_hccs[\"HCC85_HCC96\"] = hcc96_set;\n  }else {\n    int_hccs[\"HCC85_HCC96\"] = new Set();\n  }\n  // int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = my_dcs[\"gPsychiatric_V24\"] && my_dcs[\"gSubstanceAbuse_V24\"];\n  if (my_dcs[\"gPsychiatric_V24\"].size && my_dcs[\"gSubstanceAbuse_V24\"].size) {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] =  my_dcs[\"gSubstanceAbuse_V24\"];\n  }else {\n    int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = new Set();\n  }\n  \n  // institutional model interactions\n  var hcc188_set = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  var hcc114_set = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  var hcc57_set = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x)));\n  var hcc79_set = new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n\n\n  // int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  if (my_dcs[\"SEPSIS\"].size && int_hccs[\"PRESSURE_ULCER\"].size) {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] =  int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc188_set.size) {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = hcc188_set;\n  }else {\n    int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = new Set();\n  }\n  // int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc188_set.size) {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set();\n  }\n\n  // int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"gCopdCF\"].size && hcc114_set.size) {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  if (int_hccs[\"PRESSURE_ULCER\"].size && hcc114_set.size) {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = int_hccs[\"PRESSURE_ULCER\"];\n  }else {\n    int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set();\n  }\n  // int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  if (my_dcs[\"SEPSIS\"].size && hcc114_set.size) {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = hcc114_set;\n  }else {\n    int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  if (my_dcs[\"gCopdCF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = my_dcs[\"gCopdCF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  if (my_dcs[\"CHF\"].size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = my_dcs[\"CHF\"];\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set();\n  }\n  // int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n  if (hcc79_set.size && hcc57_set.size) {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = hcc79_set;\n  }else {\n    int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set();\n  }\n  if (disabl == true) {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V24\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {     \n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}"],"sourceRoot":""}