{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/functions/functions.js"],"names":["default_dxmap","default_hccmap","default_hcccoefn","fetch","then","response","json","data","error","console","default_ver","default_model","default_baserate","default_verbose","default_never_trump","interactions","v22_interactions","v23_interactions","v24_interactions","demo_raf","condition_list","age","sex","model","orec","ver","baserate","i","length","j","temp_condition_list","toString","split","trim","raf_value","member","dx_desc","dx_array","verbose","temp_dx_array","hcc_dict","dx_hccs","hcc_cust_list","Object","entries","key","value","val","push","dx2cc","disabl","never_trump","unique_hccs","dx2hcc","dx_raf","dx2raf","clean_dx","dx_values","clean_dxlist","dx_set_values","forEach","v","clean_cc","cc_array","temp_cc_array","hcc_values","clean_hcclist","cc_desc","hcc_dct","cc_raf","hcc2raf","hcc_gaps","old_list","new_list","toLowerCase","toUpperCase","new_hccs","prep_hccs","old_hccs","diff","hcc_diff","raf","gaps","Math","round","dx_list","hccs","get_raf","dx_dct","dxdct_hccs","collator","Intl","Collator","undefined","numeric","sensitivity","sort","compare","dxmap","hccmap","unique_dx","dx","JSON","parse","stringify","agesex_edits","Set","hasOwnProperty","hcc","add","got_trumped","child","temp_a","temp_b","c","map","e","temp_c","trumped_hcc","hcc_list","Array","from","list_dx","String","replace","dx_set","hcc_map","hcc_list_temp","isNaN","hcc1","hcc_set","hcc2","trump_hccs","trumped_set","filter","x","has","hcc_increment","concat","final_hccs","old_set","new_set","old_children","new_children","new_parents","new_hccs_temp","downgraded_temp","downgraded","downgrade_to_temp","downgrade_to","upgraded","prep_hccs_set","upgraded_temp","del_hccs_temp","del_hccs_union","del_hccs","old_raf","new_raf","delta_raf","endsWith","demo_codes","agesex","cond_dict","condition_resolver","condition","allhcc","flag","conditionlist","list_hcc","item","Number","isInteger","startsWith","list_dx_clean","dct","includes","combined_hccs","ed_leukemia","ed_bronchitis","ed_vasc_insf","ed_emphysema","ed_breastca","ed_low_bw","ed_conjoined","ed_newbn_substance","ed_chron_resp","ed_disruptive_mood","ed_hemophilia","female_sex","edit_dct","demo_lst","hcc_lst","hcccoefn","demo_detail","hcc_detail","hcc_raf","demo","label","score","toFixed","raf_dct","age_maps","trunc","demo_str","male_sex","origds","medicaid","medicaid_condition","new_enrolee","age_labels","age_lower_bounds","age_upper_bounds","lower_bound","mcaid_flag","origds_flag","model_type","ds_str","sex_type","ccs","cc_set","int_hccs","diag_cats","my_dcs","key_set","new_values","int_hccs_new","size","cnt","index"],"mappings":"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","file":"functions.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/functions/functions.js\");\n","var default_dxmap, default_hccmap, default_hcccoefn;\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_dxmap.json')\n.then(response => response.json())\n.then(data => {\n   default_dxmap = data;\n})\n.catch(error => console.error(error));\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_hccmap.json')\n.then(response => response.json())\n.then(data => {\n   default_hccmap = data;\n})\n.catch(error => console.error(error));\nfetch('https://pnchakravarthula.github.io/epicc.github.io/dist/load_hcccoefn.json')\n.then(response => response.json())\n.then(data => {\n   default_hcccoefn = data;\n})\n.catch(error => console.error(error));\n\nvar default_ver = 'v23';\nvar default_model = 'CNA'; \nvar default_baserate = 868.0;\nvar default_verbose = true;\nvar default_never_trump = 0;\nvar interactions = {'v22': v22_interactions, 'v23': v23_interactions, 'v24': v24_interactions};\n\n/**\n * Returns demographic raf value based on age, gender and coding model\n * @customfunction\n * @param {string[][]} condition_list accepts array\n */\nfunction demo_raf(condition_list, age = 65, sex = 'M', model = '', orec = '0', ver = '', baserate = 0.0) {\n  for (var i = 0; i < condition_list.length; i++) {\n    for (var j = 0; j < condition_list[i].length; j++) {\n      condition_list = condition_list;\n    }\n  }\n  var temp_condition_list = condition_list.toString();\n  temp_condition_list = temp_condition_list.split(\",\");\n  for (i = 0; i < temp_condition_list.length; i++) {\n    temp_condition_list[i] = temp_condition_list[i].toString().trim();\n  }\n  var raf_value =  member(condition_list, age = 65, sex = 'M', model = '', orec = '0', ver = '', baserate = 0.0);\n  raf_value = raf_value['raf']['demo_score'];\n  return raf_value.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each DX Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} dx_array accepts array of hcc codes\n */\nfunction dx_desc(dx_array, ver = '', age = 0, sex = '', verbose = true) {\n  for (i = 0; i < dx_array.length; i++) {\n      for (j = 0; j < dx_array[i].length; j++) {\n        dx_array = dx_array;\n      }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  var hcc_dict = dx_hccs(temp_dx_array, ver = '', age = 0, sex = '', verbose = true);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n/**\n * Returns a comma separated list of the ccs represented by a list of DX codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx2cc(dx_array, age = 0, ver = '', sex = '', disabl = false, never_trump = 0, verbose = false) {\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  var unique_hccs = dx2hcc(temp_dx_array, age = 0, ver = '', sex = '', disabl = false, never_trump = 0, verbose = false);\n  return unique_hccs.toString();\n}\n\n/**\n * Returns cc raf of associated dx codes after conversion to cc and trumping/interaction logic is applied (equivalent of cc_raf(dx2cc(dx_array))\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction dx_raf(dx_array, age = 0, ver = '', model = '', sex = '', disabl = false, verbose = false, never_trump = 0, baserate = 0.0) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  var raf_value = dx2raf(temp_dx_array, age, ver, model, sex, disabl, verbose, never_trump, baserate);\n  return raf_value.toString();\n}\n\n/**\n * Given a list of dx codes, return a list of deduped, normalized and untrumped dx codes valid for the coding model\n * @customfunction\n * @param {string[][]} dx_array accepts array of dx codes\n */\nfunction clean_dx(dx_array, ver = '') {\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  for (var i = 0; i < dx_array.length; i++) {\n    for (var j = 0; j < dx_array[i].length; j++) {\n      dx_array = dx_array;\n    }\n  }\n  var temp_dx_array = dx_array.toString();\n  temp_dx_array = temp_dx_array.split(\",\");\n  for (i = 0; i < temp_dx_array.length; i++) {\n    temp_dx_array[i] = temp_dx_array[i].toString().trim();\n  }\n  var dx_values = clean_dxlist(temp_dx_array, ver);\n  var dx_set_values = [];\n  dx_values.forEach(v => dx_set_values.push(v));\n  return dx_set_values.toString();\n}\n\n/**\n * Given a list of ccs, return a list of deduped, normalized and untrumped ccs codes valid for the coding model\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction clean_cc(cc_array, ver = '') {\n  for (var i = 0; i < cc_array.length; i++) {\n      for (var j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  var hcc_values = clean_hcclist(temp_cc_array, ver = '');\n  return hcc_values.toString();\n}\n\n/**\n * Returns comma-separated list of descriptions of each HCC Code from CMS crosswalk.\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_desc(cc_array, ver = '', age = 0, sex = '', verbose = false) {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  var hcc_dict = hcc_dct(temp_cc_array, ver = '', age = 0, sex = '', verbose = false);\n  var hcc_cust_list = [];\n  for (var [key, value] of Object.entries(hcc_dict)) {\n    var val = key + \":\" + value[\"desc\"];\n    hcc_cust_list.push(val);\n  }\n  return hcc_cust_list.toString();\n}\n\n// /**\n//  * cc_info\n//  * @customfunction\n//  * @param {string[][]} cc_array accepts array of hcc codes\n//  */\n// function cc_info(cc_array, ver = '') {\n//   ver = ver || default_ver;\n\n//   for (i = 0; i < cc_array.length; i++) {\n//       for (j = 0; j < cc_array[i].length; j++) {\n//         cc_array = cc_array;\n//       }\n//   }\n//   var temp_cc_array = cc_array.toString();\n//   temp_cc_array = temp_cc_array.split(\",\");\n//   temp_cc_array.map(Function.prototype.call, String.prototype.trim);\n\n//   var hccmap = default_hccmap[ver];\n//   var output = [];\n//   for (var i = 0; i < temp_cc_array.length; i++) {\n//     var tem_hccmap = hccmap[temp_cc_array[i]]\n//     var raf_value = hcc2raf(temp_cc_array[i], ver = '');\n//   }  \n//   return output.toString();\n// }\n\n/**\n * Returns cc raf (does not include demographic RAF) of cc codes after trumping/interaction logic is applied\n * @customfunction\n * @param {string[][]} cc_array accepts array of hcc codes\n */\nfunction cc_raf(cc_array, ver = '') {\n  for (i = 0; i < cc_array.length; i++) {\n      for (j = 0; j < cc_array[i].length; j++) {\n        cc_array = cc_array;\n      }\n  }\n  var temp_cc_array = cc_array.toString();\n  temp_cc_array = temp_cc_array.split(\",\");\n  for (i = 0; i < temp_cc_array.length; i++) {\n    temp_cc_array[i] = temp_cc_array[i].toString().trim();\n  }\n  var raf_value = hcc2raf(temp_cc_array, ver = '');\n  return raf_value.toString();\n}\n\n// /**\n//  * cc_combine\n//  * @customfunction\n//  * @param {string[][]} cc_array accepts array of hcc codes\n//  */\n// function cc_combine(cc_array, ver = '', age = 0, disabl = false, never_trump = 0) {\n//   for (i = 0; i < cc_array.length; i++) {\n//       for (j = 0; j < cc_array[i].length; j++) {\n//         cc_array = cc_array;\n//       }\n//   }\n//   var temp_cc_array = cc_array.toString();\n//   temp_cc_array = temp_cc_array.split(\",\");\n//   temp_cc_array.map(Function.prototype.call, String.prototype.trim);\n\n//   var hccs = prep_hccs(temp_cc_array, ver = '', age = 0, disabl = false, never_trump = 0);\n//   return hccs.toString();\n// }\n\n\n// /**\n//  * cc_increment\n//  * @customfunction\n//  * @param {string[][]} old_list accepts array of hcc codes\n//  * @param {string[][]} new_list accepts array of hcc codes\n//  */\n// function cc_increment(old_list = [], new_list = [], ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n//   for (i = 0; i < old_list.length; i++) {\n//       for (j = 0; j < old_list[i].length; j++) {\n//         old_list = old_list;\n//       }\n//   }\n//   var temp_old_list = old_list.toString();\n//   temp_old_list = temp_old_list.split(\",\");\n//   temp_old_list.map(Function.prototype.call, String.prototype.trim);\n\n//   for (i = 0; i < new_list.length; i++) {\n//     for (j = 0; j < new_list[i].length; j++) {\n//       new_list = new_list;\n//     }\n// }\n// var temp_new_list = new_list.toString();\n// temp_new_list = temp_new_list.split(\",\");\n// temp_new_list.map(Function.prototype.call, String.prototype.trim);\n\n// var hcc_dict = hcc_increment(temp_old_list, temp_new_list, ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0);\n//   // var hcc_cust_list = [];\n//   // for (var [key, value] of Object.entries(hcc_dict)) {\n//   //   var val = key + \":\" + value[\"desc\"];\n//   //   hcc_cust_list.push(val);\n//   // }\n//   return hcc_cust_list.toString();\n// }\n\n// /**\n//  * cc_gaps\n//  * @customfunction\n//  * @param {string[][]} cc_array accepts array of hcc codes\n//  */\n// function cc_gaps(cc_array, hcc_array) \n// {\n//     for (i = 0; i < cc_array.length; i++) {\n//         for (j = 0; j < cc_array[i].length; j++) {\n//           cc_array = cc_array;\n//         }\n//     }\n//     for (i = 0; i < hcc_array.length; i++) {\n//         for (j = 0; j < hcc_array[i].length; j++) {\n//             hcc_array = hcc_array;\n//         }\n//     }\n//     var temp_cc_array = cc_array.toString();\n//     temp_cc_array = temp_cc_array.split(\",\");\n//     var temp_hcc_array = hcc_array.toString();\n//     temp_hcc_array = hcc_array.split(\",\");\n  \n//     var hcc_values = hcc_gaps(temp_cc_array, temp_hcc_array);\n//     var hcc_cust_list = [];\n//     for (var [key, value] of Object.entries(hcc_values)) {\n//       if (\"Deletes\" in hcc_values || \"Downgraded\" in hcc_values) {\n//         for (i = 0; i < value.length; i++) {\n//           hcc_cust_list[i] = value[i];\n//         }\n//       }\n//     }\n//     return hcc_cust_list.toString();\n//   }\n   \n function hcc_gaps(old_list = [], new_list = [], ver = '', model = '', age = 0, disabl = false, baserate = 0.0) {\n    /*\n    Utility to identify hccs that were dropped or downgraded from one list to the next\n    */\n\n    ver = ver.toLowerCase() || default_ver;\n    model = model.toUpperCase() || default_model;\n    baserate = baserate || default_baserate;\n\n    let new_hccs = prep_hccs(new_list, ver = ver, age = age, disabl = disabl);\n    let old_hccs = prep_hccs(old_list, ver = ver, age = age, disabl = disabl);\n\n    let diff = hcc_diff(old_hccs, new_hccs, ver = ver, model = model, disabl = disabl, baserate = baserate);\n    let raf = - hcc2raf(diff['deletes']) - hcc2raf(diff['downgraded']) + hcc2raf(diff['downgrade_to']);\n    let gaps = { \"Deletes\": diff[\"deletes\"], \"Downgraded\": diff[\"downgraded\"], \"raf\": raf, \"premium\": Math.round(raf * baserate, 2) };\n    return gaps;\n}\n\nfunction dx2raf(dx_list, age = 0, ver = '', model = '', sex = '', disabl = false, verbose = false, never_trump = 0, baserate = 0.0) {\n  /*\n  Utility to calculate raf from list of DX codes\n  */\n  ver = ver || default_ver;\n  model = model || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || never_trump;\n\n  var hccs = dx2hcc(dx_list, age, ver, sex, disabl, never_trump, verbose);\n  var raf = get_raf([], hccs, ver = ver, model = model, baserate = baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction dx2hcc(dx_list, age = 0, ver = '', sex = '', disabl = false, never_trump = 0, verbose = false) {\n  /*\n  Utility to calculate a list of unique, trumped, HCCs from dx codes, includes interactions and age/sex edits.\n  :param dx_list: list of str\n                  List of DX Codes (case and decimal insensitive)\n  :param ver: str\n              HCC Model version\n  :param age: float\n              Beneficiary age\n  :param verbose:\n  :param disabl: bool\n                  Disability flag\n  :param sex: Gender {\"M\" or \"F\"}\n  :return: list of str\n          List of HCC codes\n  */\n  ver = ver || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var dx_dct = dx_hccs(dx_list, ver = ver, age = age, sex = sex, verbose = verbose);\n  var unique_hccs = dxdct_hccs(dx_dct, never_trump = never_trump);\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  unique_hccs.sort(collator.compare);\n  unique_hccs = interactions[ver](unique_hccs, disabl, age);\n  return unique_hccs;\n}\n\nfunction dx_hccs(dx_list, ver = '', age = 0, sex = '', verbose = true) {\n  /*\n  Look up the HCC code for each unique DX code in a list of DX. Includes trumping and agesex edits\n  :param dx_list: list of str\n                  List of dx codes; case and decimal insensitive\n  :param ver: str\n              Optional HCC version. Otherwise uses default version of ccalc object\n  :param age: float\n              Member age\n  :param sex: str\n              Member gender {\"M\"/\"F\"}\n  :param verbose: bool\n                  Include Non HCC DX in outputs\n  :return: dict\n          Dict of unique DX codes and their corresponding hcc codes\n  */\n  ver = ver || default_ver;\n  verbose = verbose || default_verbose;\n\n  var dxmap = default_dxmap[ver];\n  var hccmap = default_hccmap[ver];\n\n  var dx_dct = {};\n\n  var unique_dx = clean_dxlist(dx_list, ver);\n  // Validate DX against model and pull in DX info  \n  for (var dx of unique_dx) {\n      if (dx in dxmap) {\n          dx_dct[dx] = JSON.parse(JSON.stringify(dxmap[dx]));\n      } else if (verbose) {\n          dx_dct[dx] = { \"desc\": \"\", \"hccs\": {} };\n      }\n  }\n\n  if (age && sex) {  // age and sex are optional. w/o them this function can still generically do dx->hcc calcs\n      agesex_edits(dx_dct, age, sex);\n  }\n\n  // Find all unique HCCs that are valid in the hcc ver\n  var unique_hccs = new Set();\n\n  for (var key in dx_dct) {\n      if (dx_dct.hasOwnProperty(key)) {\n          for (var hcc in dx_dct[key]['hccs']) {\n              if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                  if (dx_dct[key]['hccs'][hcc] in hccmap) {\n                      unique_hccs.add(dx_dct[key]['hccs'][hcc]);\n                  }\n              }\n          }\n      }\n  };\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n\n  // Apply trumping and convert to HCC sets to lists (better for json serialization)\n\n  for (var dx in dx_dct) {\n      if (dx_dct.hasOwnProperty(dx)) {\n          var temp_a = dx_dct[dx]['hccs'];\n          var temp_b = [];\n          for (var i in dx_dct[dx]['hccs']) {\n              temp_b.push({ 'desc': hccmap[dx_dct[dx]['hccs'][i]]['desc'] });\n          }\n          var c = temp_a.map(function (e, i) {\n              return [e, temp_b[i]];\n          });\n          var temp_c = {};\n          for (var key in c) {\n              if (c.hasOwnProperty(key)) {\n                  temp_c[c[key][0]] = c[key][1];\n              }\n          }\n          dx_dct[dx]['hccs'] = temp_c;\n          for (var trumped_hcc in got_trumped) {\n              if (got_trumped.hasOwnProperty(trumped_hcc)) {\n                  if (got_trumped[trumped_hcc] in dx_dct[dx]['hccs']) { // If we find trumped HCC, replace with note of its demise\n                      dx_dct[dx]['hccs'][got_trumped[trumped_hcc]]['trumped by'] = got_trumped[got_trumped[trumped_hcc]];\n                  }\n              }\n          }\n      }\n  }\n  return dx_dct;\n}\n\nfunction dxdct_hccs(dx_dct, never_trump = 0) {\n  never_trump = never_trump || default_never_trump;\n  var hcc_list = new Set();\n\n  if (never_trump == 0) {\n      for (var key in dx_dct) {\n          if (dx_dct.hasOwnProperty(key)) {\n              for (var hcc in dx_dct[key]['hccs']) {\n                  if (dx_dct[key]['hccs'].hasOwnProperty(hcc)) {\n                      if (!(dx_dct[key]['hccs'][hcc].hasOwnProperty(['trumped by']))) {\n                        hcc_list.add(hcc);                          \n                      }\n                  }\n              }\n          }\n      }\n      hcc_list = Array.from(hcc_list);\n      var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n      hcc_list.sort(collator.compare);\n  } else {\n    var hcc_list = new Set();\n    for (var key in dx_dct) {\n        if (dx_dct.hasOwnProperty(key)) { \n            for (var hcc in dx_dct[key]['hccs']){\n                hcc_list.add(dx_dct[key]['hccs'][hcc]);\n            }\n        }\n    }\n    hcc_list = Array.from(hcc_list);\n    var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n    hcc_list.sort(collator.compare);\n  }\n  return hcc_list;\n}\n\nfunction clean_dxlist(dx_list, ver = '') {\n  // Convert string to list, dedupe, and ensure DX are formatted correctly.\n  ver = ver || default_ver;\n  var dxmap = default_dxmap[ver];\n  var list_dx = [];\n  for (var i in dx_list) {\n      if (dx_list[i] != '') {\n          list_dx[i] = (String(dx_list[i]).replace('.', '')).toUpperCase();\n      }\n  }\n  if (typeof (list_dx) == 'string') {\n      list_dx = list_dx.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  var dx_set = new Set();\n  for (var dx of list_dx) {\n      if (dxmap.hasOwnProperty(dx)) {\n          dx_set.add(dx);\n      }\n  }\n  return dx_set;\n}\n\nfunction clean_hcclist(hcc_list, ver = '') {\n  ver = ver || default_ver;\n  var hcc_map = default_hccmap[ver];\n\n  if (typeof hcc_list == 'string') {\n    hcc_list = hcc_list.split(/\\s*,\\s*|\\s+|\\s*;\\s*|\\s*:\\s*/);\n  }\n  else if (typeof hcc_list == 'number') {\n    hcc_list = [hcc_list];\n  }\n\n  // If you got integers, add the HCC prefix. If strings, make sure they're stripped and uppercase\n  var hcc_list_temp = [];\n  for (var hcc of hcc_list) {\n      if (!isNaN(hcc.toString().trim())) {\n          hcc_list_temp.push(\"HCC\" + hcc.toString().trim());\n      } else {\n          hcc_list_temp.push(hcc.trim().toUpperCase());\n      }\n  }\n  hcc_list = hcc_list_temp;\n  //Replacing HCC019 to HCC19\n  var hcc_list_temp = [];\n  for (var hcc1 of hcc_list) {\n      hcc_list_temp.push(hcc1.replace(/HCC0+/, 'HCC'));\n  }\n  hcc_list = hcc_list_temp;\n\n  // We want HCC1 rather than HCC001, etc.\n  var hcc_set = new Set();\n  for (var hcc2 of hcc_list) {\n      if (hcc_map.hasOwnProperty(hcc2)) {\n          hcc_set.add(hcc2);\n      }\n  }\n  return Array.from(hcc_set);\n}\n\nfunction hcc2raf(hcc_list, ver = '', model = '', disabl = false, age = 0, never_trump = 0, baserate = 0.0) {\n  /*\n  Utility for calculating hcc raf for a list of hccs\n  */\n  ver = ver || default_ver;\n  model = model || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n  hcc_list = prep_hccs(hcc_list, ver = ver, age = age, disabl = disabl, never_trump = 0);\n  var raf = get_raf([], hcc_list, ver = ver, model = model, baserate = baserate);\n  return raf[\"hcc_score\"];\n}\n\nfunction prep_hccs(hcc_list, ver = '', age = 0, disabl = false, never_trump = 0) {\n  /*\n  Utility for prepping an HCC list, applying Trumping and Interactions; does not include age/sex interactions\n  as they at the DX level\n  */\n  ver = ver || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var hccs = trump_hccs(hcc_list, ver = ver, never_trump = never_trump);\n  hccs = interactions[ver](hccs, disabl, age);\n  return hccs;\n}\n\nfunction trump_hccs(hcc_list, ver = '', never_trump = 0) {\n  // Given a list of HCCs and an HCC version, returns a list of HCCs after trumping\n  ver = ver || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var hccmap = default_hccmap[ver];\n\n  // Make sure we're getting the right format\n  hcc_list_temp = clean_hcclist(hcc_list, ver = ver);\n  if (never_trump == 0) {\n      var hcc_set = new Set(hcc_list_temp);\n      var trumped_set = new Set();\n      for (var hcc of hcc_set) {\n          if (hcc in hccmap) {\n              for (var child of hccmap[hcc]['children']) {\n                  trumped_set.add(child);\n              }\n          }\n      }\n      hcc_set = new Set([...hcc_set].filter(x => !trumped_set.has(x)))\n      hcc_list = Array.from(hcc_set);\n  }\n\n  var collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n  hcc_list_temp.sort(collator.compare);\n  return hcc_list_temp;\n}\n\nfunction hcc_dct(hcc_list, ver = '', age = 0, sex = '', verbose = false) {\n  ver = ver || default_ver;\n  verbose = verbose || default_verbose;\n\n  var hccmap = default_hccmap[ver];\n  var unique_hccs = new Set();\n  for (var hcc of hcc_list) {\n      if (hcc in hccmap) {\n          unique_hccs.add(hcc);\n      }\n  }\n\n  var got_trumped = {};\n  for (var hcc of unique_hccs) {\n      for (var child of hccmap[hcc]['children']) {\n          got_trumped[child] = hcc;\n      }\n  }\n  var hcc_dct = {};\n\n  for (var hcc of unique_hccs) {\n      if (hccmap.hasOwnProperty(hcc)) {\n          hcc_dct[hcc] = JSON.parse(JSON.stringify(hccmap[hcc]))  // Get details for this hcc Code\n          delete hcc_dct[hcc]['parents'];\n          delete hcc_dct[hcc]['children'];\n      } else if (verbose) {\n          hcc_dct[hcc] = { \"desc\": \"\", \"parents\": {} };\n      }\n\n  }\n\n  for (var hcc in hcc_dct) {\n      for (var trumped_hcc in got_trumped) {\n          if (trumped_hcc == hcc) {  // If we find trumped HCC, replace with note of its demise\n              hcc_dct[hcc]['trumped by'] = got_trumped[trumped_hcc];\n          }\n      }\n  }\n\n  return hcc_dct;\n}\n\nfunction hcc_increment(old_list, new_list, ver = '', model = '', age = 0, disabl = false, never_trump = 0, baserate = 0.0) {\n  // Utility to identify the incremental HCCs and value of adding a new list HCCs to a base list of HCCs\n  ver = ver|| default_ver;\n  model = model || default_model\n  baserate = baserate || default_baserate\n  never_trump = never_trump || default_never_trump\n  age = age || 0;\n  disabl = disabl || false;\n  var new_hccs = prep_hccs(new_list, ver = ver, age = age, disabl = disabl, never_trump = never_trump)\n  var old_hccs = prep_hccs(old_list, ver = ver, age = age, disabl = disabl)\n  new_hccs = new_hccs + ','.concat(old_hccs)\n  var final_hccs = prep_hccs(new_hccs, ver = ver, age = age, disabl = disabl, never_trump = never_trump)\n  var diff = hcc_diff(old_hccs, final_hccs, ver = ver, model = model, disabl = disabl, baserate = baserate, never_trump = never_trump)\n  diff[\"final_hccs\"] = final_hccs;\n  delete diff['downgraded'];\n  delete diff['downgrade_to'];\n  delete diff['deletes'];\n  return diff.final_hccs;\n}\n\nfunction hcc_diff(old_list = [], new_list = [], ver = '', age = 0, sex = '', model = '', disabl = false, never_trump = 0, baserate = 0.0) {\n  /*\n  Calculate the changes between two hcc lists, {\"adds\":[], \"upgraded\":[] \"downgraded\":[], \"deletes\":[]}\n  - \"adds\" are new HCC Codes (includes upgrades of other codes),\n  - \"upgraded\" are codes from base that are no longer relevant due to new codes\n  - \"downgraded\" are codes from base that are present at a lower specificity in new\n  - \"deletes\" are codes from base that are no longer present at all\n  */\n\n  ver = ver || default_ver;\n  model = model || default_model;\n  baserate = baserate || default_baserate;\n  never_trump = never_trump || default_never_trump;\n\n  let hccmap = default_hccmap[ver];\n  // Prep cleans and trumps the list and add interactions\n  let old_set = new Set(prep_hccs(old_list, ver = ver, age = age, disabl = disabl));\n  let new_set = new Set(prep_hccs(new_list, ver = ver, age = age, disabl = disabl, never_trump = never_trump));\n\n  // Find the full set of codes that each set can trump\n  let old_children = new Set();\n  let new_children = new Set();\n  let new_parents = new Set();\n  for (let hcc of old_set) {\n      if (hcc in hccmap) {\n          for (let child of hccmap[hcc]['children']) {\n              old_children.add(child)\n          }\n      }\n  }\n  for (let hcc of new_set) {\n      if (hcc in hccmap) {\n          for (let child of hccmap[hcc]['children']) {\n              old_children.add(child)\n          }\n      }\n  }\n  for (let hcc of new_set) {\n      if (hcc in hccmap) {\n          for (let child of hccmap[hcc]['children']) {\n              old_children.add(child)\n          }\n      }\n  }\n\n  // New HCCs, except where they are trumped by old HCCs (downgrades)\n  let new_hccs_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  let new_hccs = new Set([...new_hccs_temp].filter(x => !old_children.has(x)));\n  let downgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  let downgraded = new Set([...downgraded_temp].filter(x => new_parents.has(x)));\n  let downgrade_to_temp = new Set([...new_set].filter(x => !old_set.has(x)));\n  let downgrade_to = new Set([...downgrade_to_temp].filter(x => old_children.has(x)));\n  //new_hccs = new_set.difference(old_set).difference(old_children)\n  //downgraded = old_set.difference(new_set).intersection(new_parents)\n  //downgrade_to = new_set.difference(old_set).intersection(old_children)\n  let upgraded = new Set();\n  if (never_trump === 1) {\n      let prep_hccs_set = new Set(prep_hccs(Array.from(new_set)));\n      let upgraded_temp = new Set([...old_set].filter(x => !prep_hccs_set.has(x)));\n      let upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n      //old_set.difference(set(this.prep_hccs(list(new_set)))).intersection(new_children)\n  } else {\n      let upgraded_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n      let upgraded = ([...upgraded_temp].filter(x => new_children.has(x)));\n      //upgraded = old_set.difference(new_set).intersection(new_children)\n  }\n\n  let del_hccs_temp = new Set([...old_set].filter(x => !new_set.has(x)));\n  let del_hccs_union = new Set([...upgraded, ...downgraded]);\n  let del_hccs = new Set([...del_hccs_temp].filter(x => !del_hccs_union.has(x)));\n  //del_hccs = old_set.difference(new_set).difference(upgraded.union(downgraded))\n\n  let old_raf = hcc2raf(Array.from(old_set), ver = ver, model = model, baserate = baserate, never_trump = never_trump);\n  let new_raf = hcc2raf(Array.from(new_set), ver = ver, model = model, baserate = baserate, never_trump = never_trump);\n  let delta_raf = new_raf - old_raf;\n\n  let diff = {\n      \"adds\": Array.from(new_hccs),\n      \"upgraded\": Array.from(upgraded),\n      \"downgraded\": Array.from(downgraded),\n      \"downgrade_to\": Array.from(downgrade_to),\n      \"deletes\": Array.from(del_hccs),\n      \"raf\": delta_raf,\n      \"premium\": Math.round(delta_raf * baserate, 2)\n  }\n  return diff;\n}\n\nfunction member(condition_list, age = 65, sex = 'M', model = '', orec = '0', ver = '', baserate = 0.0) {\n  /*\n      Builds an HCC risk score for a Medicare Advantage member given demographic and disease factors\n      :param dx_list: list of str\n                      List of DX codes; case and decimal insensitive\n      :param age: float\n                  Age of member\n      :param sex: str\n                  Gender of Member: Accepts \"M\"/\"F\", \"Male\"/\"Female\" or CMS numerical codes 1/2\n      :param model: str\n                  HCC Model to be used for member. Accepts:\n                      \"CNA\": Community - Non-dual aged\n                      \"CND\": Community - Non-dual disabled\n                      \"CFA\": Community - Full Benefit dual aged\n                      \"CFD\": Community - Full Benefit dual disabled\n                      \"CPA\": Community - Partial Benefit dual aged\n                      \"CPD\": Community - Partial Benefit dual disabled\n                      \"INS\": Institutional\n                      \"NE\": New enrollee\n                      \"SNPNE\": C-SNP new enrolee\n      :param orec: str\n                  Original Reason for Entitlement:\n                      \"0\": Old age (OASI)\n                      \"1\": Disability (DIB)\n                      \"2\": End Stage Renal Disease (ESRD)\n                      \"3\": Both DIB and ESRD\n\n      :param ver: str\n                  Version of HCC Model to be used (overrides default version set in Ccalc).\n                  Accepts {'v22', 'v23', 'v24'}\n      :return: dict\n              Map of factors and risk scores for member\n  */\n  ver = ver.toLowerCase() || default_ver;\n  model = model.toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n\n  // Get age/sex/disability demographic codes\n  var disabl = model.endsWith(\"D\");\n  var demo_codes = agesex(age, sex, orec, model);\n  var cond_dict = condition_resolver(condition_list, ver = ver);\n  var condition = cond_dict['condition'];\n  var allhcc = cond_dict['allhcc'];\n  var verbose = default_verbose;\n  var flag;\n  var raf;\n  var dx_dct;\n\n  if (allhcc == 1) {\n      var dx_dct = hcc_dct(condition, ver = ver, age = age, sex = sex, verbose = verbose);\n      unique_hccs = prep_hccs(condition, ver = ver, age = age);\n      unique_hccs = interactions[ver](unique_hccs, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver = ver, model = model, baserate = baserate);\n      flag = 'hcc';\n  } else {\n      // process DX list\n      dx_dct = dx_hccs(condition, ver = ver, age = age, sex = sex, verbose = this.verbose);\n      var unique_hccs = dxdct_hccs(dx_dct);\n      unique_hccs = interactions[ver](unique_hccs, disabl, age);\n      raf = get_raf(demo_codes, unique_hccs, ver = ver, model = model, baserate = baserate);\n      flag = 'dx';\n  }\n\n  return {\n      \"hcc_model\": { \"version\": ver, \"model\": model },\n      \"demo\": { \"age\": age, \"sex\": sex, \"orec\": orec },\n      \"raf\": raf,\n      'flag': flag,\n      \"dx_hccs\": dx_dct\n  }\n}\n\nfunction condition_resolver(conditionlist, ver = '', never_trump = 0, allhcc = 0) {\n  //need factoring\n  ver = ver || default_ver;\n  never_trump = never_trump || default_never_trump;\n  var list_hcc = [];\n  for (item in conditionlist) {\n    if (Number.isInteger(item) || item.startsWith('HCC')){\n      list_hcc.push(item);\n    }\n  }\n  // list_hcc = conditionlist.filter(item => Number.isInteger(item) || item.startsWith('HCC'));\n  var list_dx = [];\n  var list_dx_clean = [];\n  var dct = new Set();\n  if ((list_hcc.length > 0) || allhcc) {\n      allhcc = 1;\n      list_dx = conditionlist.filter(item => !(list_hcc.includes(item)));\n      list_dx_clean = clean_dxlist(list_dx, ver);\n      var hccs = dx2hcc(list_dx_clean, ver = ver, never_trump = never_trump);\n      var combined_hccs = list_hcc.concat(hccs);\n      dct = { 'allhcc': allhcc, 'condition': combined_hccs };\n\n  } else {\n      list_dx = conditionlist;\n      dct = { 'allhcc': allhcc, 'condition': list_dx };\n  }\n  return dct;\n}\n\nfunction agesex_edits(dx_dct, age, sex) {\n  /*\n  Edits DX List for a beneficiary based on AGE/SEX (From CMS I0V05ED2.TXT)\n  Valid for V22, V23, V24\n  :param dx_dct: dict\n                 Dict of {DX:HCC}\n  :param age: float\n              Age of member\n  :param sex: str\n              Member's gender\n  :return: dx_dct: dict\n              Dictionary of {DX:HCC} edited per member age/sex rules\n  */\n  var ed_leukemia = [\"C9100\", \"C9101\", \"C9102\", \"C9500\", \"C9501\", \"C9502\",\n      \"C7400\", \"C7401\", \"C7402\", \"C7410\", \"C7411\", \"C7412\",\n      \"C7490\", \"C7491\", \"C7492\"];\n\n  var ed_bronchitis = [\"J410\", \"J411\", \"J418\", \"J42\", \"J440\", \"J441\"];\n\n  var ed_vasc_insf = [\"K55011\", \"K55012\", \"K55019\", \"K55021\", \"K55022\",\n      \"K55029\", \"K55031\", \"K55032\", \"K55039\", \"K55041\", \"K55042\",\n      \"K55049\", \"K55051\", \"K55052\", \"K55059\", \"K55061\", \"K55062\",\n      \"K55069\", \"K5530\", \"K5531\", \"K5532\", \"K5533\"];\n\n  var ed_emphysema = [\"J430\", \"J431\", \"J432\", \"J438\", \"J439\", \"J449\", \"J982\", \"J983\"];\n\n  var ed_breastca = [\"C50011\", \"C50012\", \"C50019\", \"C50021\", \"C50022\", \"C50029\",\n      \"C50111\", \"C50112\", \"C50119\", \"C50121\", \"C50122\", \"C50129\",\n      \"C50211\", \"C50212\", \"C50219\", \"C50221\", \"C50222\", \"C50229\",\n      \"C50311\", \"C50312\", \"C50319\", \"C50321\", \"C50322\", \"C50329\",\n      \"C50411\", \"C50412\", \"C50419\", \"C50421\", \"C50422\", \"C50429\",\n      \"C50511\", \"C50512\", \"C50519\", \"C50521\", \"C50522\", \"C50529\",\n      \"C50611\", \"C50612\", \"C50619\", \"C50621\", \"C50622\", \"C50629\",\n      \"C50811\", \"C50812\", \"C50819\", \"C50821\", \"C50822\", \"C50829\",\n      \"C50911\", \"C50912\", \"C50919\", \"C50921\", \"C50922\", \"C50929\"];\n\n  var ed_low_bw = [\"P0500\", \"P0501\", \"P0502\", \"P0503\", \"P0504\", \"P0505\",\n      \"P0506\", \"P0507\", \"P0508\", \"P0509\", \"P0510\", \"P0511\",\n      \"P0512\", \"P0513\", \"P0514\", \"P0515\", \"P0516\", \"P0517\",\n      \"P0518\", \"P0519\", \"P052\", \"P059\", \"P0700\", \"P0701\",\n      \"P0702\", \"P0703\", \"P0710\", \"P0714\", \"P0715\", \"P0716\",\n      \"P0717\", \"P0718\", \"P0720\", \"P0721\", \"P0722\", \"P0723\",\n      \"P0724\", \"P0725\", \"P0726\", \"P0730\", \"P0731\", \"P0732\",\n      \"P0733\", \"P0734\", \"P0735\", \"P0736\", \"P0737\", \"P0738\",\n      \"P0739\", \"P080\", \"P081\", \"P0821\", \"P0822\"];\n\n  var ed_conjoined = [\"Q894\"];\n\n  var ed_newbn_substance = [\"K551\", \"K558\", \"K559\",\n      \"P041\", \"P0411\", \"P0412\", \"P0413\", \"P0414\", \"P0415\",\n      \"P0416\", \"P0417\", \"P0418\", \"P0419\", \"P041A\",\n      \"P042\", \"P043\", \"P0440\", \"P0441\", \"P0442\", \"P0449\",\n      \"P045\", \"P046\", \"P048\", \"P0481\", \"P0489\",\n      \"P049\", \"P930\", \"P938\", \"P961\", \"P962\",\n      \"Q390\", \"Q391\", \"Q392\", \"Q393\", \"Q394\", \"Q6410\",\n      \"Q6411\", \"Q6412\", \"Q6419\", \"Q790\", \"Q791\", \"Q792\",\n      \"Q793\", \"Q794\", \"Q7951\"];\n\n  var ed_chron_resp = [\"P270\", \"P271\", \"P278\", \"P279\"];\n\n  var ed_disruptive_mood = [\"F3481\"];\n\n  var ed_hemophilia = [\"D66\", \"D67\"];\n\n  // Optimal to have the loop outside of the age checks, but this is easier to read\n  for (var dx in dx_dct) {\n\n      // Split acute lymphoid and other acute leukemias, except  myeloid diagnoses to age 18+ (HCC 8)\n      // and age <18 (HCC 9). Split adrenal gland cancer diagnoses to age 18+ (HCC 10) and age <18 (HCC 9).\n      if (age < 18 && ed_leukemia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC9\"]);\n      }\n\n      // Split chronic bronchitis diagnoses to age 18+ (HCC 160) and age <18 (HCC 161)\n      if (age < 18 && ed_bronchitis.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC161\"]);\n      }\n\n      // Split acute vascular insufficiency of intestine diagnosis to age 2+ (HCC 154) and age <2 (HCC 42)\n      if (age < 2 && ed_vasc_insf.includes(dx)) {\n        dx_dct[dx]['hccs'] = [(\"HCC42\")];\n      }\n\n      // Split breast cancer diagnoses to age 50+ (HCC 12) and age <50 (HCC 11)\n      if (age < 50 && ed_breastca.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC11\"]);\n      }\n\n      // Split emphysema diagnoses to age 18+ (HCC 160) and age 2-17 (HCC160; split not needed in HHS model).\n      // If age <2 out of payment model\n      if (age < 2 && ed_emphysema.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Edit for newborn low birthweight. If age 1+ out of payment model\n      if (age != 0 && ed_low_bw.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Split conjoined twins diagnoses to age 1+ (HCC 97) and age <1 (HCC 247)\n      if (age >= 1 && ed_conjoined.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC97\"]);\n      }\n\n      // Neonatal effects of maternal drug abuse: If age 2+ out of payment model\n      if (age >= 2 && ed_newbn_substance.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Split chronic respiratory disease arising in the perinatal period diagnoses to age 2+\n      // (HCC 162) and age <2 (HCC 127).\n      if (age >= 2 && ed_chron_resp.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC162\"]);\n      }\n\n      // Mood disorder: Edit for targeted age of diagnosis. If age <6 or age >18 out of payment model.\n      if (age < 6 || age > 18 && ed_disruptive_mood.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC-1\"]);\n      }\n\n      // Split hemophilia diagnoses to male (HCC 66 if age <65 or HCC 66 if age 65+; age split not needed in HHS model)\n      //  and female (HCC 75)\n      female_sex = [\"2\", \"F\", \"Female\"];\n      if (female_sex.includes(sex) && ed_hemophilia.includes(dx)) {\n        dx_dct[dx]['hccs'] = ([\"HCC75\"]);\n      }\n  }\n\n  edit_dct = {};  // Build new dict after filtering out all HCCs edited out\n  for (dx in dx_dct) {\n      if (dx_dct[dx]['hccs'] != ([\"HCC-1\"])) {\n          edit_dct[dx] = dx_dct[dx];\n      }\n  }\n\n  return edit_dct;\n}\n\nfunction get_raf(demo_lst, hcc_lst, ver = '', model = '', verbose = true, baserate = 0.0) {\n  /*\n  Look up demographic and hcc RAF for a member given codes. IMPORTANT: ASSUMES HCCs are already clean and deduped\n  and hierarchy. Based on CMS V2218O1P.TXT.  Returns a dict of risk scores in the format:\n  {\n      raf: float of total risk factor,\n      premium: PM PM payment for members of this raf and base rate($)\n      demo_raf: float of demographic risk factor\n      hcc_raf: float of hcc risk factor\n      demo_detail: dict of {demographic_code: demo_raf} for each demographic code in list\n      hcc_defail: dict of {hcc_code: hcc:raf} for each hcc code in list\n  :param model: str\n                  Hcc model for use\n  :param demo_lst: list of str\n                  List of applicable demographic codes for a member (eg CNA_F65_70)\n  :param hcc_lst: list of str\n                  List of hccs (assumes hccs have already been trumped)\n  :param ver: str\n                  Optional HCC version to be used in calculation\n  :param model: str\n          Optional HCC model to be used in calculation\n  :param verbose: bool\n  :param baserate: float\n                  pmpm premium base rate\n  :return: dict\n          raf_dct\n  */\n  ver = ver.toLowerCase() || default_ver;\n  model = (String(model)).toUpperCase() || default_model;\n  baserate = baserate || default_baserate;\n  verbose = verbose || default_verbose;\n\n  var hcccoefn = default_hcccoefn[ver];\n  var demo_detail = {};\n  var hcc_detail = {};\n  var demo_raf = 0.0;\n  var hcc_raf = 0.0;\n\n  for (var demo of demo_lst) {\n      if (hcccoefn.hasOwnProperty(demo)) {\n          demo_detail[demo] = hcccoefn[demo];\n          demo_raf += hcccoefn[demo];\n      }\n  }\n\n  for (var hcc in hcc_lst) {\n      var label = model + \"_\" + hcc_lst[hcc];\n      if (label in hcccoefn) {\n          hcc_detail[label] = hcccoefn[label];\n          hcc_raf += hcccoefn[label];\n      } else if (verbose) {\n          hcc_detail[label] = 0.0;\n      }\n  }\n\n  var score = (demo_raf + hcc_raf).toFixed(4);\n  var raf_dct = {\n      \"score\": score,\n      \"premium\": (score * baserate).toFixed(2),\n      \"demo_score\": (demo_raf).toFixed(4),\n      \"hcc_score\": (hcc_raf).toFixed(4),\n      \"demo_detail\": demo_detail,\n      \"hcc_detail\": hcc_detail\n  };\n  return raf_dct;\n}\n\nfunction agesex(age, sex, orec, model) {\n  /*\n      Create demographic variables used in regressions, from CMS SAS macro AGESEXV2\n      Valid for V22, V23, V24\n      :param age: float\n                  Age of beneficiary\n      :param sex: str\n                  Gender of beneficiary\n      :param orec: str\n                  Original reason for enrollment\n      :param model: str\n                  Code for CMS model (str)\n      :return: list of str\n              list of demographic str for looking up demo coefficients\n  */\n  let age_maps = {\n      \"STD\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65_69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"],\n      \"NE\": [\"0_34\", \"35_44\", \"45_54\", \"55_59\", \"60_64\", \"65\", \"66\", \"67\", \"68\", \"69\", \"70_74\", \"75_79\",\n          \"80_84\", \"85_89\", \"90_94\", \"95_GT\"]\n  };\n\n  age = Math.trunc(age);  // In case float is passed and someone at upper age bound\n\n  let demo_str;\n  let male_sex = [\"M\", \"MALE\", \"1\"];\n  if (male_sex.includes(sex.toUpperCase())) {\n      demo_str = 'M';\n  } else {\n      demo_str = \"F\";\n  }\n\n  // Directly from CMS AGESEXV2\n  let disabl = (age < 65) && (orec != \"0\");\n  let origds = (orec == \"1\") && !(disabl);\n  let medicaid;\n  let medicaid_condition = [\"CP\", \"CF\"];\n  if (medicaid_condition.includes(model)) {\n      medicaid = true;\n  } else {\n      medicaid = false;\n  }\n  let new_enrolee = model.endsWith(\"NE\");\n  let age_labels = [];\n  if (new_enrolee) {\n      age_labels = age_maps[\"NE\"];\n  } else {\n      age_labels = age_maps[\"STD\"];\n  }\n\n  // Derive the lower bound & upper bound of each age band from ordered list of age labels\n  let age_lower_bounds = [];\n  let age_upper_bounds = [];\n  for (let i in age_labels) {\n      let split = age_labels[i].split(\"_\");\n      age_lower_bounds.push(split[0]);\n      age_upper_bounds.push(split[1]);\n  }\n\n  for (const [i, lower_bound] of age_lower_bounds.entries()) {\n      if (i == age_lower_bounds[age_lower_bounds.length] - 1) {\n          demo_str += age_labels[i];\n          break;\n      }\n      if ((lower_bound >= age) && (lower_bound < age_lower_bounds[i + 1])) {\n          demo_str += age_labels[i];\n          break;\n      }\n  }\n\n  if (model.endsWith(\"NE\")) {\n      if (medicaid) {\n          let mcaid_flag = \"\";\n      } else {\n          mcaid_flag = \"N\";\n      }\n      if (origds) {\n          let origds_flag = \"\";\n      } else {\n          origds_flag = \"N\";\n      }\n      demo_str = mcaid_flag + \"MCAID_\" + origds_flag + \"ORIGDIS_NE\" + demo_str;\n  }\n\n  let demo_lst = [model + \"_\" + demo_str];\n  let model_type = [\"CNA\", \"CFA\", \"CPA\"];\n  let ds_str;\n  let sex_type;\n\n  if ((model_type.includes(model)) && origds) {\n      if (sex === \"M\") {\n          sex_type = \"Male\";\n      } else {\n          sex_type = \"Female\";\n      }\n      ds_str = model + \"_OriginallyDisabled_\" + sex_type;\n      demo_lst.push(ds_str);\n  }\n  return demo_lst;\n}\n\nfunction v22_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse\": new Set([\"HCC54\", \"HCC55\"]),\n      \"gPsychiatric\": new Set([\"HCC57\", \"HCC58\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"gSubstanceAbuse_gPsychiatric\"] = my_dcs[\"gPsychiatric\"] && my_dcs[\"gSubstanceAbuse\"];\n\n  // institutional model interactions\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\n  int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\n  int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n\n  if (typeof disabl !== 'undefined') {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}\n\nfunction v23_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a dict of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V23\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\",\"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V23\": new Set([\"HCC54\", \"HCC55\",\"HCC56\"]),\n      \"gPsychiatric_V23\": new Set([\"HCC57\", \"HCC58\",\"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gRenal_V23\"] = my_dcs[\"RENAL_V23\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"] = my_dcs[\"gPsychiatric_V23\"] && my_dcs[\"gSubstanceAbuse_V23\"];\n\n  // institutional model interactions\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"CHF_gCopdCF\"] = my_dcs[\"CHF\"] && my_dcs[\"gCopdCF\"];\n  int_hccs[\"gCopdCF_CARD_RESP_FAIL\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"DIABETES_CHF\"] = my_dcs[\"DIABETES\"] && my_dcs[\"CHF\"];\n  int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n\n  if (typeof disabl !== 'undefined') {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  \n  return ccs.concat(int_hccs_new)\n}\n\nfunction v24_interactions(ccs, disabl, age = '') {\n  /*\n  Calculated interaction HCCs given a list of hccs, age, and disability flag\n  :param ccs: List of HCCs in the format \"HCC18\" no trumping or cleaning of HCCs is done in this function\n  :param disabl: CMS disabled flag\n  :param age: Optional age of beneficiary; only one interaction uses age and it will be assumed false if not entered\n  :return: List of HCC codes, including interaction codes\n  */\n  var cc_set = new Set(ccs);\n  var int_hccs = {};\n   var cnt= cc_set.length;\n   int_hccs[\"D10P\"]=cnt>9\n   var index = \"D\".concat(cnt)\n   int_hccs[index] = (cnt > 3 && cnt <10)\n  // diagnostic categories\n\n  var diag_cats = {\n      \"CANCER\": new Set([\"HCC8\", \"HCC9\", \"HCC10\", \"HCC11\", \"HCC12\"]),\n      \"DIABETES\": new Set([\"HCC17\", \"HCC18\", \"HCC19\"]),\n      \"CARD_RESP_FAIL\": new Set([\"HCC82\", \"HCC83\", \"HCC84\"]),\n      \"CHF\": new Set([\"HCC85\"]),\n      \"gCopdCF\": new Set([\"HCC110\", \"HCC111\", \"HCC112\"]),\n      \"RENAL_V24\": new Set([\"HCC134\", \"HCC135\", \"HCC136\", \"HCC137\", \"HCC138\"]),\n      \"SEPSIS\": new Set([\"HCC2\"]),\n      \"gSubstanceAbuse_V24\": new Set([\"HCC54\", \"HCC55\", \"HCC56\"]),\n      \"gPsychiatric_V24\": new Set([\"HCC57\", \"HCC58\", \"HCC59\", \"HCC60\"])\n  };\n\n  var my_dcs = {};\n\n  for (var key in diag_cats) {\n      if (diag_cats.hasOwnProperty(key)) {\n          var key_set = new Set(diag_cats[key])\n          var new_values = new Set([...key_set].filter(x => cc_set.has(x)));\n          my_dcs[key] = new_values;\n      }\n  \n  }\n  // Community Interactions\n  int_hccs[\"HCC47_gCancer\"] = my_dcs[\"CANCER\"] && new Set([...new Set([\"HCC47\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gDiabetesMellit\"] = my_dcs[\"DIABETES\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gCopdCF\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"HCC85_gRenal_V24\"] = my_dcs[\"RENAL_V24\"] && new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"gRespDepandArre_gCopdCF\"] = my_dcs[\"gCopdCF\"] && my_dcs[\"CARD_RESP_FAIL\"];\n  int_hccs[\"HCC85_HCC96\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC96\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"gSubstanceAbuse_gPsychiatric_V24\"] = my_dcs[\"gPsychiatric_V24\"] && my_dcs[\"gSubstanceAbuse_V24\"];\n\n  // institutional model interactions\n  int_hccs[\"PRESSURE_ULCER\"] = new Set([...new Set([\"HCC157\", \"HCC158\"])].filter(x => cc_set.has(x)));   \n  int_hccs[\"SEPSIS_PRESSURE_ULCER\"] = my_dcs[\"SEPSIS\"] && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"SEPSIS_ARTIF_OPENINGS\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"ART_OPENINGS_PRESSURE_ULCER\"] = new Set([...new Set([\"HCC188\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];       \n  int_hccs[\"gCopdCF_ASP_SPEC_B_PNEUM\"] = my_dcs[\"gCopdCF\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"ASP_SPEC_BACT_PNEUM_PRES_ULC\"] = new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x))) && int_hccs[\"PRESSURE_ULCER\"];\n  int_hccs[\"SEPSIS_ASP_SPEC_BACT_PNEUM\"] = my_dcs[\"SEPSIS\"] && new Set([...new Set([\"HCC114\"])].filter(x => cc_set.has(x)));\n  int_hccs[\"SCHIZOPHRENIA_gCopdCF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"gCopdCF\"];\n  int_hccs[\"SCHIZOPHRENIA_CHF\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && my_dcs[\"CHF\"];\n  int_hccs[\"SCHIZOPHRENIA_SEIZURES\"] = new Set([...new Set([\"HCC57\"])].filter(x => cc_set.has(x))) && new Set([...new Set([\"HCC79\"])].filter(x => cc_set.has(x)));\n\n  if (typeof disabl !== 'undefined') {\n      int_hccs[\"DISABLED_HCC85\"] = new Set([...new Set([\"HCC85\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_PRESSURE_ULCER\"] = int_hccs[\"PRESSURE_ULCER\"];\n      int_hccs[\"DISABLED_HCC161\"] = new Set([...new Set([\"HCC161\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC39\"] = new Set([...new Set([\"HCC39\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC77\"] = new Set([...new Set([\"HCC77\"])].filter(x => cc_set.has(x)));\n      int_hccs[\"DISABLED_HCC6\"] = new Set([...new Set([\"HCC6\"])].filter(x => cc_set.has(x)));\n\n      if (typeof age !== 'undefined' && age < 65) {\n          int_hccs[\"disable_substAbuse_psych_V23\"] = int_hccs[\"gSubstanceAbuse_gPsychiatric_V23\"]\n      }\n  }\n\n  var int_hccs_new = [];\n  for (var key in int_hccs) {\n     if (int_hccs.hasOwnProperty(key)) {\n          if (int_hccs[key].size !== 0) {\n              int_hccs_new.push(key);\n          }\n      }\n  }\n  return ccs.concat(int_hccs_new)\n}\n"],"sourceRoot":""}